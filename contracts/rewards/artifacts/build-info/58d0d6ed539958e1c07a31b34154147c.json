{
	"id": "58d0d6ed539958e1c07a31b34154147c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Orbis-balancer_old/contracts/rewards/StakingRewards.sol": {
				"content": "//SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.1;\r\n\r\nimport \"../interfaces/IStakingRewards.sol\";\r\nimport \"./RewardsDistributionRecipient.sol\";\r\nimport \"./ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n\r\ncontract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC20 public stakingToken;\r\n    uint256 public periodFinish = 0;\r\n    uint256 public rewardRate = 0;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n    bool private unBounding;\r\n    uint private durationTimestamp;\r\n\r\n    constructor(\r\n        address _rewardsDistribution,\r\n        address _rewardsToken,\r\n        address _stakingToken\r\n    )  {\r\n        rewardsToken = IERC20(_rewardsToken);\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsDistribution = _rewardsDistribution;\r\n    }\r\n\r\n    function totalSupply() external override view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external override view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function lastTimeRewardApplicable() public override view returns (uint256) {\r\n        return Math.min(block.timestamp, periodFinish);\r\n    }\r\n\r\n    function rewardPerToken() public override view returns (uint256) {\r\n        if (_totalSupply == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n        rewardPerTokenStored.add(\r\n            lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\r\n        );\r\n    }\r\n\r\n    function earned(address account) public override view returns (uint256) {\r\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n    \r\n    function stake(uint256 amount, address owner) external override nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        emit CHECK(owner, address(this), amount);\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public nonReentrant {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function unboundingPeriod(uint unboundPeriod) public override nonReentrant updateReward(msg.sender) {\r\n        unBounding = true;\r\n        durationTimestamp = block.timestamp + unboundPeriod;\r\n    }\r\n\r\n    function getReward() public override nonReentrant updateReward(msg.sender) {\r\n        require(!unBounding, \"unbounding period started\");\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.safeTransfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function exit() external override {\r\n        require(unBounding, \"unbounding not started\");\r\n        require(block.timestamp >= durationTimestamp, \"unbounding period isn't over\");\r\n        withdraw(_balances[msg.sender]);\r\n        rewardsToken.safeTransfer(msg.sender, rewards[msg.sender]);\r\n        emit RewardPaid(msg.sender, rewards[msg.sender]);\r\n    }\r\n\r\n    function notifyRewardAmount(uint256 reward, uint256 rewardsDuration) external  onlyRewardsDistribution updateReward(address(0)) {\r\n        require(block.timestamp.add(rewardsDuration) >= periodFinish, \"Cannot reduce existing period\");\r\n\r\n        if (block.timestamp >= periodFinish) {\r\n            rewardRate = reward.div(rewardsDuration);\r\n        } else {\r\n            uint256 remaining = periodFinish.sub(block.timestamp);\r\n            uint256 leftover = remaining.mul(rewardRate);\r\n            rewardRate = reward.add(leftover).div(rewardsDuration);\r\n        }\r\n\r\n        uint balance = rewardsToken.balanceOf(address(this));\r\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\r\n\r\n        lastUpdateTime = block.timestamp;\r\n        periodFinish = block.timestamp.add(rewardsDuration);\r\n        emit RewardAdded(reward, periodFinish);\r\n    }\r\n\r\n    modifier updateReward(address account) {\r\n        if (!unBounding) {\r\n            rewardPerTokenStored = rewardPerToken();\r\n            lastUpdateTime = lastTimeRewardApplicable();\r\n            if (account != address(0)) {\r\n                rewards[account] = earned(account);\r\n                userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            }\r\n        }\r\n        _;\r\n    }\r\n    event RewardAdded(uint256 reward, uint256 periodFinish);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n    event CHECK(address owner, address to, uint256 amt);\r\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol": {
				"content": "//SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.1;\r\n\r\nabstract contract ReentrancyGuard {\r\n    /// @dev counter to allow mutex lock with only one SSTORE operation\r\n    uint256 private _guardCounter;\r\n\r\n    constructor () {\r\n        // The counter starts at one to prevent changing it from zero to a non-zero\r\n        // value, which is a more expensive operation.\r\n        _guardCounter = 1;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _guardCounter += 1;\r\n        uint256 localCounter = _guardCounter;\r\n        _;\r\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\r\n    }\r\n}\r\n"
			},
			"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol": {
				"content": "//SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.1;\r\n\r\ncontract RewardsDistributionRecipient {\r\n    address public rewardsDistribution; // admin address\r\n\r\n    // function notifyRewardAmount(uint256 reward, uint256 duration) virtual external;\r\n\r\n    modifier onlyRewardsDistribution() {\r\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\r\n        _;\r\n    }\r\n}\r\n"
			},
			"Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol": {
				"content": "//SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.1;\r\n\r\ninterface IStakingRewards {\r\n    // Views\r\n    function lastTimeRewardApplicable() external view returns (uint256);\r\n\r\n    function rewardPerToken() external view returns (uint256);\r\n\r\n    function earned(address account) external view returns (uint256);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    // Mutative\r\n\r\n    function stake(uint256 amount, address owner) external;\r\n\r\n    function unboundingPeriod(uint unboundPeriod) external;\r\n\r\n    function getReward() external;\r\n\r\n    function exit() external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf023bece01945d7147204cadbd21b29078e3250bf5e4968b17a058bb3159de864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf023bece01945d7147204cadbd21b29078e3250bf5e4968b17a058bb3159de864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MUL EXTCODESIZE 0xEC 0xE0 NOT GASLIMIT 0xD7 EQ PUSH19 0x4CADBD21B29078E3250BF5E4968B17A058BB3 ISZERO SWAP14 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf023bece01945d7147204cadbd21b29078e3250bf5e4968b17a058bb3159de864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MUL EXTCODESIZE 0xEC 0xE0 NOT GASLIMIT 0xD7 EQ PUSH19 0x4CADBD21B29078E3250BF5E4968B17A058BB3 ISZERO SWAP14 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf023bece01945d7147204cadbd21b29078e3250bf5e4968b17a058bb3159de864736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:1226  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:1226  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bcae0f19dea047df7346caa6bcf58ce9595f84215a00bb71a58fb84222e3b57a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcae0f19dea047df7346caa6bcf58ce9595f84215a00bb71a58fb84222e3b57a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xAE 0xF NOT 0xDE LOG0 SELFBALANCE 0xDF PUSH20 0x46CAA6BCF58CE9595F84215A00BB71A58FB84222 0xE3 0xB5 PUSH27 0x64736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "202:1024:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcae0f19dea047df7346caa6bcf58ce9595f84215a00bb71a58fb84222e3b57a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xAE 0xF NOT 0xDE LOG0 SELFBALANCE 0xDF PUSH20 0x46CAA6BCF58CE9595F84215A00BB71A58FB84222 0xE3 0xB5 PUSH27 0x64736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "202:1024:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 1226,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bcae0f19dea047df7346caa6bcf58ce9595f84215a00bb71a58fb84222e3b57a64736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 1226,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 1226,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol": {
				"IStakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "unboundPeriod",
									"type": "uint256"
								}
							],
							"name": "unboundingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"lastTimeRewardApplicable()": "80faa57d",
							"rewardPerToken()": "cd3daf9d",
							"stake(uint256,address)": "7acb7757",
							"totalSupply()": "18160ddd",
							"unboundingPeriod(uint256)": "d505493d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unboundPeriod\",\"type\":\"uint256\"}],\"name\":\"unboundingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol\":\"IStakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0x64e32b519ba7002ea66657ee5db414e016f7eed2f2660a25284a4d2ad5bd80b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4db1e66eb4febdfda7a83e9ba7ed98f26c3092154d371cfdd873f2fa8416c07a\",\"dweb:/ipfs/QmY9M8iuAZYAandJa9omCA9xzkdQdzEhRVJGstthfjz7WT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_guardCounter": {
								"details": "counter to allow mutex lock with only one SSTORE operation"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_guardCounter\":{\"details\":\"counter to allow mutex lock with only one SSTORE operation\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":{\"keccak256\":\"0x4a2597353472f561feef075e39c8be3edfe1752cdc6ecf6fdff4ce49722a5f72\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ea7278050191338f8dd6e0b07ac2b8d6d67aa43a3c0ab80b321a8cd0e73925\",\"dweb:/ipfs/QmWwzCH27wi9YKShiEE9zYfkWMAg1utSoQqsC1xndqPuoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1051,
								"contract": "Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol": {
				"RewardsDistributionRecipient": {
					"abi": [
						{
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":66:418  contract RewardsDistributionRecipient {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":66:418  contract RewardsDistributionRecipient {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3fc6df6e\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":111:145  address public rewardsDistribution */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_9:\n        /* \"#utility.yul\":94:118   */\n      tag_11\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_14\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_9\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:455   */\n    tag_12:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:449   */\n      tag_16\n        /* \"#utility.yul\":443:448   */\n      dup3\n        /* \"#utility.yul\":425:449   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":414:449   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":461:587   */\n    tag_17:\n        /* \"#utility.yul\":498:505   */\n      0x00\n        /* \"#utility.yul\":538:580   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":531:536   */\n      dup3\n        /* \"#utility.yul\":527:581   */\n      and\n        /* \"#utility.yul\":516:581   */\n      swap1\n      pop\n        /* \"#utility.yul\":461:587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209a8950dc32750b64c1a3d62d47ed44ee50971f558948399d513070b74e79469964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fc6df6e14602d575b600080fd5b60336047565b604051603e91906078565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6072816091565b82525050565b6000602082019050608b6000830184606b565b92915050565b6000609a8260a1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea26469706673582212209a8950dc32750b64c1a3d62d47ed44ee50971f558948399d513070b74e79469964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF7 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FC6DF6E EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x72 DUP2 PUSH1 0x91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x8B PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9A DUP3 PUSH1 0xA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 DUP10 POP 0xDC ORIGIN PUSH22 0xB64C1A3D62D47ED44EE50971F558948399D513070B7 0x4E PUSH26 0x469964736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "66:352:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@rewardsDistribution_1084": {
									"entryPoint": 71,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:9",
														"type": ""
													}
												],
												"src": "7:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:9",
														"type": ""
													}
												],
												"src": "131:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "443:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "425:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:9",
														"type": ""
													}
												],
												"src": "359:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "516:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "531:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "516:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "498:7:9",
														"type": ""
													}
												],
												"src": "461:126:9"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80633fc6df6e14602d575b600080fd5b60336047565b604051603e91906078565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6072816091565b82525050565b6000602082019050608b6000830184606b565b92915050565b6000609a8260a1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea26469706673582212209a8950dc32750b64c1a3d62d47ed44ee50971f558948399d513070b74e79469964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FC6DF6E EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x72 DUP2 PUSH1 0x91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x8B PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9A DUP3 PUSH1 0xA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 DUP10 POP 0xDC ORIGIN PUSH22 0xB64C1A3D62D47ED44EE50971F558948399D513070B7 0x4E PUSH26 0x469964736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "66:352:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;111:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:118:9:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:96::-;396:7;425:24;443:5;425:24;:::i;:::-;414:35;;359:96;;;:::o;461:126::-;498:7;538:42;531:5;527:54;516:65;;461:126;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "49400",
								"executionCost": "99",
								"totalCost": "49499"
							},
							"external": {
								"rewardsDistribution()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 66,
									"end": 418,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 418,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a8950dc32750b64c1a3d62d47ed44ee50971f558948399d513070b74e79469964736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "3FC6DF6E"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 66,
											"end": 418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 455,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 359,
											"end": 455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 443,
											"end": 448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 414,
											"end": 449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 414,
											"end": 449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 359,
											"end": 455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 359,
											"end": 455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 359,
											"end": 455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 359,
											"end": 455,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 461,
											"end": 587,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 461,
											"end": 587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 498,
											"end": 505,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 580,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 527,
											"end": 581,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 516,
											"end": 581,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 516,
											"end": 581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 461,
											"end": 587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 461,
											"end": 587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 461,
											"end": 587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 461,
											"end": 587,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"rewardsDistribution()": "3fc6df6e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":\"RewardsDistributionRecipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0x958bcac90869a8e38aecb3033a7fe0dff7e542d6ee5f78a11d7df511e59d7832\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ccd5ba2503347acbf6d4cd978c03306a710a5cc95c896c541919f6b3c5b2e2a\",\"dweb:/ipfs/QmVAHbymNnSHJsB3kq3kptwvnk4AztqJ6akQXxiZX79vnd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1084,
								"contract": "Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Orbis-balancer_old/contracts/rewards/StakingRewards.sol": {
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "CHECK",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "periodFinish",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardsDuration",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "unboundPeriod",
									"type": "uint256"
								}
							],
							"name": "unboundingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":373:5586  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":634:635  0 */\n  0x00\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":604:635  uint256 public periodFinish = 0 */\n  0x04\n  sstore\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":670:671  0 */\n  0x00\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":642:671  uint256 public rewardRate = 0 */\n  0x05\n  sstore\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1029:1307  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":401:402  1 */\n  0x01\n    /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":385:398  _guardCounter */\n  dup1\n    /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":385:402  _guardCounter = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1185:1198  _rewardsToken */\n  dup2\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1163:1175  rewardsToken */\n  0x02\n  0x00\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1163:1199  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1232:1245  _stakingToken */\n  dup1\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1210:1222  stakingToken */\n  0x03\n  0x00\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1210:1246  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1279:1299  _rewardsDistribution */\n  dup3\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1257:1276  rewardsDistribution */\n  0x00\n  dup1\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1257:1299  rewardsDistribution = _rewardsDistribution */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1029:1307  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":373:5586  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:819   */\ntag_3:\n    /* \"#utility.yul\":244:250   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup1\n    /* \"#utility.yul\":260:266   */\n  0x00\n    /* \"#utility.yul\":309:311   */\n  0x60\n    /* \"#utility.yul\":297:306   */\n  dup5\n    /* \"#utility.yul\":288:295   */\n  dup7\n    /* \"#utility.yul\":284:307   */\n  sub\n    /* \"#utility.yul\":280:312   */\n  slt\n    /* \"#utility.yul\":277:396   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":315:394   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":277:396   */\ntag_15:\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":460:524   */\n  tag_18\n    /* \"#utility.yul\":516:523   */\n  dup7\n    /* \"#utility.yul\":507:513   */\n  dup3\n    /* \"#utility.yul\":496:505   */\n  dup8\n    /* \"#utility.yul\":492:514   */\n  add\n    /* \"#utility.yul\":460:524   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":450:524   */\n  swap4\n  pop\n    /* \"#utility.yul\":406:534   */\n  pop\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":599:663   */\n  tag_19\n    /* \"#utility.yul\":655:662   */\n  dup7\n    /* \"#utility.yul\":646:652   */\n  dup3\n    /* \"#utility.yul\":635:644   */\n  dup8\n    /* \"#utility.yul\":631:653   */\n  add\n    /* \"#utility.yul\":599:663   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":589:663   */\n  swap3\n  pop\n    /* \"#utility.yul\":544:673   */\n  pop\n    /* \"#utility.yul\":712:714   */\n  0x40\n    /* \"#utility.yul\":738:802   */\n  tag_20\n    /* \"#utility.yul\":794:801   */\n  dup7\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":774:783   */\n  dup8\n    /* \"#utility.yul\":770:792   */\n  add\n    /* \"#utility.yul\":738:802   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":728:802   */\n  swap2\n  pop\n    /* \"#utility.yul\":683:812   */\n  pop\n    /* \"#utility.yul\":156:819   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":906:1002   */\ntag_23:\n    /* \"#utility.yul\":943:950   */\n  0x00\n    /* \"#utility.yul\":972:996   */\n  tag_25\n    /* \"#utility.yul\":990:995   */\n  dup3\n    /* \"#utility.yul\":972:996   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":961:996   */\n  swap1\n  pop\n    /* \"#utility.yul\":906:1002   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1008:1134   */\ntag_26:\n    /* \"#utility.yul\":1045:1052   */\n  0x00\n    /* \"#utility.yul\":1085:1127   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1078:1083   */\n  dup3\n    /* \"#utility.yul\":1074:1128   */\n  and\n    /* \"#utility.yul\":1063:1128   */\n  swap1\n  pop\n    /* \"#utility.yul\":1008:1134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1263:1380   */\ntag_17:\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1386:1508   */\ntag_13:\n    /* \"#utility.yul\":1459:1483   */\n  tag_32\n    /* \"#utility.yul\":1477:1482   */\n  dup2\n    /* \"#utility.yul\":1459:1483   */\n  tag_23\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1452:1457   */\n  dup2\n    /* \"#utility.yul\":1449:1484   */\n  eq\n    /* \"#utility.yul\":1439:1502   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1498:1499   */\n  0x00\n    /* \"#utility.yul\":1495:1496   */\n  dup1\n    /* \"#utility.yul\":1488:1500   */\n  revert\n    /* \"#utility.yul\":1439:1502   */\ntag_33:\n    /* \"#utility.yul\":1386:1508   */\n  pop\n  jump\t// out\n    /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":373:5586  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":373:5586  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd505493d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x3d18b912\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3fc6df6e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7acb7757\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x246132f9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2037:2244  function earned(address account) public override view returns (uint256) {\r... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":822:864  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1315:1417  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4002:4884  function notifyRewardAmount(uint256 reward, uint256 rewardsDuration) external  onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2708:3040  function withdraw(uint256 amount) public nonReentrant {\r... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3254:3630  function getReward() public override nonReentrant updateReward(msg.sender) {\r... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":111:145  address public rewardsDistribution */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1425:1546  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":571:597  IERC20 public stakingToken */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2256:2700  function stake(uint256 amount, address owner) external override nonReentrant updateReward(msg.sender) {\r... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":642:671  uint256 public rewardRate = 0 */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1554:1694  function lastTimeRewardApplicable() public override view returns (uint256) {\r... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":758:815  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":678:707  uint256 public lastUpdateTime */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1702:2029  function rewardPerToken() public override view returns (uint256) {\r... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":538:564  IERC20 public rewardsToken */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3048:3246  function unboundingPeriod(uint unboundPeriod) public override nonReentrant updateReward(msg.sender) {\r... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":714:749  uint256 public rewardPerTokenStored */\n    tag_20:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3638:3994  function exit() external override {\r... */\n    tag_21:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":604:635  uint256 public periodFinish = 0 */\n    tag_22:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2037:2244  function earned(address account) public override view returns (uint256) {\r... */\n    tag_29:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2100:2107  uint256 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2236  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_96\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2219:2226  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2219:2235  rewards[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2227:2234  account */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2219:2235  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2214  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_97\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2209:2213  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2204  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_98\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2150:2203  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_99\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2171:2193  userRewardPerTokenPaid */\n      0x08\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2171:2202  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2194:2201  account */\n      dup10\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2171:2202  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2150:2166  rewardPerToken() */\n      tag_100\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2150:2164  rewardPerToken */\n      tag_79\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2150:2166  rewardPerToken() */\n      jump\t// in\n    tag_100:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2150:2170  rewardPerToken().sub */\n      tag_101\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2150:2203  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2136  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2145  _balances[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2137:2144  account */\n      dup10\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2145  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2149  _balances[account].mul */\n      tag_102\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2204  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2208  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      tag_103\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2214  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2218  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2127:2236  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2120:2236  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2037:2244  function earned(address account) public override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":822:864  mapping(address => uint256) public rewards */\n    tag_34:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1315:1417  function totalSupply() external override view returns (uint256) {\r... */\n    tag_37:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1370:1377  uint256 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1397:1409  _totalSupply */\n      sload(0x0a)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1390:1409  return _totalSupply */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1315:1417  function totalSupply() external override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4002:4884  function notifyRewardAmount(uint256 reward, uint256 rewardsDuration) external  onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_42:\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":329:348  rewardsDistribution */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":315:348  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":315:325  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":315:348  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":307:395  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4126:4127  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4947:4957  unBounding */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n      tag_111\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      tag_112\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5011  rewardPerToken */\n      tag_79\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      jump\t// in\n    tag_112:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:4994  rewardPerTokenStored */\n      0x07\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:5013  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      tag_113\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5069  lastTimeRewardApplicable */\n      tag_69\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_113:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5042  lastUpdateTime */\n      0x06\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5071  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5109:5110  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5097  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n      tag_114\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      tag_115\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5158:5165  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5157  earned */\n      tag_29\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      jump\t// in\n    tag_115:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5139  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5140:5147  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5166  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5219:5239  rewardPerTokenStored */\n      sload(0x07)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5207  userRewardPerTokenPaid */\n      0x08\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5208:5215  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5239  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n    tag_114:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n    tag_111:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4189:4201  periodFinish */\n      sload(0x04)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4149:4185  block.timestamp.add(rewardsDuration) */\n      tag_117\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4169:4184  rewardsDuration */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4149:4164  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4149:4168  block.timestamp.add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4149:4185  block.timestamp.add(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4149:4201  block.timestamp.add(rewardsDuration) >= periodFinish */\n      lt\n      iszero\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4141:4235  require(block.timestamp.add(rewardsDuration) >= periodFinish, \"Cannot reduce existing period\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4271:4283  periodFinish */\n      sload(0x04)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4252:4267  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4252:4283  block.timestamp >= periodFinish */\n      lt\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4248:4566  if (block.timestamp >= periodFinish) {\r... */\n      tag_121\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4313:4340  reward.div(rewardsDuration) */\n      tag_122\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4324:4339  rewardsDuration */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4313:4319  reward */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4313:4323  reward.div */\n      tag_103\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4313:4340  reward.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4300:4310  rewardRate */\n      0x05\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4300:4340  rewardRate = reward.div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4248:4566  if (block.timestamp >= periodFinish) {\r... */\n      jump(tag_123)\n    tag_121:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4373:4390  uint256 remaining */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4393:4426  periodFinish.sub(block.timestamp) */\n      tag_124\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4410:4425  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4393:4405  periodFinish */\n      sload(0x04)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4393:4409  periodFinish.sub */\n      tag_101\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4393:4426  periodFinish.sub(block.timestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4373:4426  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4441:4457  uint256 leftover */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4460:4485  remaining.mul(rewardRate) */\n      tag_125\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4474:4484  rewardRate */\n      sload(0x05)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4460:4469  remaining */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4460:4473  remaining.mul */\n      tag_102\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4460:4485  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4441:4485  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4554  reward.add(leftover).div(rewardsDuration) */\n      tag_126\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4538:4553  rewardsDuration */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4533  reward.add(leftover) */\n      tag_127\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4524:4532  leftover */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4519  reward */\n      dup9\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4523  reward.add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4533  reward.add(leftover) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4537  reward.add(leftover).div */\n      tag_103\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4513:4554  reward.add(leftover).div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4500:4510  rewardRate */\n      0x05\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4500:4554  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4358:4566  {\r... */\n      pop\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4248:4566  if (block.timestamp >= periodFinish) {\r... */\n    tag_123:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4578:4590  uint balance */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4593:4605  rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4593:4615  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4624:4628  this */\n      address\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4593:4630  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4578:4630  uint balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4663:4691  balance.div(rewardsDuration) */\n      tag_134\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4675:4690  rewardsDuration */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4663:4670  balance */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4663:4674  balance.div */\n      tag_103\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4663:4691  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4649:4659  rewardRate */\n      sload(0x05)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4649:4691  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4641:4720  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4750:4765  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4733:4747  lastUpdateTime */\n      0x06\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4733:4765  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4791:4827  block.timestamp.add(rewardsDuration) */\n      tag_138\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4811:4826  rewardsDuration */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4791:4806  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4791:4810  block.timestamp.add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4791:4827  block.timestamp.add(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4776:4788  periodFinish */\n      0x04\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4776:4827  periodFinish = block.timestamp.add(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4843:4876  RewardAdded(reward, periodFinish) */\n      0x6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4855:4861  reward */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4863:4875  periodFinish */\n      sload(0x04)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4843:4876  RewardAdded(reward, periodFinish) */\n      mload(0x40)\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4130:4884  {\r... */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":406:407  _ */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4002:4884  function notifyRewardAmount(uint256 reward, uint256 rewardsDuration) external  onlyRewardsDistribution updateReward(address(0)) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2708:3040  function withdraw(uint256 amount) public nonReentrant {\r... */\n    tag_46:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":846:847  1 */\n      0x01\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:842  _guardCounter */\n      dup1\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:847  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:878  uint256 localCounter */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":881:894  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:894  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2790:2791  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2781:2787  amount */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2781:2791  amount > 0 */\n      gt\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2773:2813  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2839:2863  _totalSupply.sub(amount) */\n      tag_148\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2856:2862  amount */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2839:2851  _totalSupply */\n      sload(0x0a)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2839:2855  _totalSupply.sub */\n      tag_101\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2839:2863  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2824:2836  _totalSupply */\n      0x0a\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2824:2863  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2898:2931  _balances[msg.sender].sub(amount) */\n      tag_149\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2924:2930  amount */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2898:2907  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2898:2919  _balances[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2908:2918  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2898:2919  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2898:2923  _balances[msg.sender].sub */\n      tag_101\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2898:2931  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2874:2883  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2874:2895  _balances[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2884:2894  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2874:2895  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2874:2931  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2942:2987  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_150\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2968:2978  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2980:2986  amount */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2942:2954  stakingToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2942:2967  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2942:2987  stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3013:3023  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3003:3032  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3025:3031  amount */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3003:3032  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":941:954  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:937  localCounter */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:954  localCounter == _guardCounter */\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":917:990  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":818:998  {\r... */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2708:3040  function withdraw(uint256 amount) public nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3254:3630  function getReward() public override nonReentrant updateReward(msg.sender) {\r... */\n    tag_48:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":846:847  1 */\n      0x01\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:842  _guardCounter */\n      dup1\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:847  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:878  uint256 localCounter */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":881:894  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:894  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3317:3327  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4947:4957  unBounding */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n      tag_159\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      tag_160\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5011  rewardPerToken */\n      tag_79\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      jump\t// in\n    tag_160:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:4994  rewardPerTokenStored */\n      0x07\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:5013  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      tag_161\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5069  lastTimeRewardApplicable */\n      tag_69\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_161:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5042  lastUpdateTime */\n      0x06\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5071  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5109:5110  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5097  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n      tag_162\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      tag_163\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5158:5165  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5157  earned */\n      tag_29\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      jump\t// in\n    tag_163:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5139  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5140:5147  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5166  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5219:5239  rewardPerTokenStored */\n      sload(0x07)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5207  userRewardPerTokenPaid */\n      0x08\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5208:5215  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5239  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n    tag_162:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n    tag_159:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3349:3359  unBounding */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3348:3359  !unBounding */\n      iszero\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3340:3389  require(!unBounding, \"unbounding period started\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3400:3414  uint256 reward */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3417:3424  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3417:3436  rewards[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3425:3435  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3417:3436  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3400:3436  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3460:3461  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3451:3457  reward */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3451:3461  reward > 0 */\n      gt\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3447:3623  if (reward > 0) {\r... */\n      iszero\n      tag_168\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3500:3501  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3478:3485  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3478:3497  rewards[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3486:3496  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3478:3497  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3478:3501  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3516:3561  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_169\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3542:3552  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3554:3560  reward */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3516:3528  rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3516:3541  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3516:3561  rewardsToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3592:3602  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3581:3611  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3604:3610  reward */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3581:3611  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3447:3623  if (reward > 0) {\r... */\n    tag_168:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3329:3630  {\r... */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":905:906  _ */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":941:954  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:937  localCounter */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:954  localCounter == _guardCounter */\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":917:990  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_155\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":818:998  {\r... */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3254:3630  function getReward() public override nonReentrant updateReward(msg.sender) {\r... */\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":111:145  address public rewardsDistribution */\n    tag_50:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1425:1546  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_55:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1493:1500  uint256 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1520:1529  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1520:1538  _balances[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1530:1537  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1520:1538  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1513:1538  return _balances[account] */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1425:1546  function balanceOf(address account) external override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":571:597  IERC20 public stakingToken */\n    tag_58:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2256:2700  function stake(uint256 amount, address owner) external override nonReentrant updateReward(msg.sender) {\r... */\n    tag_64:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":846:847  1 */\n      0x01\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:842  _guardCounter */\n      dup1\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:847  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:878  uint256 localCounter */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":881:894  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:894  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2346:2356  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4947:4957  unBounding */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n      tag_177\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      tag_178\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5011  rewardPerToken */\n      tag_79\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      jump\t// in\n    tag_178:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:4994  rewardPerTokenStored */\n      0x07\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:5013  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      tag_179\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5069  lastTimeRewardApplicable */\n      tag_69\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_179:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5042  lastUpdateTime */\n      0x06\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5071  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5109:5110  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5097  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n      tag_180\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      tag_181\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5158:5165  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5157  earned */\n      tag_29\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      jump\t// in\n    tag_181:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5139  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5140:5147  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5166  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5219:5239  rewardPerTokenStored */\n      sload(0x07)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5207  userRewardPerTokenPaid */\n      0x08\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5208:5215  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5239  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n    tag_180:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n    tag_177:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2386:2387  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2377:2383  amount */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2377:2387  amount > 0 */\n      gt\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2369:2406  require(amount > 0, \"Cannot stake 0\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2432:2456  _totalSupply.add(amount) */\n      tag_186\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2449:2455  amount */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2432:2444  _totalSupply */\n      sload(0x0a)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2432:2448  _totalSupply.add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2432:2456  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2417:2429  _totalSupply */\n      0x0a\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2417:2456  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2491:2524  _balances[msg.sender].add(amount) */\n      tag_187\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2517:2523  amount */\n      dup5\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2491:2500  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2491:2512  _balances[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2501:2511  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2491:2512  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2491:2516  _balances[msg.sender].add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2491:2524  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2467:2476  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2467:2488  _balances[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2477:2487  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2467:2488  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2467:2524  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2540:2575  CHECK(owner, address(this), amount) */\n      0xc90ba2f1821a1933b06a152b152556d33fb65bcc1366bfa839c68715b039f615\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2546:2551  owner */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2561:2565  this */\n      address\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2568:2574  amount */\n      dup7\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2540:2575  CHECK(owner, address(this), amount) */\n      mload(0x40)\n      tag_188\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2586:2650  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_190\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2616:2626  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2636:2640  this */\n      address\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2643:2649  amount */\n      dup7\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2586:2598  stakingToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2586:2615  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_191\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2586:2650  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2673:2683  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2666:2692  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2685:2691  amount */\n      dup6\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2666:2692  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":905:906  _ */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":941:954  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:937  localCounter */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:954  localCounter == _guardCounter */\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":917:990  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_155\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":818:998  {\r... */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":2256:2700  function stake(uint256 amount, address owner) external override nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":642:671  uint256 public rewardRate = 0 */\n    tag_66:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1554:1694  function lastTimeRewardApplicable() public override view returns (uint256) {\r... */\n    tag_69:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1620:1627  uint256 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1647:1686  Math.min(block.timestamp, periodFinish) */\n      tag_196\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1656:1671  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1673:1685  periodFinish */\n      sload(0x04)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1647:1655  Math.min */\n      tag_197\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1647:1686  Math.min(block.timestamp, periodFinish) */\n      jump\t// in\n    tag_196:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1640:1686  return Math.min(block.timestamp, periodFinish) */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1554:1694  function lastTimeRewardApplicable() public override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":758:815  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_73:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":678:707  uint256 public lastUpdateTime */\n    tag_76:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1702:2029  function rewardPerToken() public override view returns (uint256) {\r... */\n    tag_79:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1758:1765  uint256 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1798:1799  0 */\n      dup1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1782:1794  _totalSupply */\n      sload(0x0a)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1782:1799  _totalSupply == 0 */\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1778:1855  if (_totalSupply == 0) {\r... */\n      iszero\n      tag_199\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1823:1843  rewardPerTokenStored */\n      sload(0x07)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1816:1843  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_198)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1778:1855  if (_totalSupply == 0) {\r... */\n    tag_199:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1881:2021  rewardPerTokenStored.add(\r... */\n      tag_200\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:2010  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_201\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1997:2009  _totalSupply */\n      sload(0x0a)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1992  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_202\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1987:1991  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1982  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_203\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1971:1981  rewardRate */\n      sload(0x05)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1966  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_204\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1951:1965  lastUpdateTime */\n      sload(0x06)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1946  lastTimeRewardApplicable() */\n      tag_205\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1944  lastTimeRewardApplicable */\n      tag_69\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1946  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_205:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1950  lastTimeRewardApplicable().sub */\n      tag_101\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1966  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1970  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_102\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1982  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1986  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_102\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1992  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:1996  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_103\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1920:2010  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1881:1901  rewardPerTokenStored */\n      sload(0x07)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1881:1905  rewardPerTokenStored.add */\n      tag_104\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1881:2021  rewardPerTokenStored.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1865:2021  return\r... */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":1702:2029  function rewardPerToken() public override view returns (uint256) {\r... */\n    tag_198:\n      swap1\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":538:564  IERC20 public rewardsToken */\n    tag_82:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3048:3246  function unboundingPeriod(uint unboundPeriod) public override nonReentrant updateReward(msg.sender) {\r... */\n    tag_86:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":846:847  1 */\n      0x01\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:842  _guardCounter */\n      dup1\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":829:847  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:878  uint256 localCounter */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":881:894  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":858:894  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3136:3146  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4947:4957  unBounding */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n      tag_209\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      tag_210\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5011  rewardPerToken */\n      tag_79\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4997:5013  rewardPerToken() */\n      jump\t// in\n    tag_210:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:4994  rewardPerTokenStored */\n      0x07\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4974:5013  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      tag_211\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5069  lastTimeRewardApplicable */\n      tag_69\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5045:5071  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_211:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5042  lastUpdateTime */\n      0x06\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5028:5071  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5109:5110  0 */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5097  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5090:5111  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n      tag_212\n      jumpi\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      tag_213\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5158:5165  account */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5157  earned */\n      tag_29\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5151:5166  earned(account) */\n      jump\t// in\n    tag_213:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5139  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5140:5147  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5148  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5132:5166  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5219:5239  rewardPerTokenStored */\n      sload(0x07)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5207  userRewardPerTokenPaid */\n      0x08\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5208:5215  account */\n      dup4\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5216  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5185:5239  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":5086:5255  if (account != address(0)) {\r... */\n    tag_212:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":4942:5266  if (!unBounding) {\r... */\n    tag_209:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3172:3176  true */\n      0x01\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3159:3169  unBounding */\n      0x0c\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3159:3176  unBounding = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3225:3238  unboundPeriod */\n      dup3\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3207:3222  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3207:3238  block.timestamp + unboundPeriod */\n      tag_215\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_215:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3187:3204  durationTimestamp */\n      0x0d\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3187:3238  durationTimestamp = block.timestamp + unboundPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":905:906  _ */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":941:954  _guardCounter */\n      sload(0x01)\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:937  localCounter */\n      dup2\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":925:954  localCounter == _guardCounter */\n      eq\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":917:990  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_155\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":818:998  {\r... */\n      pop\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3048:3246  function unboundingPeriod(uint unboundPeriod) public override nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":714:749  uint256 public rewardPerTokenStored */\n    tag_88:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3638:3994  function exit() external override {\r... */\n    tag_91:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3691:3701  unBounding */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3683:3728  require(unBounding, \"unbounding not started\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3766:3783  durationTimestamp */\n      sload(0x0d)\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3747:3762  block.timestamp */\n      timestamp\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3747:3783  block.timestamp >= durationTimestamp */\n      lt\n      iszero\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3739:3816  require(block.timestamp >= durationTimestamp, \"unbounding period isn't over\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3827:3858  withdraw(_balances[msg.sender]) */\n      tag_225\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3836:3845  _balances */\n      0x0b\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3836:3857  _balances[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3846:3856  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3836:3857  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3827:3835  withdraw */\n      tag_46\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3827:3858  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_225:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3869:3927  rewardsToken.safeTransfer(msg.sender, rewards[msg.sender]) */\n      tag_226\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3895:3905  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3907:3914  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3907:3926  rewards[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3915:3925  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3907:3926  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3869:3881  rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3869:3894  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3869:3927  rewardsToken.safeTransfer(msg.sender, rewards[msg.sender]) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3954:3964  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3943:3986  RewardPaid(msg.sender, rewards[msg.sender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3966:3973  rewards */\n      0x09\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3966:3985  rewards[msg.sender] */\n      0x00\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3974:3984  msg.sender */\n      caller\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3966:3985  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3943:3986  RewardPaid(msg.sender, rewards[msg.sender]) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":3638:3994  function exit() external override {\r... */\n      jump\t// out\n        /* \"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":604:635  uint256 public periodFinish = 0 */\n    tag_93:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_238\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1129:1133  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1135:1137  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1144  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":461:565  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":519:526  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":549:550  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":545:546  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":545:550  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":545:558  a < b ? a : b */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":557:558  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":545:558  a < b ? a : b */\n      jump(tag_249)\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":553:554  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":545:558  a < b ? a : b */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":538:558  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":461:565  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_252\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_260\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_275\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_274)\n    tag_275:\n      0x60\n      swap2\n      pop\n    tag_274:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_276\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_279)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_279:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_287:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_289\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_291:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_293\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_295:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_297\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_299:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_301\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_298\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_28:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_304\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":665:784   */\n    tag_303:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_306\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_287\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_255:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_309\n      tag_305\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1008:1127   */\n    tag_308:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_310\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_291\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_45:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_313\n      tag_305\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1351:1470   */\n    tag_312:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_314\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_295\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_133:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_317\n      tag_305\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1697:1816   */\n    tag_316:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_318\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_299\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_63:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_321\n      tag_305\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2060:2179   */\n    tag_320:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_322\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_295\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_323\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_287\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2921   */\n    tag_41:\n        /* \"#utility.yul\":2515:2521   */\n      0x00\n        /* \"#utility.yul\":2523:2529   */\n      dup1\n        /* \"#utility.yul\":2572:2574   */\n      0x40\n        /* \"#utility.yul\":2560:2569   */\n      dup4\n        /* \"#utility.yul\":2551:2558   */\n      dup6\n        /* \"#utility.yul\":2547:2570   */\n      sub\n        /* \"#utility.yul\":2543:2575   */\n      slt\n        /* \"#utility.yul\":2540:2659   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2578:2657   */\n      tag_326\n      tag_305\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2540:2659   */\n    tag_325:\n        /* \"#utility.yul\":2698:2699   */\n      0x00\n        /* \"#utility.yul\":2723:2776   */\n      tag_327\n        /* \"#utility.yul\":2768:2775   */\n      dup6\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2748:2757   */\n      dup7\n        /* \"#utility.yul\":2744:2766   */\n      add\n        /* \"#utility.yul\":2723:2776   */\n      tag_295\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2713:2776   */\n      swap3\n      pop\n        /* \"#utility.yul\":2669:2786   */\n      pop\n        /* \"#utility.yul\":2825:2827   */\n      0x20\n        /* \"#utility.yul\":2851:2904   */\n      tag_328\n        /* \"#utility.yul\":2896:2903   */\n      dup6\n        /* \"#utility.yul\":2887:2893   */\n      dup3\n        /* \"#utility.yul\":2876:2885   */\n      dup7\n        /* \"#utility.yul\":2872:2894   */\n      add\n        /* \"#utility.yul\":2851:2904   */\n      tag_295\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2841:2904   */\n      swap2\n      pop\n        /* \"#utility.yul\":2796:2914   */\n      pop\n        /* \"#utility.yul\":2447:2921   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2927:3045   */\n    tag_329:\n        /* \"#utility.yul\":3014:3038   */\n      tag_331\n        /* \"#utility.yul\":3032:3037   */\n      dup2\n        /* \"#utility.yul\":3014:3038   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3009:3012   */\n      dup3\n        /* \"#utility.yul\":3002:3039   */\n      mstore\n        /* \"#utility.yul\":2927:3045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3424   */\n    tag_333:\n        /* \"#utility.yul\":3155:3158   */\n      0x00\n        /* \"#utility.yul\":3183:3221   */\n      tag_335\n        /* \"#utility.yul\":3215:3220   */\n      dup3\n        /* \"#utility.yul\":3183:3221   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3237:3325   */\n      tag_337\n        /* \"#utility.yul\":3318:3324   */\n      dup2\n        /* \"#utility.yul\":3313:3316   */\n      dup6\n        /* \"#utility.yul\":3237:3325   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3230:3325   */\n      swap4\n      pop\n        /* \"#utility.yul\":3334:3386   */\n      tag_339\n        /* \"#utility.yul\":3379:3385   */\n      dup2\n        /* \"#utility.yul\":3374:3377   */\n      dup6\n        /* \"#utility.yul\":3367:3371   */\n      0x20\n        /* \"#utility.yul\":3360:3365   */\n      dup7\n        /* \"#utility.yul\":3356:3372   */\n      add\n        /* \"#utility.yul\":3334:3386   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3411:3417   */\n      dup1\n        /* \"#utility.yul\":3406:3409   */\n      dup5\n        /* \"#utility.yul\":3402:3418   */\n      add\n        /* \"#utility.yul\":3395:3418   */\n      swap2\n      pop\n        /* \"#utility.yul\":3159:3424   */\n      pop\n        /* \"#utility.yul\":3051:3424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3430:3587   */\n    tag_341:\n        /* \"#utility.yul\":3530:3580   */\n      tag_343\n        /* \"#utility.yul\":3574:3579   */\n      dup2\n        /* \"#utility.yul\":3530:3580   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3525:3528   */\n      dup3\n        /* \"#utility.yul\":3518:3581   */\n      mstore\n        /* \"#utility.yul\":3430:3587   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3593:3957   */\n    tag_345:\n        /* \"#utility.yul\":3681:3684   */\n      0x00\n        /* \"#utility.yul\":3709:3748   */\n      tag_347\n        /* \"#utility.yul\":3742:3747   */\n      dup3\n        /* \"#utility.yul\":3709:3748   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3764:3835   */\n      tag_349\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3823:3826   */\n      dup6\n        /* \"#utility.yul\":3764:3835   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3757:3835   */\n      swap4\n      pop\n        /* \"#utility.yul\":3844:3896   */\n      tag_351\n        /* \"#utility.yul\":3889:3895   */\n      dup2\n        /* \"#utility.yul\":3884:3887   */\n      dup6\n        /* \"#utility.yul\":3877:3881   */\n      0x20\n        /* \"#utility.yul\":3870:3875   */\n      dup7\n        /* \"#utility.yul\":3866:3882   */\n      add\n        /* \"#utility.yul\":3844:3896   */\n      tag_340\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3921:3950   */\n      tag_352\n        /* \"#utility.yul\":3943:3949   */\n      dup2\n        /* \"#utility.yul\":3921:3950   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3916:3919   */\n      dup5\n        /* \"#utility.yul\":3912:3951   */\n      add\n        /* \"#utility.yul\":3905:3951   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3957   */\n      pop\n        /* \"#utility.yul\":3593:3957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3963:4329   */\n    tag_354:\n        /* \"#utility.yul\":4105:4108   */\n      0x00\n        /* \"#utility.yul\":4126:4193   */\n      tag_356\n        /* \"#utility.yul\":4190:4192   */\n      0x19\n        /* \"#utility.yul\":4185:4188   */\n      dup4\n        /* \"#utility.yul\":4126:4193   */\n      tag_350\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4119:4193   */\n      swap2\n      pop\n        /* \"#utility.yul\":4202:4295   */\n      tag_357\n        /* \"#utility.yul\":4291:4294   */\n      dup3\n        /* \"#utility.yul\":4202:4295   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4320:4322   */\n      0x20\n        /* \"#utility.yul\":4315:4318   */\n      dup3\n        /* \"#utility.yul\":4311:4323   */\n      add\n        /* \"#utility.yul\":4304:4323   */\n      swap1\n      pop\n        /* \"#utility.yul\":3963:4329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4701   */\n    tag_359:\n        /* \"#utility.yul\":4477:4480   */\n      0x00\n        /* \"#utility.yul\":4498:4565   */\n      tag_361\n        /* \"#utility.yul\":4562:4564   */\n      0x1c\n        /* \"#utility.yul\":4557:4560   */\n      dup4\n        /* \"#utility.yul\":4498:4565   */\n      tag_350\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4491:4565   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4667   */\n      tag_362\n        /* \"#utility.yul\":4663:4666   */\n      dup3\n        /* \"#utility.yul\":4574:4667   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4692:4694   */\n      0x20\n        /* \"#utility.yul\":4687:4690   */\n      dup3\n        /* \"#utility.yul\":4683:4695   */\n      add\n        /* \"#utility.yul\":4676:4695   */\n      swap1\n      pop\n        /* \"#utility.yul\":4335:4701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4707:5073   */\n    tag_364:\n        /* \"#utility.yul\":4849:4852   */\n      0x00\n        /* \"#utility.yul\":4870:4937   */\n      tag_366\n        /* \"#utility.yul\":4934:4936   */\n      0x0e\n        /* \"#utility.yul\":4929:4932   */\n      dup4\n        /* \"#utility.yul\":4870:4937   */\n      tag_350\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4863:4937   */\n      swap2\n      pop\n        /* \"#utility.yul\":4946:5039   */\n      tag_367\n        /* \"#utility.yul\":5035:5038   */\n      dup3\n        /* \"#utility.yul\":4946:5039   */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5064:5066   */\n      0x20\n        /* \"#utility.yul\":5059:5062   */\n      dup3\n        /* \"#utility.yul\":5055:5067   */\n      add\n        /* \"#utility.yul\":5048:5067   */\n      swap1\n      pop\n        /* \"#utility.yul\":4707:5073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5079:5445   */\n    tag_369:\n        /* \"#utility.yul\":5221:5224   */\n      0x00\n        /* \"#utility.yul\":5242:5309   */\n      tag_371\n        /* \"#utility.yul\":5306:5308   */\n      0x26\n        /* \"#utility.yul\":5301:5304   */\n      dup4\n        /* \"#utility.yul\":5242:5309   */\n      tag_350\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5235:5309   */\n      swap2\n      pop\n        /* \"#utility.yul\":5318:5411   */\n      tag_372\n        /* \"#utility.yul\":5407:5410   */\n      dup3\n        /* \"#utility.yul\":5318:5411   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5436:5438   */\n      0x40\n        /* \"#utility.yul\":5431:5434   */\n      dup3\n        /* \"#utility.yul\":5427:5439   */\n      add\n        /* \"#utility.yul\":5420:5439   */\n      swap1\n      pop\n        /* \"#utility.yul\":5079:5445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5451:5817   */\n    tag_374:\n        /* \"#utility.yul\":5593:5596   */\n      0x00\n        /* \"#utility.yul\":5614:5681   */\n      tag_376\n        /* \"#utility.yul\":5678:5680   */\n      0x16\n        /* \"#utility.yul\":5673:5676   */\n      dup4\n        /* \"#utility.yul\":5614:5681   */\n      tag_350\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5607:5681   */\n      swap2\n      pop\n        /* \"#utility.yul\":5690:5783   */\n      tag_377\n        /* \"#utility.yul\":5779:5782   */\n      dup3\n        /* \"#utility.yul\":5690:5783   */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5808:5810   */\n      0x20\n        /* \"#utility.yul\":5803:5806   */\n      dup3\n        /* \"#utility.yul\":5799:5811   */\n      add\n        /* \"#utility.yul\":5792:5811   */\n      swap1\n      pop\n        /* \"#utility.yul\":5451:5817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:6189   */\n    tag_379:\n        /* \"#utility.yul\":5965:5968   */\n      0x00\n        /* \"#utility.yul\":5986:6053   */\n      tag_381\n        /* \"#utility.yul\":6050:6052   */\n      0x1d\n        /* \"#utility.yul\":6045:6048   */\n      dup4\n        /* \"#utility.yul\":5986:6053   */\n      tag_350\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5979:6053   */\n      swap2\n      pop\n        /* \"#utility.yul\":6062:6155   */\n      tag_382\n        /* \"#utility.yul\":6151:6154   */\n      dup3\n        /* \"#utility.yul\":6062:6155   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"#utility.yul\":6175:6178   */\n      dup3\n        /* \"#utility.yul\":6171:6183   */\n      add\n        /* \"#utility.yul\":6164:6183   */\n      swap1\n      pop\n        /* \"#utility.yul\":5823:6189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6195:6561   */\n    tag_384:\n        /* \"#utility.yul\":6337:6340   */\n      0x00\n        /* \"#utility.yul\":6358:6425   */\n      tag_386\n        /* \"#utility.yul\":6422:6424   */\n      0x11\n        /* \"#utility.yul\":6417:6420   */\n      dup4\n        /* \"#utility.yul\":6358:6425   */\n      tag_350\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6351:6425   */\n      swap2\n      pop\n        /* \"#utility.yul\":6434:6527   */\n      tag_387\n        /* \"#utility.yul\":6523:6526   */\n      dup3\n        /* \"#utility.yul\":6434:6527   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6552:6554   */\n      0x20\n        /* \"#utility.yul\":6547:6550   */\n      dup3\n        /* \"#utility.yul\":6543:6555   */\n      add\n        /* \"#utility.yul\":6536:6555   */\n      swap1\n      pop\n        /* \"#utility.yul\":6195:6561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6567:6933   */\n    tag_389:\n        /* \"#utility.yul\":6709:6712   */\n      0x00\n        /* \"#utility.yul\":6730:6797   */\n      tag_391\n        /* \"#utility.yul\":6794:6796   */\n      0x18\n        /* \"#utility.yul\":6789:6792   */\n      dup4\n        /* \"#utility.yul\":6730:6797   */\n      tag_350\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6723:6797   */\n      swap2\n      pop\n        /* \"#utility.yul\":6806:6899   */\n      tag_392\n        /* \"#utility.yul\":6895:6898   */\n      dup3\n        /* \"#utility.yul\":6806:6899   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6924:6926   */\n      0x20\n        /* \"#utility.yul\":6919:6922   */\n      dup3\n        /* \"#utility.yul\":6915:6927   */\n      add\n        /* \"#utility.yul\":6908:6927   */\n      swap1\n      pop\n        /* \"#utility.yul\":6567:6933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6939:7305   */\n    tag_394:\n        /* \"#utility.yul\":7081:7084   */\n      0x00\n        /* \"#utility.yul\":7102:7169   */\n      tag_396\n        /* \"#utility.yul\":7166:7168   */\n      0x1d\n        /* \"#utility.yul\":7161:7164   */\n      dup4\n        /* \"#utility.yul\":7102:7169   */\n      tag_350\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7095:7169   */\n      swap2\n      pop\n        /* \"#utility.yul\":7178:7271   */\n      tag_397\n        /* \"#utility.yul\":7267:7270   */\n      dup3\n        /* \"#utility.yul\":7178:7271   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7296:7298   */\n      0x20\n        /* \"#utility.yul\":7291:7294   */\n      dup3\n        /* \"#utility.yul\":7287:7299   */\n      add\n        /* \"#utility.yul\":7280:7299   */\n      swap1\n      pop\n        /* \"#utility.yul\":6939:7305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7311:7677   */\n    tag_399:\n        /* \"#utility.yul\":7453:7456   */\n      0x00\n        /* \"#utility.yul\":7474:7541   */\n      tag_401\n        /* \"#utility.yul\":7538:7540   */\n      0x2a\n        /* \"#utility.yul\":7533:7536   */\n      dup4\n        /* \"#utility.yul\":7474:7541   */\n      tag_350\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7467:7541   */\n      swap2\n      pop\n        /* \"#utility.yul\":7550:7643   */\n      tag_402\n        /* \"#utility.yul\":7639:7642   */\n      dup3\n        /* \"#utility.yul\":7550:7643   */\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7668:7670   */\n      0x40\n        /* \"#utility.yul\":7663:7666   */\n      dup3\n        /* \"#utility.yul\":7659:7671   */\n      add\n        /* \"#utility.yul\":7652:7671   */\n      swap1\n      pop\n        /* \"#utility.yul\":7311:7677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7683:8049   */\n    tag_404:\n        /* \"#utility.yul\":7825:7828   */\n      0x00\n        /* \"#utility.yul\":7846:7913   */\n      tag_406\n        /* \"#utility.yul\":7910:7912   */\n      0x2a\n        /* \"#utility.yul\":7905:7908   */\n      dup4\n        /* \"#utility.yul\":7846:7913   */\n      tag_350\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7839:7913   */\n      swap2\n      pop\n        /* \"#utility.yul\":7922:8015   */\n      tag_407\n        /* \"#utility.yul\":8011:8014   */\n      dup3\n        /* \"#utility.yul\":7922:8015   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8040:8042   */\n      0x40\n        /* \"#utility.yul\":8035:8038   */\n      dup3\n        /* \"#utility.yul\":8031:8043   */\n      add\n        /* \"#utility.yul\":8024:8043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7683:8049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8421   */\n    tag_409:\n        /* \"#utility.yul\":8197:8200   */\n      0x00\n        /* \"#utility.yul\":8218:8285   */\n      tag_411\n        /* \"#utility.yul\":8282:8284   */\n      0x1f\n        /* \"#utility.yul\":8277:8280   */\n      dup4\n        /* \"#utility.yul\":8218:8285   */\n      tag_350\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8211:8285   */\n      swap2\n      pop\n        /* \"#utility.yul\":8294:8387   */\n      tag_412\n        /* \"#utility.yul\":8383:8386   */\n      dup3\n        /* \"#utility.yul\":8294:8387   */\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8407:8410   */\n      dup3\n        /* \"#utility.yul\":8403:8415   */\n      add\n        /* \"#utility.yul\":8396:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8055:8421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8427:8545   */\n    tag_414:\n        /* \"#utility.yul\":8514:8538   */\n      tag_416\n        /* \"#utility.yul\":8532:8537   */\n      dup2\n        /* \"#utility.yul\":8514:8538   */\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8509:8512   */\n      dup3\n        /* \"#utility.yul\":8502:8539   */\n      mstore\n        /* \"#utility.yul\":8427:8545   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8551:8822   */\n    tag_272:\n        /* \"#utility.yul\":8681:8684   */\n      0x00\n        /* \"#utility.yul\":8703:8796   */\n      tag_419\n        /* \"#utility.yul\":8792:8795   */\n      dup3\n        /* \"#utility.yul\":8783:8789   */\n      dup5\n        /* \"#utility.yul\":8703:8796   */\n      tag_333\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8696:8796   */\n      swap2\n      pop\n        /* \"#utility.yul\":8813:8816   */\n      dup2\n        /* \"#utility.yul\":8806:8816   */\n      swap1\n      pop\n        /* \"#utility.yul\":8551:8822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:9050   */\n    tag_52:\n        /* \"#utility.yul\":8921:8925   */\n      0x00\n        /* \"#utility.yul\":8959:8961   */\n      0x20\n        /* \"#utility.yul\":8948:8957   */\n      dup3\n        /* \"#utility.yul\":8944:8962   */\n      add\n        /* \"#utility.yul\":8936:8962   */\n      swap1\n      pop\n        /* \"#utility.yul\":8972:9043   */\n      tag_421\n        /* \"#utility.yul\":9040:9041   */\n      0x00\n        /* \"#utility.yul\":9029:9038   */\n      dup4\n        /* \"#utility.yul\":9025:9042   */\n      add\n        /* \"#utility.yul\":9016:9022   */\n      dup5\n        /* \"#utility.yul\":8972:9043   */\n      tag_329\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8828:9050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9056:9498   */\n    tag_189:\n        /* \"#utility.yul\":9205:9209   */\n      0x00\n        /* \"#utility.yul\":9243:9245   */\n      0x60\n        /* \"#utility.yul\":9232:9241   */\n      dup3\n        /* \"#utility.yul\":9228:9246   */\n      add\n        /* \"#utility.yul\":9220:9246   */\n      swap1\n      pop\n        /* \"#utility.yul\":9256:9327   */\n      tag_423\n        /* \"#utility.yul\":9324:9325   */\n      0x00\n        /* \"#utility.yul\":9313:9322   */\n      dup4\n        /* \"#utility.yul\":9309:9326   */\n      add\n        /* \"#utility.yul\":9300:9306   */\n      dup7\n        /* \"#utility.yul\":9256:9327   */\n      tag_329\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9337:9409   */\n      tag_424\n        /* \"#utility.yul\":9405:9407   */\n      0x20\n        /* \"#utility.yul\":9394:9403   */\n      dup4\n        /* \"#utility.yul\":9390:9408   */\n      add\n        /* \"#utility.yul\":9381:9387   */\n      dup6\n        /* \"#utility.yul\":9337:9409   */\n      tag_329\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9419:9491   */\n      tag_425\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9476:9485   */\n      dup4\n        /* \"#utility.yul\":9472:9490   */\n      add\n        /* \"#utility.yul\":9463:9469   */\n      dup5\n        /* \"#utility.yul\":9419:9491   */\n      tag_414\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9056:9498   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9504:9836   */\n    tag_242:\n        /* \"#utility.yul\":9625:9629   */\n      0x00\n        /* \"#utility.yul\":9663:9665   */\n      0x40\n        /* \"#utility.yul\":9652:9661   */\n      dup3\n        /* \"#utility.yul\":9648:9666   */\n      add\n        /* \"#utility.yul\":9640:9666   */\n      swap1\n      pop\n        /* \"#utility.yul\":9676:9747   */\n      tag_427\n        /* \"#utility.yul\":9744:9745   */\n      0x00\n        /* \"#utility.yul\":9733:9742   */\n      dup4\n        /* \"#utility.yul\":9729:9746   */\n      add\n        /* \"#utility.yul\":9720:9726   */\n      dup6\n        /* \"#utility.yul\":9676:9747   */\n      tag_329\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9757:9829   */\n      tag_428\n        /* \"#utility.yul\":9825:9827   */\n      0x20\n        /* \"#utility.yul\":9814:9823   */\n      dup4\n        /* \"#utility.yul\":9810:9828   */\n      add\n        /* \"#utility.yul\":9801:9807   */\n      dup5\n        /* \"#utility.yul\":9757:9829   */\n      tag_414\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9504:9836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9842:10090   */\n    tag_60:\n        /* \"#utility.yul\":9948:9952   */\n      0x00\n        /* \"#utility.yul\":9986:9988   */\n      0x20\n        /* \"#utility.yul\":9975:9984   */\n      dup3\n        /* \"#utility.yul\":9971:9989   */\n      add\n        /* \"#utility.yul\":9963:9989   */\n      swap1\n      pop\n        /* \"#utility.yul\":9999:10083   */\n      tag_430\n        /* \"#utility.yul\":10080:10081   */\n      0x00\n        /* \"#utility.yul\":10069:10078   */\n      dup4\n        /* \"#utility.yul\":10065:10082   */\n      add\n        /* \"#utility.yul\":10056:10062   */\n      dup5\n        /* \"#utility.yul\":9999:10083   */\n      tag_341\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9842:10090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10096:10409   */\n    tag_285:\n        /* \"#utility.yul\":10209:10213   */\n      0x00\n        /* \"#utility.yul\":10247:10249   */\n      0x20\n        /* \"#utility.yul\":10236:10245   */\n      dup3\n        /* \"#utility.yul\":10232:10250   */\n      add\n        /* \"#utility.yul\":10224:10250   */\n      swap1\n      pop\n        /* \"#utility.yul\":10296:10305   */\n      dup2\n        /* \"#utility.yul\":10290:10294   */\n      dup2\n        /* \"#utility.yul\":10286:10306   */\n      sub\n        /* \"#utility.yul\":10282:10283   */\n      0x00\n        /* \"#utility.yul\":10271:10280   */\n      dup4\n        /* \"#utility.yul\":10267:10284   */\n      add\n        /* \"#utility.yul\":10260:10307   */\n      mstore\n        /* \"#utility.yul\":10324:10402   */\n      tag_432\n        /* \"#utility.yul\":10397:10401   */\n      dup2\n        /* \"#utility.yul\":10388:10394   */\n      dup5\n        /* \"#utility.yul\":10324:10402   */\n      tag_345\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10316:10402   */\n      swap1\n      pop\n        /* \"#utility.yul\":10096:10409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10415:10834   */\n    tag_167:\n        /* \"#utility.yul\":10581:10585   */\n      0x00\n        /* \"#utility.yul\":10619:10621   */\n      0x20\n        /* \"#utility.yul\":10608:10617   */\n      dup3\n        /* \"#utility.yul\":10604:10622   */\n      add\n        /* \"#utility.yul\":10596:10622   */\n      swap1\n      pop\n        /* \"#utility.yul\":10668:10677   */\n      dup2\n        /* \"#utility.yul\":10662:10666   */\n      dup2\n        /* \"#utility.yul\":10658:10678   */\n      sub\n        /* \"#utility.yul\":10654:10655   */\n      0x00\n        /* \"#utility.yul\":10643:10652   */\n      dup4\n        /* \"#utility.yul\":10639:10656   */\n      add\n        /* \"#utility.yul\":10632:10679   */\n      mstore\n        /* \"#utility.yul\":10696:10827   */\n      tag_434\n        /* \"#utility.yul\":10822:10826   */\n      dup2\n        /* \"#utility.yul\":10696:10827   */\n      tag_354\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10688:10827   */\n      swap1\n      pop\n        /* \"#utility.yul\":10415:10834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10840:11259   */\n    tag_224:\n        /* \"#utility.yul\":11006:11010   */\n      0x00\n        /* \"#utility.yul\":11044:11046   */\n      0x20\n        /* \"#utility.yul\":11033:11042   */\n      dup3\n        /* \"#utility.yul\":11029:11047   */\n      add\n        /* \"#utility.yul\":11021:11047   */\n      swap1\n      pop\n        /* \"#utility.yul\":11093:11102   */\n      dup2\n        /* \"#utility.yul\":11087:11091   */\n      dup2\n        /* \"#utility.yul\":11083:11103   */\n      sub\n        /* \"#utility.yul\":11079:11080   */\n      0x00\n        /* \"#utility.yul\":11068:11077   */\n      dup4\n        /* \"#utility.yul\":11064:11081   */\n      add\n        /* \"#utility.yul\":11057:11104   */\n      mstore\n        /* \"#utility.yul\":11121:11252   */\n      tag_436\n        /* \"#utility.yul\":11247:11251   */\n      dup2\n        /* \"#utility.yul\":11121:11252   */\n      tag_359\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11113:11252   */\n      swap1\n      pop\n        /* \"#utility.yul\":10840:11259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11265:11684   */\n    tag_185:\n        /* \"#utility.yul\":11431:11435   */\n      0x00\n        /* \"#utility.yul\":11469:11471   */\n      0x20\n        /* \"#utility.yul\":11458:11467   */\n      dup3\n        /* \"#utility.yul\":11454:11472   */\n      add\n        /* \"#utility.yul\":11446:11472   */\n      swap1\n      pop\n        /* \"#utility.yul\":11518:11527   */\n      dup2\n        /* \"#utility.yul\":11512:11516   */\n      dup2\n        /* \"#utility.yul\":11508:11528   */\n      sub\n        /* \"#utility.yul\":11504:11505   */\n      0x00\n        /* \"#utility.yul\":11493:11502   */\n      dup4\n        /* \"#utility.yul\":11489:11506   */\n      add\n        /* \"#utility.yul\":11482:11529   */\n      mstore\n        /* \"#utility.yul\":11546:11677   */\n      tag_438\n        /* \"#utility.yul\":11672:11676   */\n      dup2\n        /* \"#utility.yul\":11546:11677   */\n      tag_364\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11538:11677   */\n      swap1\n      pop\n        /* \"#utility.yul\":11265:11684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11690:12109   */\n    tag_265:\n        /* \"#utility.yul\":11856:11860   */\n      0x00\n        /* \"#utility.yul\":11894:11896   */\n      0x20\n        /* \"#utility.yul\":11883:11892   */\n      dup3\n        /* \"#utility.yul\":11879:11897   */\n      add\n        /* \"#utility.yul\":11871:11897   */\n      swap1\n      pop\n        /* \"#utility.yul\":11943:11952   */\n      dup2\n        /* \"#utility.yul\":11937:11941   */\n      dup2\n        /* \"#utility.yul\":11933:11953   */\n      sub\n        /* \"#utility.yul\":11929:11930   */\n      0x00\n        /* \"#utility.yul\":11918:11927   */\n      dup4\n        /* \"#utility.yul\":11914:11931   */\n      add\n        /* \"#utility.yul\":11907:11954   */\n      mstore\n        /* \"#utility.yul\":11971:12102   */\n      tag_440\n        /* \"#utility.yul\":12097:12101   */\n      dup2\n        /* \"#utility.yul\":11971:12102   */\n      tag_369\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11963:12102   */\n      swap1\n      pop\n        /* \"#utility.yul\":11690:12109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12115:12534   */\n    tag_221:\n        /* \"#utility.yul\":12281:12285   */\n      0x00\n        /* \"#utility.yul\":12319:12321   */\n      0x20\n        /* \"#utility.yul\":12308:12317   */\n      dup3\n        /* \"#utility.yul\":12304:12322   */\n      add\n        /* \"#utility.yul\":12296:12322   */\n      swap1\n      pop\n        /* \"#utility.yul\":12368:12377   */\n      dup2\n        /* \"#utility.yul\":12362:12366   */\n      dup2\n        /* \"#utility.yul\":12358:12378   */\n      sub\n        /* \"#utility.yul\":12354:12355   */\n      0x00\n        /* \"#utility.yul\":12343:12352   */\n      dup4\n        /* \"#utility.yul\":12339:12356   */\n      add\n        /* \"#utility.yul\":12332:12379   */\n      mstore\n        /* \"#utility.yul\":12396:12527   */\n      tag_442\n        /* \"#utility.yul\":12522:12526   */\n      dup2\n        /* \"#utility.yul\":12396:12527   */\n      tag_374\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":12388:12527   */\n      swap1\n      pop\n        /* \"#utility.yul\":12115:12534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12540:12959   */\n    tag_120:\n        /* \"#utility.yul\":12706:12710   */\n      0x00\n        /* \"#utility.yul\":12744:12746   */\n      0x20\n        /* \"#utility.yul\":12733:12742   */\n      dup3\n        /* \"#utility.yul\":12729:12747   */\n      add\n        /* \"#utility.yul\":12721:12747   */\n      swap1\n      pop\n        /* \"#utility.yul\":12793:12802   */\n      dup2\n        /* \"#utility.yul\":12787:12791   */\n      dup2\n        /* \"#utility.yul\":12783:12803   */\n      sub\n        /* \"#utility.yul\":12779:12780   */\n      0x00\n        /* \"#utility.yul\":12768:12777   */\n      dup4\n        /* \"#utility.yul\":12764:12781   */\n      add\n        /* \"#utility.yul\":12757:12804   */\n      mstore\n        /* \"#utility.yul\":12821:12952   */\n      tag_444\n        /* \"#utility.yul\":12947:12951   */\n      dup2\n        /* \"#utility.yul\":12821:12952   */\n      tag_379\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":12813:12952   */\n      swap1\n      pop\n        /* \"#utility.yul\":12540:12959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12965:13384   */\n    tag_147:\n        /* \"#utility.yul\":13131:13135   */\n      0x00\n        /* \"#utility.yul\":13169:13171   */\n      0x20\n        /* \"#utility.yul\":13158:13167   */\n      dup3\n        /* \"#utility.yul\":13154:13172   */\n      add\n        /* \"#utility.yul\":13146:13172   */\n      swap1\n      pop\n        /* \"#utility.yul\":13218:13227   */\n      dup2\n        /* \"#utility.yul\":13212:13216   */\n      dup2\n        /* \"#utility.yul\":13208:13228   */\n      sub\n        /* \"#utility.yul\":13204:13205   */\n      0x00\n        /* \"#utility.yul\":13193:13202   */\n      dup4\n        /* \"#utility.yul\":13189:13206   */\n      add\n        /* \"#utility.yul\":13182:13229   */\n      mstore\n        /* \"#utility.yul\":13246:13377   */\n      tag_446\n        /* \"#utility.yul\":13372:13376   */\n      dup2\n        /* \"#utility.yul\":13246:13377   */\n      tag_384\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13238:13377   */\n      swap1\n      pop\n        /* \"#utility.yul\":12965:13384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13390:13809   */\n    tag_137:\n        /* \"#utility.yul\":13556:13560   */\n      0x00\n        /* \"#utility.yul\":13594:13596   */\n      0x20\n        /* \"#utility.yul\":13583:13592   */\n      dup3\n        /* \"#utility.yul\":13579:13597   */\n      add\n        /* \"#utility.yul\":13571:13597   */\n      swap1\n      pop\n        /* \"#utility.yul\":13643:13652   */\n      dup2\n        /* \"#utility.yul\":13637:13641   */\n      dup2\n        /* \"#utility.yul\":13633:13653   */\n      sub\n        /* \"#utility.yul\":13629:13630   */\n      0x00\n        /* \"#utility.yul\":13618:13627   */\n      dup4\n        /* \"#utility.yul\":13614:13631   */\n      add\n        /* \"#utility.yul\":13607:13654   */\n      mstore\n        /* \"#utility.yul\":13671:13802   */\n      tag_448\n        /* \"#utility.yul\":13797:13801   */\n      dup2\n        /* \"#utility.yul\":13671:13802   */\n      tag_389\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13663:13802   */\n      swap1\n      pop\n        /* \"#utility.yul\":13390:13809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13815:14234   */\n    tag_270:\n        /* \"#utility.yul\":13981:13985   */\n      0x00\n        /* \"#utility.yul\":14019:14021   */\n      0x20\n        /* \"#utility.yul\":14008:14017   */\n      dup3\n        /* \"#utility.yul\":14004:14022   */\n      add\n        /* \"#utility.yul\":13996:14022   */\n      swap1\n      pop\n        /* \"#utility.yul\":14068:14077   */\n      dup2\n        /* \"#utility.yul\":14062:14066   */\n      dup2\n        /* \"#utility.yul\":14058:14078   */\n      sub\n        /* \"#utility.yul\":14054:14055   */\n      0x00\n        /* \"#utility.yul\":14043:14052   */\n      dup4\n        /* \"#utility.yul\":14039:14056   */\n      add\n        /* \"#utility.yul\":14032:14079   */\n      mstore\n        /* \"#utility.yul\":14096:14227   */\n      tag_450\n        /* \"#utility.yul\":14222:14226   */\n      dup2\n        /* \"#utility.yul\":14096:14227   */\n      tag_394\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14088:14227   */\n      swap1\n      pop\n        /* \"#utility.yul\":13815:14234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14240:14659   */\n    tag_109:\n        /* \"#utility.yul\":14406:14410   */\n      0x00\n        /* \"#utility.yul\":14444:14446   */\n      0x20\n        /* \"#utility.yul\":14433:14442   */\n      dup3\n        /* \"#utility.yul\":14429:14447   */\n      add\n        /* \"#utility.yul\":14421:14447   */\n      swap1\n      pop\n        /* \"#utility.yul\":14493:14502   */\n      dup2\n        /* \"#utility.yul\":14487:14491   */\n      dup2\n        /* \"#utility.yul\":14483:14503   */\n      sub\n        /* \"#utility.yul\":14479:14480   */\n      0x00\n        /* \"#utility.yul\":14468:14477   */\n      dup4\n        /* \"#utility.yul\":14464:14481   */\n      add\n        /* \"#utility.yul\":14457:14504   */\n      mstore\n        /* \"#utility.yul\":14521:14652   */\n      tag_452\n        /* \"#utility.yul\":14647:14651   */\n      dup2\n        /* \"#utility.yul\":14521:14652   */\n      tag_399\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14513:14652   */\n      swap1\n      pop\n        /* \"#utility.yul\":14240:14659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14665:15084   */\n    tag_258:\n        /* \"#utility.yul\":14831:14835   */\n      0x00\n        /* \"#utility.yul\":14869:14871   */\n      0x20\n        /* \"#utility.yul\":14858:14867   */\n      dup3\n        /* \"#utility.yul\":14854:14872   */\n      add\n        /* \"#utility.yul\":14846:14872   */\n      swap1\n      pop\n        /* \"#utility.yul\":14918:14927   */\n      dup2\n        /* \"#utility.yul\":14912:14916   */\n      dup2\n        /* \"#utility.yul\":14908:14928   */\n      sub\n        /* \"#utility.yul\":14904:14905   */\n      0x00\n        /* \"#utility.yul\":14893:14902   */\n      dup4\n        /* \"#utility.yul\":14889:14906   */\n      add\n        /* \"#utility.yul\":14882:14929   */\n      mstore\n        /* \"#utility.yul\":14946:15077   */\n      tag_454\n        /* \"#utility.yul\":15072:15076   */\n      dup2\n        /* \"#utility.yul\":14946:15077   */\n      tag_404\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14938:15077   */\n      swap1\n      pop\n        /* \"#utility.yul\":14665:15084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15090:15509   */\n    tag_155:\n        /* \"#utility.yul\":15256:15260   */\n      0x00\n        /* \"#utility.yul\":15294:15296   */\n      0x20\n        /* \"#utility.yul\":15283:15292   */\n      dup3\n        /* \"#utility.yul\":15279:15297   */\n      add\n        /* \"#utility.yul\":15271:15297   */\n      swap1\n      pop\n        /* \"#utility.yul\":15343:15352   */\n      dup2\n        /* \"#utility.yul\":15337:15341   */\n      dup2\n        /* \"#utility.yul\":15333:15353   */\n      sub\n        /* \"#utility.yul\":15329:15330   */\n      0x00\n        /* \"#utility.yul\":15318:15327   */\n      dup4\n        /* \"#utility.yul\":15314:15331   */\n      add\n        /* \"#utility.yul\":15307:15354   */\n      mstore\n        /* \"#utility.yul\":15371:15502   */\n      tag_456\n        /* \"#utility.yul\":15497:15501   */\n      dup2\n        /* \"#utility.yul\":15371:15502   */\n      tag_409\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15363:15502   */\n      swap1\n      pop\n        /* \"#utility.yul\":15090:15509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15515:15737   */\n    tag_31:\n        /* \"#utility.yul\":15608:15612   */\n      0x00\n        /* \"#utility.yul\":15646:15648   */\n      0x20\n        /* \"#utility.yul\":15635:15644   */\n      dup3\n        /* \"#utility.yul\":15631:15649   */\n      add\n        /* \"#utility.yul\":15623:15649   */\n      swap1\n      pop\n        /* \"#utility.yul\":15659:15730   */\n      tag_458\n        /* \"#utility.yul\":15727:15728   */\n      0x00\n        /* \"#utility.yul\":15716:15725   */\n      dup4\n        /* \"#utility.yul\":15712:15729   */\n      add\n        /* \"#utility.yul\":15703:15709   */\n      dup5\n        /* \"#utility.yul\":15659:15730   */\n      tag_414\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15515:15737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15743:16075   */\n    tag_140:\n        /* \"#utility.yul\":15864:15868   */\n      0x00\n        /* \"#utility.yul\":15902:15904   */\n      0x40\n        /* \"#utility.yul\":15891:15900   */\n      dup3\n        /* \"#utility.yul\":15887:15905   */\n      add\n        /* \"#utility.yul\":15879:15905   */\n      swap1\n      pop\n        /* \"#utility.yul\":15915:15986   */\n      tag_460\n        /* \"#utility.yul\":15983:15984   */\n      0x00\n        /* \"#utility.yul\":15972:15981   */\n      dup4\n        /* \"#utility.yul\":15968:15985   */\n      add\n        /* \"#utility.yul\":15959:15965   */\n      dup6\n        /* \"#utility.yul\":15915:15986   */\n      tag_414\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15996:16068   */\n      tag_461\n        /* \"#utility.yul\":16064:16066   */\n      0x20\n        /* \"#utility.yul\":16053:16062   */\n      dup4\n        /* \"#utility.yul\":16049:16067   */\n      add\n        /* \"#utility.yul\":16040:16046   */\n      dup5\n        /* \"#utility.yul\":15996:16068   */\n      tag_414\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15743:16075   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16162:16260   */\n    tag_336:\n        /* \"#utility.yul\":16213:16219   */\n      0x00\n        /* \"#utility.yul\":16247:16252   */\n      dup2\n        /* \"#utility.yul\":16241:16253   */\n      mload\n        /* \"#utility.yul\":16231:16253   */\n      swap1\n      pop\n        /* \"#utility.yul\":16162:16260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16266:16365   */\n    tag_348:\n        /* \"#utility.yul\":16318:16324   */\n      0x00\n        /* \"#utility.yul\":16352:16357   */\n      dup2\n        /* \"#utility.yul\":16346:16358   */\n      mload\n        /* \"#utility.yul\":16336:16358   */\n      swap1\n      pop\n        /* \"#utility.yul\":16266:16365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16371:16518   */\n    tag_338:\n        /* \"#utility.yul\":16472:16483   */\n      0x00\n        /* \"#utility.yul\":16509:16512   */\n      dup2\n        /* \"#utility.yul\":16494:16512   */\n      swap1\n      pop\n        /* \"#utility.yul\":16371:16518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16524:16693   */\n    tag_350:\n        /* \"#utility.yul\":16608:16619   */\n      0x00\n        /* \"#utility.yul\":16642:16648   */\n      dup3\n        /* \"#utility.yul\":16637:16640   */\n      dup3\n        /* \"#utility.yul\":16630:16649   */\n      mstore\n        /* \"#utility.yul\":16682:16686   */\n      0x20\n        /* \"#utility.yul\":16677:16680   */\n      dup3\n        /* \"#utility.yul\":16673:16687   */\n      add\n        /* \"#utility.yul\":16658:16687   */\n      swap1\n      pop\n        /* \"#utility.yul\":16524:16693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16699:17004   */\n    tag_143:\n        /* \"#utility.yul\":16739:16742   */\n      0x00\n        /* \"#utility.yul\":16758:16778   */\n      tag_469\n        /* \"#utility.yul\":16776:16777   */\n      dup3\n        /* \"#utility.yul\":16758:16778   */\n      tag_417\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16753:16778   */\n      swap2\n      pop\n        /* \"#utility.yul\":16792:16812   */\n      tag_470\n        /* \"#utility.yul\":16810:16811   */\n      dup4\n        /* \"#utility.yul\":16792:16812   */\n      tag_417\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16787:16812   */\n      swap3\n      pop\n        /* \"#utility.yul\":16946:16947   */\n      dup3\n        /* \"#utility.yul\":16878:16944   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16874:16948   */\n      sub\n        /* \"#utility.yul\":16871:16872   */\n      dup3\n        /* \"#utility.yul\":16868:16949   */\n      gt\n        /* \"#utility.yul\":16865:16972   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":16952:16970   */\n      tag_472\n      tag_473\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16865:16972   */\n    tag_471:\n        /* \"#utility.yul\":16996:16997   */\n      dup3\n        /* \"#utility.yul\":16993:16994   */\n      dup3\n        /* \"#utility.yul\":16989:16998   */\n      add\n        /* \"#utility.yul\":16982:16998   */\n      swap1\n      pop\n        /* \"#utility.yul\":16699:17004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17010:17195   */\n    tag_236:\n        /* \"#utility.yul\":17050:17051   */\n      0x00\n        /* \"#utility.yul\":17067:17087   */\n      tag_475\n        /* \"#utility.yul\":17085:17086   */\n      dup3\n        /* \"#utility.yul\":17067:17087   */\n      tag_417\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":17062:17087   */\n      swap2\n      pop\n        /* \"#utility.yul\":17101:17121   */\n      tag_476\n        /* \"#utility.yul\":17119:17120   */\n      dup4\n        /* \"#utility.yul\":17101:17121   */\n      tag_417\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17096:17121   */\n      swap3\n      pop\n        /* \"#utility.yul\":17140:17141   */\n      dup3\n        /* \"#utility.yul\":17130:17165   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":17145:17163   */\n      tag_478\n      tag_479\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17130:17165   */\n    tag_477:\n        /* \"#utility.yul\":17187:17188   */\n      dup3\n        /* \"#utility.yul\":17184:17185   */\n      dup3\n        /* \"#utility.yul\":17180:17189   */\n      div\n        /* \"#utility.yul\":17175:17189   */\n      swap1\n      pop\n        /* \"#utility.yul\":17010:17195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17201:17549   */\n    tag_233:\n        /* \"#utility.yul\":17241:17248   */\n      0x00\n        /* \"#utility.yul\":17264:17284   */\n      tag_481\n        /* \"#utility.yul\":17282:17283   */\n      dup3\n        /* \"#utility.yul\":17264:17284   */\n      tag_417\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17259:17284   */\n      swap2\n      pop\n        /* \"#utility.yul\":17298:17318   */\n      tag_482\n        /* \"#utility.yul\":17316:17317   */\n      dup4\n        /* \"#utility.yul\":17298:17318   */\n      tag_417\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17293:17318   */\n      swap3\n      pop\n        /* \"#utility.yul\":17486:17487   */\n      dup2\n        /* \"#utility.yul\":17418:17484   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17414:17488   */\n      div\n        /* \"#utility.yul\":17411:17412   */\n      dup4\n        /* \"#utility.yul\":17408:17489   */\n      gt\n        /* \"#utility.yul\":17403:17404   */\n      dup3\n        /* \"#utility.yul\":17396:17405   */\n      iszero\n        /* \"#utility.yul\":17389:17406   */\n      iszero\n        /* \"#utility.yul\":17385:17490   */\n      and\n        /* \"#utility.yul\":17382:17513   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":17493:17511   */\n      tag_484\n      tag_473\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17382:17513   */\n    tag_483:\n        /* \"#utility.yul\":17541:17542   */\n      dup3\n        /* \"#utility.yul\":17538:17539   */\n      dup3\n        /* \"#utility.yul\":17534:17543   */\n      mul\n        /* \"#utility.yul\":17523:17543   */\n      swap1\n      pop\n        /* \"#utility.yul\":17201:17549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17555:17746   */\n    tag_230:\n        /* \"#utility.yul\":17595:17599   */\n      0x00\n        /* \"#utility.yul\":17615:17635   */\n      tag_486\n        /* \"#utility.yul\":17633:17634   */\n      dup3\n        /* \"#utility.yul\":17615:17635   */\n      tag_417\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":17610:17635   */\n      swap2\n      pop\n        /* \"#utility.yul\":17649:17669   */\n      tag_487\n        /* \"#utility.yul\":17667:17668   */\n      dup4\n        /* \"#utility.yul\":17649:17669   */\n      tag_417\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17644:17669   */\n      swap3\n      pop\n        /* \"#utility.yul\":17688:17689   */\n      dup3\n        /* \"#utility.yul\":17685:17686   */\n      dup3\n        /* \"#utility.yul\":17682:17690   */\n      lt\n        /* \"#utility.yul\":17679:17713   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":17693:17711   */\n      tag_489\n      tag_473\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17679:17713   */\n    tag_488:\n        /* \"#utility.yul\":17738:17739   */\n      dup3\n        /* \"#utility.yul\":17735:17736   */\n      dup3\n        /* \"#utility.yul\":17731:17740   */\n      sub\n        /* \"#utility.yul\":17723:17740   */\n      swap1\n      pop\n        /* \"#utility.yul\":17555:17746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17752:17848   */\n    tag_332:\n        /* \"#utility.yul\":17789:17796   */\n      0x00\n        /* \"#utility.yul\":17818:17842   */\n      tag_491\n        /* \"#utility.yul\":17836:17841   */\n      dup3\n        /* \"#utility.yul\":17818:17842   */\n      tag_492\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":17807:17842   */\n      swap1\n      pop\n        /* \"#utility.yul\":17752:17848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17854:17944   */\n    tag_493:\n        /* \"#utility.yul\":17888:17895   */\n      0x00\n        /* \"#utility.yul\":17931:17936   */\n      dup2\n        /* \"#utility.yul\":17924:17937   */\n      iszero\n        /* \"#utility.yul\":17917:17938   */\n      iszero\n        /* \"#utility.yul\":17906:17938   */\n      swap1\n      pop\n        /* \"#utility.yul\":17854:17944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17950:18076   */\n    tag_492:\n        /* \"#utility.yul\":17987:17994   */\n      0x00\n        /* \"#utility.yul\":18027:18069   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18020:18025   */\n      dup3\n        /* \"#utility.yul\":18016:18070   */\n      and\n        /* \"#utility.yul\":18005:18070   */\n      swap1\n      pop\n        /* \"#utility.yul\":17950:18076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18082:18159   */\n    tag_417:\n        /* \"#utility.yul\":18119:18126   */\n      0x00\n        /* \"#utility.yul\":18148:18153   */\n      dup2\n        /* \"#utility.yul\":18137:18153   */\n      swap1\n      pop\n        /* \"#utility.yul\":18082:18159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18165:18304   */\n    tag_344:\n        /* \"#utility.yul\":18228:18237   */\n      0x00\n        /* \"#utility.yul\":18261:18298   */\n      tag_498\n        /* \"#utility.yul\":18292:18297   */\n      dup3\n        /* \"#utility.yul\":18261:18298   */\n      tag_499\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18248:18298   */\n      swap1\n      pop\n        /* \"#utility.yul\":18165:18304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18310:18436   */\n    tag_499:\n        /* \"#utility.yul\":18360:18369   */\n      0x00\n        /* \"#utility.yul\":18393:18430   */\n      tag_501\n        /* \"#utility.yul\":18424:18429   */\n      dup3\n        /* \"#utility.yul\":18393:18430   */\n      tag_502\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":18380:18430   */\n      swap1\n      pop\n        /* \"#utility.yul\":18310:18436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18442:18555   */\n    tag_502:\n        /* \"#utility.yul\":18492:18501   */\n      0x00\n        /* \"#utility.yul\":18525:18549   */\n      tag_504\n        /* \"#utility.yul\":18543:18548   */\n      dup3\n        /* \"#utility.yul\":18525:18549   */\n      tag_492\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18512:18549   */\n      swap1\n      pop\n        /* \"#utility.yul\":18442:18555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18561:18868   */\n    tag_340:\n        /* \"#utility.yul\":18629:18630   */\n      0x00\n        /* \"#utility.yul\":18639:18752   */\n    tag_506:\n        /* \"#utility.yul\":18653:18659   */\n      dup4\n        /* \"#utility.yul\":18650:18651   */\n      dup2\n        /* \"#utility.yul\":18647:18660   */\n      lt\n        /* \"#utility.yul\":18639:18752   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":18738:18739   */\n      dup1\n        /* \"#utility.yul\":18733:18736   */\n      dup3\n        /* \"#utility.yul\":18729:18740   */\n      add\n        /* \"#utility.yul\":18723:18741   */\n      mload\n        /* \"#utility.yul\":18719:18720   */\n      dup2\n        /* \"#utility.yul\":18714:18717   */\n      dup5\n        /* \"#utility.yul\":18710:18721   */\n      add\n        /* \"#utility.yul\":18703:18742   */\n      mstore\n        /* \"#utility.yul\":18675:18677   */\n      0x20\n        /* \"#utility.yul\":18672:18673   */\n      dup2\n        /* \"#utility.yul\":18668:18678   */\n      add\n        /* \"#utility.yul\":18663:18678   */\n      swap1\n      pop\n        /* \"#utility.yul\":18639:18752   */\n      jump(tag_506)\n    tag_508:\n        /* \"#utility.yul\":18770:18776   */\n      dup4\n        /* \"#utility.yul\":18767:18768   */\n      dup2\n        /* \"#utility.yul\":18764:18777   */\n      gt\n        /* \"#utility.yul\":18761:18862   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":18850:18851   */\n      0x00\n        /* \"#utility.yul\":18841:18847   */\n      dup5\n        /* \"#utility.yul\":18836:18839   */\n      dup5\n        /* \"#utility.yul\":18832:18848   */\n      add\n        /* \"#utility.yul\":18825:18852   */\n      mstore\n        /* \"#utility.yul\":18761:18862   */\n    tag_509:\n        /* \"#utility.yul\":18610:18868   */\n      pop\n        /* \"#utility.yul\":18561:18868   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18874:19054   */\n    tag_473:\n        /* \"#utility.yul\":18922:18999   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18919:18920   */\n      0x00\n        /* \"#utility.yul\":18912:19000   */\n      mstore\n        /* \"#utility.yul\":19019:19023   */\n      0x11\n        /* \"#utility.yul\":19016:19017   */\n      0x04\n        /* \"#utility.yul\":19009:19024   */\n      mstore\n        /* \"#utility.yul\":19043:19047   */\n      0x24\n        /* \"#utility.yul\":19040:19041   */\n      0x00\n        /* \"#utility.yul\":19033:19048   */\n      revert\n        /* \"#utility.yul\":19060:19240   */\n    tag_479:\n        /* \"#utility.yul\":19108:19185   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19105:19106   */\n      0x00\n        /* \"#utility.yul\":19098:19186   */\n      mstore\n        /* \"#utility.yul\":19205:19209   */\n      0x12\n        /* \"#utility.yul\":19202:19203   */\n      0x04\n        /* \"#utility.yul\":19195:19210   */\n      mstore\n        /* \"#utility.yul\":19229:19233   */\n      0x24\n        /* \"#utility.yul\":19226:19227   */\n      0x00\n        /* \"#utility.yul\":19219:19234   */\n      revert\n        /* \"#utility.yul\":19369:19486   */\n    tag_305:\n        /* \"#utility.yul\":19478:19479   */\n      0x00\n        /* \"#utility.yul\":19475:19476   */\n      dup1\n        /* \"#utility.yul\":19468:19480   */\n      revert\n        /* \"#utility.yul\":19492:19594   */\n    tag_353:\n        /* \"#utility.yul\":19533:19539   */\n      0x00\n        /* \"#utility.yul\":19584:19586   */\n      0x1f\n        /* \"#utility.yul\":19580:19587   */\n      not\n        /* \"#utility.yul\":19575:19577   */\n      0x1f\n        /* \"#utility.yul\":19568:19573   */\n      dup4\n        /* \"#utility.yul\":19564:19578   */\n      add\n        /* \"#utility.yul\":19560:19588   */\n      and\n        /* \"#utility.yul\":19550:19588   */\n      swap1\n      pop\n        /* \"#utility.yul\":19492:19594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19600:19775   */\n    tag_358:\n        /* \"#utility.yul\":19740:19767   */\n      0x756e626f756e64696e6720706572696f64207374617274656400000000000000\n        /* \"#utility.yul\":19736:19737   */\n      0x00\n        /* \"#utility.yul\":19728:19734   */\n      dup3\n        /* \"#utility.yul\":19724:19738   */\n      add\n        /* \"#utility.yul\":19717:19768   */\n      mstore\n        /* \"#utility.yul\":19600:19775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19781:19959   */\n    tag_363:\n        /* \"#utility.yul\":19921:19951   */\n      0x756e626f756e64696e6720706572696f642069736e2774206f76657200000000\n        /* \"#utility.yul\":19917:19918   */\n      0x00\n        /* \"#utility.yul\":19909:19915   */\n      dup3\n        /* \"#utility.yul\":19905:19919   */\n      add\n        /* \"#utility.yul\":19898:19952   */\n      mstore\n        /* \"#utility.yul\":19781:19959   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19965:20129   */\n    tag_368:\n        /* \"#utility.yul\":20105:20121   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":20101:20102   */\n      0x00\n        /* \"#utility.yul\":20093:20099   */\n      dup3\n        /* \"#utility.yul\":20089:20103   */\n      add\n        /* \"#utility.yul\":20082:20122   */\n      mstore\n        /* \"#utility.yul\":19965:20129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20135:20360   */\n    tag_373:\n        /* \"#utility.yul\":20275:20309   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":20271:20272   */\n      0x00\n        /* \"#utility.yul\":20263:20269   */\n      dup3\n        /* \"#utility.yul\":20259:20273   */\n      add\n        /* \"#utility.yul\":20252:20310   */\n      mstore\n        /* \"#utility.yul\":20344:20352   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20339:20341   */\n      0x20\n        /* \"#utility.yul\":20331:20337   */\n      dup3\n        /* \"#utility.yul\":20327:20342   */\n      add\n        /* \"#utility.yul\":20320:20353   */\n      mstore\n        /* \"#utility.yul\":20135:20360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20366:20538   */\n    tag_378:\n        /* \"#utility.yul\":20506:20530   */\n      0x756e626f756e64696e67206e6f74207374617274656400000000000000000000\n        /* \"#utility.yul\":20502:20503   */\n      0x00\n        /* \"#utility.yul\":20494:20500   */\n      dup3\n        /* \"#utility.yul\":20490:20504   */\n      add\n        /* \"#utility.yul\":20483:20531   */\n      mstore\n        /* \"#utility.yul\":20366:20538   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20544:20723   */\n    tag_383:\n        /* \"#utility.yul\":20684:20715   */\n      0x43616e6e6f7420726564756365206578697374696e6720706572696f64000000\n        /* \"#utility.yul\":20680:20681   */\n      0x00\n        /* \"#utility.yul\":20672:20678   */\n      dup3\n        /* \"#utility.yul\":20668:20682   */\n      add\n        /* \"#utility.yul\":20661:20716   */\n      mstore\n        /* \"#utility.yul\":20544:20723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20729:20896   */\n    tag_388:\n        /* \"#utility.yul\":20869:20888   */\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n        /* \"#utility.yul\":20865:20866   */\n      0x00\n        /* \"#utility.yul\":20857:20863   */\n      dup3\n        /* \"#utility.yul\":20853:20867   */\n      add\n        /* \"#utility.yul\":20846:20889   */\n      mstore\n        /* \"#utility.yul\":20729:20896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20902:21076   */\n    tag_393:\n        /* \"#utility.yul\":21042:21068   */\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n        /* \"#utility.yul\":21038:21039   */\n      0x00\n        /* \"#utility.yul\":21030:21036   */\n      dup3\n        /* \"#utility.yul\":21026:21040   */\n      add\n        /* \"#utility.yul\":21019:21069   */\n      mstore\n        /* \"#utility.yul\":20902:21076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21082:21261   */\n    tag_398:\n        /* \"#utility.yul\":21222:21253   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":21218:21219   */\n      0x00\n        /* \"#utility.yul\":21210:21216   */\n      dup3\n        /* \"#utility.yul\":21206:21220   */\n      add\n        /* \"#utility.yul\":21199:21254   */\n      mstore\n        /* \"#utility.yul\":21082:21261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21267:21496   */\n    tag_403:\n        /* \"#utility.yul\":21407:21441   */\n      0x43616c6c6572206973206e6f742052657761726473446973747269627574696f\n        /* \"#utility.yul\":21403:21404   */\n      0x00\n        /* \"#utility.yul\":21395:21401   */\n      dup3\n        /* \"#utility.yul\":21391:21405   */\n      add\n        /* \"#utility.yul\":21384:21442   */\n      mstore\n        /* \"#utility.yul\":21476:21488   */\n      0x6e20636f6e747261637400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21471:21473   */\n      0x20\n        /* \"#utility.yul\":21463:21469   */\n      dup3\n        /* \"#utility.yul\":21459:21474   */\n      add\n        /* \"#utility.yul\":21452:21489   */\n      mstore\n        /* \"#utility.yul\":21267:21496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21502:21731   */\n    tag_408:\n        /* \"#utility.yul\":21642:21676   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21638:21639   */\n      0x00\n        /* \"#utility.yul\":21630:21636   */\n      dup3\n        /* \"#utility.yul\":21626:21640   */\n      add\n        /* \"#utility.yul\":21619:21677   */\n      mstore\n        /* \"#utility.yul\":21711:21723   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21706:21708   */\n      0x20\n        /* \"#utility.yul\":21698:21704   */\n      dup3\n        /* \"#utility.yul\":21694:21709   */\n      add\n        /* \"#utility.yul\":21687:21724   */\n      mstore\n        /* \"#utility.yul\":21502:21731   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21737:21918   */\n    tag_413:\n        /* \"#utility.yul\":21877:21910   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":21873:21874   */\n      0x00\n        /* \"#utility.yul\":21865:21871   */\n      dup3\n        /* \"#utility.yul\":21861:21875   */\n      add\n        /* \"#utility.yul\":21854:21911   */\n      mstore\n        /* \"#utility.yul\":21737:21918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21924:22046   */\n    tag_290:\n        /* \"#utility.yul\":21997:22021   */\n      tag_529\n        /* \"#utility.yul\":22015:22020   */\n      dup2\n        /* \"#utility.yul\":21997:22021   */\n      tag_332\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":21990:21995   */\n      dup2\n        /* \"#utility.yul\":21987:22022   */\n      eq\n        /* \"#utility.yul\":21977:22040   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":22036:22037   */\n      0x00\n        /* \"#utility.yul\":22033:22034   */\n      dup1\n        /* \"#utility.yul\":22026:22038   */\n      revert\n        /* \"#utility.yul\":21977:22040   */\n    tag_530:\n        /* \"#utility.yul\":21924:22046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22052:22168   */\n    tag_294:\n        /* \"#utility.yul\":22122:22143   */\n      tag_532\n        /* \"#utility.yul\":22137:22142   */\n      dup2\n        /* \"#utility.yul\":22122:22143   */\n      tag_493\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":22115:22120   */\n      dup2\n        /* \"#utility.yul\":22112:22144   */\n      eq\n        /* \"#utility.yul\":22102:22162   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":22158:22159   */\n      0x00\n        /* \"#utility.yul\":22155:22156   */\n      dup1\n        /* \"#utility.yul\":22148:22160   */\n      revert\n        /* \"#utility.yul\":22102:22162   */\n    tag_533:\n        /* \"#utility.yul\":22052:22168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22174:22296   */\n    tag_298:\n        /* \"#utility.yul\":22247:22271   */\n      tag_535\n        /* \"#utility.yul\":22265:22270   */\n      dup2\n        /* \"#utility.yul\":22247:22271   */\n      tag_417\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":22240:22245   */\n      dup2\n        /* \"#utility.yul\":22237:22272   */\n      eq\n        /* \"#utility.yul\":22227:22290   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":22286:22287   */\n      0x00\n        /* \"#utility.yul\":22283:22284   */\n      dup1\n        /* \"#utility.yul\":22276:22288   */\n      revert\n        /* \"#utility.yul\":22227:22290   */\n    tag_536:\n        /* \"#utility.yul\":22174:22296   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220661a42cdd73d13ac28f13ee778064be9831d1fc2b498cb53dd98131a37e965d664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1178": {
									"entryPoint": null,
									"id": 1178,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "7:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:552:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "315:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "288:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "297:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "280:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:32:9"
															},
															"nodeType": "YulIf",
															"src": "277:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "406:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "421:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "435:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "425:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "450:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "496:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "492:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "492:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "460:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "460:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "450:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "544:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "559:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "563:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "589:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "635:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "646:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "631:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "599:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "589:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "683:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "698:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "702:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "728:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "774:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "770:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "770:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "738:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "728:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "252:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "260:6:9",
														"type": ""
													}
												],
												"src": "156:663:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "875:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "858:6:9",
														"type": ""
													}
												],
												"src": "825:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "961:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "990:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "972:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "933:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "943:7:9",
														"type": ""
													}
												],
												"src": "906:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1053:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1063:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1078:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1063:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1045:7:9",
														"type": ""
													}
												],
												"src": "1008:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1140:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1263:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:43:9"
															},
															"nodeType": "YulIf",
															"src": "1439:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1422:5:9",
														"type": ""
													}
												],
												"src": "1386:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600060045560006005553480156200001b57600080fd5b50604051620027423803806200274283398181016040528101906200004191906200012a565b6001808190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001d9565b6000815190506200012481620001bf565b92915050565b600080600060608486031215620001465762000145620001ba565b5b6000620001568682870162000113565b9350506020620001698682870162000113565b92505060406200017c8682870162000113565b9150509250925092565b600062000193826200019a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001ca8162000186565b8114620001d657600080fd5b50565b61255980620001e96000396000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c80637b0a47ee116100ad578063d1af0c7d11610071578063d1af0c7d14610320578063d505493d1461033e578063df136d651461035a578063e9fad8ee14610378578063ebe2b12b146103825761012b565b80637b0a47ee1461027857806380faa57d146102965780638b876347146102b4578063c8f33c91146102e4578063cd3daf9d146103025761012b565b80633d18b912116100f45780633d18b912146101e65780633fc6df6e146101f057806370a082311461020e57806372f702f31461023e5780637acb77571461025c5761012b565b80628cc262146101305780630700037d1461016057806318160ddd14610190578063246132f9146101ae5780632e1a7d4d146101ca575b600080fd5b61014a60048036038101906101459190611a12565b6103a0565b6040516101579190611fd0565b60405180910390f35b61017a60048036038101906101759190611a12565b6104be565b6040516101879190611fd0565b60405180910390f35b6101986104d6565b6040516101a59190611fd0565b60405180910390f35b6101c860048036038101906101c39190611b06565b6104e0565b005b6101e460048036038101906101df9190611a6c565b6108ad565b005b6101ee610aa3565b005b6101f8610d83565b6040516102059190611d98565b60405180910390f35b61022860048036038101906102239190611a12565b610da7565b6040516102359190611fd0565b60405180910390f35b610246610df0565b6040516102539190611e13565b60405180910390f35b61027660048036038101906102719190611ac6565b610e16565b005b610280611144565b60405161028d9190611fd0565b60405180910390f35b61029e61114a565b6040516102ab9190611fd0565b60405180910390f35b6102ce60048036038101906102c99190611a12565b61115d565b6040516102db9190611fd0565b60405180910390f35b6102ec611175565b6040516102f99190611fd0565b60405180910390f35b61030a61117b565b6040516103179190611fd0565b60405180910390f35b610328611209565b6040516103359190611e13565b60405180910390f35b61035860048036038101906103539190611a6c565b61122f565b005b6103626113be565b60405161036f9190611fd0565b60405180910390f35b6103806113c4565b005b61038a6115bb565b6040516103979190611fd0565b60405180910390f35b60006104b7600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104a9670de0b6b3a764000061049b61044d600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461043f61117b565b6115c190919063ffffffff16565b600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d790919063ffffffff16565b6115ed90919063ffffffff16565b61160390919063ffffffff16565b9050919050565b60096020528060005260406000206000915090505481565b6000600a54905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056590611f70565b60405180910390fd5b6000600c60009054906101000a900460ff166106685761058c61117b565b60078190555061059a61114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610667576105dd816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b60045461067e834261160390919063ffffffff16565b10156106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690611ef0565b60405180910390fd5b60045442106106e6576106db82846115ed90919063ffffffff16565b600581905550610746565b60006106fd426004546115c190919063ffffffff16565b90506000610716600554836115d790919063ffffffff16565b905061073d8461072f838861160390919063ffffffff16565b6115ed90919063ffffffff16565b60058190555050505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a39190611d98565b60206040518083038186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190611a99565b905061080883826115ed90919063ffffffff16565b600554111561084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390611f30565b60405180910390fd5b42600681905550610866834261160390919063ffffffff16565b6004819055507f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f558460045460405161089f929190611feb565b60405180910390a150505050565b60018060008282546108bf9190612046565b925050819055506000600154905060008211610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790611f10565b60405180910390fd5b61092582600a546115c190919063ffffffff16565b600a8190555061097d82600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115c190919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a0d3383600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116199092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d583604051610a539190611fd0565b60405180910390a26001548114610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690611fb0565b60405180910390fd5b5050565b6001806000828254610ab59190612046565b925050819055506000600154905033600c60009054906101000a900460ff16610bbc57610ae061117b565b600781905550610aee61114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bbb57610b31816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b600c60009054906101000a900460ff1615610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0390611e50565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610d3a576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ceb3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116199092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d319190611fd0565b60405180910390a25b50506001548114610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7790611fb0565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001806000828254610e289190612046565b925050819055506000600154905033600c60009054906101000a900460ff16610f2f57610e5361117b565b600781905550610e6161114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f2e57610ea4816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b60008411610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6990611e90565b60405180910390fd5b610f8784600a5461160390919063ffffffff16565b600a81905550610fdf84600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160390919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc90ba2f1821a1933b06a152b152556d33fb65bcc1366bfa839c68715b039f61583308660405161105593929190611db3565b60405180910390a16110ac333086600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661169f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516110f29190611fd0565b60405180910390a250600154811461113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113690611fb0565b60405180910390fd5b505050565b60055481565b600061115842600454611728565b905090565b60086020528060005260406000206000915090505481565b60065481565b600080600a541415611191576007549050611206565b6112036111f2600a546111e4670de0b6b3a76400006111d66005546111c86006546111ba61114a565b6115c190919063ffffffff16565b6115d790919063ffffffff16565b6115d790919063ffffffff16565b6115ed90919063ffffffff16565b60075461160390919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060008282546112419190612046565b925050819055506000600154905033600c60009054906101000a900460ff166113485761126c61117b565b60078190555061127a61114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611347576112bd816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b6001600c60006101000a81548160ff021916908315150217905550824261136f9190612046565b600d819055505060015481146113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b190611fb0565b60405180910390fd5b5050565b60075481565b600c60009054906101000a900460ff16611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a90611ed0565b60405180910390fd5b600d54421015611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f90611e70565b60405180910390fd5b6114a0600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ad565b61152c33600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116199092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516115b19190611fd0565b60405180910390a2565b60045481565b600081836115cf9190612127565b905092915050565b600081836115e591906120cd565b905092915050565b600081836115fb919061209c565b905092915050565b600081836116119190612046565b905092915050565b61169a8363a9059cbb60e01b8484604051602401611638929190611dea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611741565b505050565b611722846323b872dd60e01b8585856040516024016116c093929190611db3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611741565b50505050565b60008183106117375781611739565b825b905092915050565b60006117a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118089092919063ffffffff16565b905060008151111561180357808060200190518101906117c39190611a3f565b611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f990611f90565b60405180910390fd5b5b505050565b60606118178484600085611820565b90509392505050565b606082471015611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c90611eb0565b60405180910390fd5b61186e85611934565b6118ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a490611f50565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118d69190611d81565b60006040518083038185875af1925050503d8060008114611913576040519150601f19603f3d011682016040523d82523d6000602084013e611918565b606091505b5091509150611928828286611957565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611967578290506119b7565b60008351111561197a5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ae9190611e2e565b60405180910390fd5b9392505050565b6000813590506119cd816124de565b92915050565b6000815190506119e2816124f5565b92915050565b6000813590506119f78161250c565b92915050565b600081519050611a0c8161250c565b92915050565b600060208284031215611a2857611a2761226a565b5b6000611a36848285016119be565b91505092915050565b600060208284031215611a5557611a5461226a565b5b6000611a63848285016119d3565b91505092915050565b600060208284031215611a8257611a8161226a565b5b6000611a90848285016119e8565b91505092915050565b600060208284031215611aaf57611aae61226a565b5b6000611abd848285016119fd565b91505092915050565b60008060408385031215611add57611adc61226a565b5b6000611aeb858286016119e8565b9250506020611afc858286016119be565b9150509250929050565b60008060408385031215611b1d57611b1c61226a565b5b6000611b2b858286016119e8565b9250506020611b3c858286016119e8565b9150509250929050565b611b4f8161215b565b82525050565b6000611b6082612014565b611b6a818561202a565b9350611b7a8185602086016121d9565b80840191505092915050565b611b8f816121a3565b82525050565b6000611ba08261201f565b611baa8185612035565b9350611bba8185602086016121d9565b611bc38161226f565b840191505092915050565b6000611bdb601983612035565b9150611be682612280565b602082019050919050565b6000611bfe601c83612035565b9150611c09826122a9565b602082019050919050565b6000611c21600e83612035565b9150611c2c826122d2565b602082019050919050565b6000611c44602683612035565b9150611c4f826122fb565b604082019050919050565b6000611c67601683612035565b9150611c728261234a565b602082019050919050565b6000611c8a601d83612035565b9150611c9582612373565b602082019050919050565b6000611cad601183612035565b9150611cb88261239c565b602082019050919050565b6000611cd0601883612035565b9150611cdb826123c5565b602082019050919050565b6000611cf3601d83612035565b9150611cfe826123ee565b602082019050919050565b6000611d16602a83612035565b9150611d2182612417565b604082019050919050565b6000611d39602a83612035565b9150611d4482612466565b604082019050919050565b6000611d5c601f83612035565b9150611d67826124b5565b602082019050919050565b611d7b81612199565b82525050565b6000611d8d8284611b55565b915081905092915050565b6000602082019050611dad6000830184611b46565b92915050565b6000606082019050611dc86000830186611b46565b611dd56020830185611b46565b611de26040830184611d72565b949350505050565b6000604082019050611dff6000830185611b46565b611e0c6020830184611d72565b9392505050565b6000602082019050611e286000830184611b86565b92915050565b60006020820190508181036000830152611e488184611b95565b905092915050565b60006020820190508181036000830152611e6981611bce565b9050919050565b60006020820190508181036000830152611e8981611bf1565b9050919050565b60006020820190508181036000830152611ea981611c14565b9050919050565b60006020820190508181036000830152611ec981611c37565b9050919050565b60006020820190508181036000830152611ee981611c5a565b9050919050565b60006020820190508181036000830152611f0981611c7d565b9050919050565b60006020820190508181036000830152611f2981611ca0565b9050919050565b60006020820190508181036000830152611f4981611cc3565b9050919050565b60006020820190508181036000830152611f6981611ce6565b9050919050565b60006020820190508181036000830152611f8981611d09565b9050919050565b60006020820190508181036000830152611fa981611d2c565b9050919050565b60006020820190508181036000830152611fc981611d4f565b9050919050565b6000602082019050611fe56000830184611d72565b92915050565b60006040820190506120006000830185611d72565b61200d6020830184611d72565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061205182612199565b915061205c83612199565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120915761209061220c565b5b828201905092915050565b60006120a782612199565b91506120b283612199565b9250826120c2576120c161223b565b5b828204905092915050565b60006120d882612199565b91506120e383612199565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561211c5761211b61220c565b5b828202905092915050565b600061213282612199565b915061213d83612199565b9250828210156121505761214f61220c565b5b828203905092915050565b600061216682612179565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006121ae826121b5565b9050919050565b60006121c0826121c7565b9050919050565b60006121d282612179565b9050919050565b60005b838110156121f75780820151818401526020810190506121dc565b83811115612206576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f756e626f756e64696e6720706572696f64207374617274656400000000000000600082015250565b7f756e626f756e64696e6720706572696f642069736e2774206f76657200000000600082015250565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f756e626f756e64696e67206e6f74207374617274656400000000000000000000600082015250565b7f43616e6e6f7420726564756365206578697374696e6720706572696f64000000600082015250565b7f43616e6e6f742077697468647261772030000000000000000000000000000000600082015250565b7f50726f76696465642072657761726420746f6f20686967680000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f43616c6c6572206973206e6f742052657761726473446973747269627574696f60008201527f6e20636f6e747261637400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6124e78161215b565b81146124f257600080fd5b50565b6124fe8161216d565b811461250957600080fd5b50565b61251581612199565b811461252057600080fd5b5056fea2646970667358221220661a42cdd73d13ac28f13ee778064be9831d1fc2b498cb53dd98131a37e965d664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2742 CODESIZE SUB DUP1 PUSH3 0x2742 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x1D9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0x1BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x146 JUMPI PUSH3 0x145 PUSH3 0x1BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x156 DUP7 DUP3 DUP8 ADD PUSH3 0x113 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x169 DUP7 DUP3 DUP8 ADD PUSH3 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x17C DUP7 DUP3 DUP8 ADD PUSH3 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x193 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1CA DUP2 PUSH3 0x186 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2559 DUP1 PUSH3 0x1E9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xD505493D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x382 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x302 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x3D18B912 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x25C JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x246132F9 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x13C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x4B7 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x49B PUSH2 0x44D PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x43F PUSH2 0x117B JUMP JUMPDEST PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x565 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x668 JUMPI PUSH2 0x58C PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x59A PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x667 JUMPI PUSH2 0x5DD DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x67E DUP4 TIMESTAMP PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x6E6 JUMPI PUSH2 0x6DB DUP3 DUP5 PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x746 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x716 PUSH1 0x5 SLOAD DUP4 PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x73D DUP5 PUSH2 0x72F DUP4 DUP9 PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP PUSH2 0x808 DUP4 DUP3 PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x866 DUP4 TIMESTAMP PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55 DUP5 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x89F SWAP3 SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x925 DUP3 PUSH1 0xA SLOAD PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x97D DUP3 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA0D CALLER DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1619 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAB5 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBBC JUMPI PUSH2 0xAE0 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xAEE PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBB JUMPI PUSH2 0xB31 DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCEB CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1619 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF2F JUMPI PUSH2 0xE53 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xE61 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2E JUMPI PUSH2 0xEA4 DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF69 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF87 DUP5 PUSH1 0xA SLOAD PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xFDF DUP5 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC90BA2F1821A1933B06A152B152556D33FB65BCC1366BFA839C68715B039F615 DUP4 ADDRESS DUP7 PUSH1 0x40 MLOAD PUSH2 0x1055 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x10AC CALLER ADDRESS DUP7 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x169F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1136 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1158 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA SLOAD EQ ISZERO PUSH2 0x1191 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x11F2 PUSH1 0xA SLOAD PUSH2 0x11E4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11D6 PUSH1 0x5 SLOAD PUSH2 0x11C8 PUSH1 0x6 SLOAD PUSH2 0x11BA PUSH2 0x114A JUMP JUMPDEST PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1348 JUMPI PUSH2 0x126C PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x127A PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1347 JUMPI PUSH2 0x12BD DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 TIMESTAMP PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1413 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140A SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144F SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x152C CALLER PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1619 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15E5 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1638 SWAP3 SWAP2 SWAP1 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1741 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1722 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1741 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1737 JUMPI DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1808 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1803 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1817 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1820 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185C SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186E DUP6 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x18AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A4 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x18D6 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1913 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1928 DUP3 DUP3 DUP7 PUSH2 0x1957 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1967 JUMPI DUP3 SWAP1 POP PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x197A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19CD DUP2 PUSH2 0x24DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19E2 DUP2 PUSH2 0x24F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F7 DUP2 PUSH2 0x250C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0C DUP2 PUSH2 0x250C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A28 JUMPI PUSH2 0x1A27 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A36 DUP5 DUP3 DUP6 ADD PUSH2 0x19BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP5 DUP3 DUP6 ADD PUSH2 0x19D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A81 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP5 DUP3 DUP6 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAF JUMPI PUSH2 0x1AAE PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABD DUP5 DUP3 DUP6 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ADD JUMPI PUSH2 0x1ADC PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEB DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFC DUP6 DUP3 DUP7 ADD PUSH2 0x19BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1D JUMPI PUSH2 0x1B1C PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2B DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3C DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x215B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP3 PUSH2 0x2014 JUMP JUMPDEST PUSH2 0x1B6A DUP2 DUP6 PUSH2 0x202A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B8F DUP2 PUSH2 0x21A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA0 DUP3 PUSH2 0x201F JUMP JUMPDEST PUSH2 0x1BAA DUP2 DUP6 PUSH2 0x2035 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x1BC3 DUP2 PUSH2 0x226F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDB PUSH1 0x19 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE6 DUP3 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFE PUSH1 0x1C DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C09 DUP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 PUSH1 0xE DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C DUP3 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 PUSH1 0x26 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4F DUP3 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x16 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8A PUSH1 0x1D DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C95 DUP3 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAD PUSH1 0x11 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB8 DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0x18 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF3 PUSH1 0x1D DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFE DUP3 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D16 PUSH1 0x2A DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D21 DUP3 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D39 PUSH1 0x2A DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5C PUSH1 0x1F DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D67 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7B DUP2 PUSH2 0x2199 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP3 DUP5 PUSH2 0x1B55 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DC8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1DD5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1DE2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DFF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1E0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E28 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E48 DUP2 DUP5 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E69 DUP2 PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E89 DUP2 PUSH2 0x1BF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA9 DUP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC9 DUP2 PUSH2 0x1C37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE9 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F09 DUP2 PUSH2 0x1C7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F29 DUP2 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F49 DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F69 DUP2 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F89 DUP2 PUSH2 0x1D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA9 DUP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC9 DUP2 PUSH2 0x1D4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2000 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x200D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A7 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B2 DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x223B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E3 DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x211C JUMPI PUSH2 0x211B PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2132 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x213D DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2150 JUMPI PUSH2 0x214F PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2166 DUP3 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AE DUP3 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C0 DUP3 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D2 DUP3 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21DC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E626F756E64696E6720706572696F64207374617274656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x756E626F756E64696E6720706572696F642069736E2774206F76657200000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x756E626F756E64696E67206E6F74207374617274656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726564756365206578697374696E6720706572696F64000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742052657761726473446973747269627574696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E20636F6E747261637400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x24E7 DUP2 PUSH2 0x215B JUMP JUMPDEST DUP2 EQ PUSH2 0x24F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24FE DUP2 PUSH2 0x216D JUMP JUMPDEST DUP2 EQ PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2515 DUP2 PUSH2 0x2199 JUMP JUMPDEST DUP2 EQ PUSH2 0x2520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x1A42CDD73D13AC 0x28 CALL RETURNDATACOPY 0xE7 PUSH25 0x64BE9831D1FC2B498CB53DD98131A37E965D664736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "373:5213:8:-:0;;;634:1;604:31;;670:1;642:29;;1029:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;401:1:6;385:13;:17;;;;1185:13:8;1163:12;;:36;;;;;;;;;;;;;;;;;;1232:13;1210:12;;:36;;;;;;;;;;;;;;;;;;1279:20;1257:19;;:42;;;;;;;;;;;;;;;;;;1029:278;;;373:5213;;7:143:9;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;373:5213:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_300": {
									"entryPoint": 5953,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_860": {
									"entryPoint": 5635,
									"id": 860,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1200": {
									"entryPoint": 3495,
									"id": 1200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_905": {
									"entryPoint": 5613,
									"id": 905,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_1276": {
									"entryPoint": 928,
									"id": 1276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@exit_1513": {
									"entryPoint": 5060,
									"id": 1513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_460": {
									"entryPoint": 6176,
									"id": 460,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_390": {
									"entryPoint": 6152,
									"id": 390,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getReward_1468": {
									"entryPoint": 2723,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_319": {
									"entryPoint": 6452,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_1214": {
									"entryPoint": 4426,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_1132": {
									"entryPoint": 4469,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_635": {
									"entryPoint": 5928,
									"id": 635,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_890": {
									"entryPoint": 5591,
									"id": 890,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@notifyRewardAmount_1617": {
									"entryPoint": 1248,
									"id": 1617,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@periodFinish_1127": {
									"entryPoint": 5563,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_1134": {
									"entryPoint": 5054,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1246": {
									"entryPoint": 4475,
									"id": 1246,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardRate_1130": {
									"entryPoint": 4420,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsDistribution_1084": {
									"entryPoint": 3459,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1121": {
									"entryPoint": 4617,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_1142": {
									"entryPoint": 1214,
									"id": 1142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_134": {
									"entryPoint": 5791,
									"id": 134,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_108": {
									"entryPoint": 5657,
									"id": 108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1345": {
									"entryPoint": 3606,
									"id": 1345,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_1124": {
									"entryPoint": 3568,
									"id": 1124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_875": {
									"entryPoint": 5569,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_1187": {
									"entryPoint": 1238,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unboundingPeriod_1418": {
									"entryPoint": 4655,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_1138": {
									"entryPoint": 4445,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_595": {
									"entryPoint": 6487,
									"id": 595,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1394": {
									"entryPoint": 2221,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e": {
									"entryPoint": 8832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f": {
									"entryPoint": 9034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22299:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "7:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:9",
														"type": ""
													}
												],
												"src": "152:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:9",
														"type": ""
													}
												],
												"src": "295:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:9",
														"type": ""
													}
												],
												"src": "440:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:9"
															},
															"nodeType": "YulIf",
															"src": "665:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:9",
														"type": ""
													}
												],
												"src": "589:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:9"
															},
															"nodeType": "YulIf",
															"src": "1008:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:9",
														"type": ""
													}
												],
												"src": "924:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:9"
															},
															"nodeType": "YulIf",
															"src": "1351:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:9",
														"type": ""
													}
												],
												"src": "1275:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:9"
															},
															"nodeType": "YulIf",
															"src": "1697:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:9",
														"type": ""
													}
												],
												"src": "1610:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:9"
															},
															"nodeType": "YulIf",
															"src": "2060:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:9",
														"type": ""
													}
												],
												"src": "1967:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2576:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2578:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2578:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2551:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2560:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2547:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2543:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:32:9"
															},
															"nodeType": "YulIf",
															"src": "2540:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2669:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2684:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2698:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2688:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2713:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2748:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2759:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2744:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2723:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2796:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2825:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2841:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2876:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2887:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2872:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2872:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2896:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2851:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2841:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2492:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2503:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2515:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2523:6:9",
														"type": ""
													}
												],
												"src": "2447:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2992:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3009:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3032:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3014:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3002:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2980:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2987:3:9",
														"type": ""
													}
												],
												"src": "2927:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3159:265:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3169:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3215:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3183:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3173:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3230:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3313:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3360:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3367:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3356:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3374:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3379:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3334:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3334:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3395:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3395:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3140:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3147:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3155:3:9",
														"type": ""
													}
												],
												"src": "3051:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3508:79:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3574:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3530:43:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:50:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:63:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:63:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3496:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3503:3:9",
														"type": ""
													}
												],
												"src": "3430:157:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3685:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3695:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3742:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3709:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3699:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3757:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3823:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3764:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3870:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3877:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3884:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3889:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3844:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3844:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3905:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3916:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3921:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3921:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3912:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3666:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3673:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3681:3:9",
														"type": ""
													}
												],
												"src": "3593:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4119:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4190:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4126:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4119:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4291:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e",
																	"nodeType": "YulIdentifier",
																	"src": "4202:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4202:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4304:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4315:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4320:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4304:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4097:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4105:3:9",
														"type": ""
													}
												],
												"src": "3963:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4481:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4491:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4562:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4498:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4663:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee",
																	"nodeType": "YulIdentifier",
																	"src": "4574:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4574:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4676:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4687:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4692:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4676:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4469:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4477:3:9",
														"type": ""
													}
												],
												"src": "4335:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4853:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4863:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4934:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4870:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5035:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nodeType": "YulIdentifier",
																	"src": "4946:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4946:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4946:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5048:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5059:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5064:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5055:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5048:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4841:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4849:3:9",
														"type": ""
													}
												],
												"src": "4707:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5225:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5235:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5242:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5235:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5407:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "5318:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5318:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5420:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5431:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5427:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5213:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5221:3:9",
														"type": ""
													}
												],
												"src": "5079:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5597:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5607:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5614:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5614:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5779:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f",
																	"nodeType": "YulIdentifier",
																	"src": "5690:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5690:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5792:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5803:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5808:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5799:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5799:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5792:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5585:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5593:3:9",
														"type": ""
													}
												],
												"src": "5451:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5969:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5979:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6050:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5986:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6151:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342",
																	"nodeType": "YulIdentifier",
																	"src": "6062:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6062:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6164:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6175:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6180:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6164:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5957:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5965:3:9",
														"type": ""
													}
												],
												"src": "5823:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6351:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6422:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6358:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																	"nodeType": "YulIdentifier",
																	"src": "6434:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6434:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6536:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6547:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6552:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6543:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6543:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6329:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6337:3:9",
														"type": ""
													}
												],
												"src": "6195:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6723:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6794:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6730:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6730:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6723:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6895:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																	"nodeType": "YulIdentifier",
																	"src": "6806:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6806:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6806:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6908:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6919:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6924:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6915:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6915:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6701:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6709:3:9",
														"type": ""
													}
												],
												"src": "6567:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7085:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7095:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7102:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7095:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7267:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7178:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7280:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7291:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7287:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7287:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7073:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7081:3:9",
														"type": ""
													}
												],
												"src": "6939:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7457:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7467:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7538:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7474:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7467:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7639:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																	"nodeType": "YulIdentifier",
																	"src": "7550:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7550:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7550:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7652:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7663:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7668:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7659:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7652:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7445:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7453:3:9",
														"type": ""
													}
												],
												"src": "7311:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7829:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7839:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7846:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7839:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8011:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "7922:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7922:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8024:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8035:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8040:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8031:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8024:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7817:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7825:3:9",
														"type": ""
													}
												],
												"src": "7683:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8201:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8211:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8282:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8218:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8218:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8211:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8383:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "8294:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8294:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8396:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8407:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8403:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8396:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8189:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8197:3:9",
														"type": ""
													}
												],
												"src": "8055:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8492:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8509:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8532:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8514:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8514:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8502:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8502:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8480:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8487:3:9",
														"type": ""
													}
												],
												"src": "8427:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8685:137:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8696:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8783:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8792:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8703:79:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8703:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8696:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8806:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8813:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8806:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8664:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8670:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8681:3:9",
														"type": ""
													}
												],
												"src": "8551:271:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8926:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8936:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8948:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8959:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8944:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8936:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9016:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9040:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8972:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8972:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8972:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8898:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8910:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8921:4:9",
														"type": ""
													}
												],
												"src": "8828:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9210:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9220:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9232:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9243:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9220:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9300:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9313:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9324:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9309:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9309:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9256:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9256:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9381:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9394:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9390:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9390:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9337:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9463:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9476:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9487:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9472:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9419:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9419:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9166:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9178:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9186:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9194:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9205:4:9",
														"type": ""
													}
												],
												"src": "9056:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9630:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9640:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9652:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9663:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9648:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9640:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9720:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9733:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9744:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9729:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9729:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9676:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9676:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9676:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9801:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9814:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9825:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9810:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9810:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9757:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9757:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9594:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9606:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9614:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9625:4:9",
														"type": ""
													}
												],
												"src": "9504:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9953:137:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9963:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9975:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9986:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9971:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9963:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10056:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10069:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10080:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10065:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10065:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9999:56:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:84:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:84:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9925:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9937:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9948:4:9",
														"type": ""
													}
												],
												"src": "9842:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10214:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10224:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10236:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10247:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10232:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10232:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10224:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10271:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10282:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10267:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10290:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10286:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10260:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10260:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10260:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10316:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10388:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10397:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10324:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10316:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10186:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10198:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10209:4:9",
														"type": ""
													}
												],
												"src": "10096:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10586:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10596:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10608:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10619:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10604:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10604:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10596:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10643:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10654:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10639:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10639:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10662:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10668:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10658:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10658:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10632:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10632:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10632:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10688:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10696:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10696:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10688:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10566:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10581:4:9",
														"type": ""
													}
												],
												"src": "10415:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11011:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11021:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11033:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11044:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11029:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11029:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11021:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11068:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11079:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11064:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11064:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11087:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11093:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11083:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11083:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11057:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11057:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11057:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11113:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11247:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11121:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11121:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11113:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10991:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11006:4:9",
														"type": ""
													}
												],
												"src": "10840:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11436:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11446:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11458:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11469:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11454:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11454:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11446:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11493:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11504:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11512:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11518:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11508:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11508:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11482:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11482:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11482:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11538:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11672:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11546:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11538:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11416:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11431:4:9",
														"type": ""
													}
												],
												"src": "11265:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11861:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11871:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11883:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11894:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11879:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11879:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11871:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11918:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11929:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11914:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11914:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11937:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11943:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11933:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11933:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11907:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11907:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11907:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11963:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12097:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11971:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11971:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11963:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11841:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11856:4:9",
														"type": ""
													}
												],
												"src": "11690:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12286:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12296:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12308:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12319:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12304:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12304:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12296:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12343:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12354:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12339:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12362:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12368:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12358:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12332:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12332:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12332:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12388:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12522:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12396:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12388:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12266:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12281:4:9",
														"type": ""
													}
												],
												"src": "12115:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12711:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12721:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12733:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12744:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12721:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12768:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12779:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12764:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12787:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12793:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12783:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12783:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12757:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12757:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12757:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12813:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12947:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12821:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12691:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12706:4:9",
														"type": ""
													}
												],
												"src": "12540:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13136:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13146:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13158:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13169:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13154:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13154:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13146:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13204:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13189:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13212:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13218:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13208:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13182:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13182:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13238:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13372:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13246:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13246:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13238:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13116:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13131:4:9",
														"type": ""
													}
												],
												"src": "12965:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13561:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13583:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13579:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13618:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13629:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13614:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13614:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13637:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13643:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13633:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13633:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13607:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13607:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13607:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13663:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13797:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13671:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13671:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13663:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13541:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13556:4:9",
														"type": ""
													}
												],
												"src": "13390:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13986:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13996:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14008:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14019:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14004:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13996:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14043:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14054:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14039:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14039:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14062:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14068:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14058:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14058:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14032:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14032:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14032:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14088:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14222:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14096:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14096:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14088:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13966:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13981:4:9",
														"type": ""
													}
												],
												"src": "13815:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14411:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14421:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14433:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14444:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14429:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14421:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14468:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14479:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14464:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14464:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14487:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14493:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14483:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14483:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14457:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14457:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14513:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14647:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14521:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14521:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14513:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14391:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14406:4:9",
														"type": ""
													}
												],
												"src": "14240:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14836:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14846:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14858:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14869:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14854:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14854:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14846:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14893:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14904:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14889:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14912:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14918:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14908:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14882:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14882:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14938:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15072:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14946:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14946:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14938:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14816:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14831:4:9",
														"type": ""
													}
												],
												"src": "14665:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15261:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15271:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15283:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15294:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15279:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15279:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15271:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15318:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15329:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15314:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15337:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15343:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15333:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15307:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15307:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15363:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15497:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15371:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15371:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15363:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15241:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15256:4:9",
														"type": ""
													}
												],
												"src": "15090:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15613:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15623:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15635:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15646:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15631:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15631:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15623:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15703:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15716:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15727:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15712:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15659:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15659:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15659:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15585:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15597:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15608:4:9",
														"type": ""
													}
												],
												"src": "15515:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15869:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15879:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15891:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15902:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15887:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15887:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15879:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15959:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15972:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15983:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15968:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15915:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15915:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15915:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16040:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16053:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16064:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16049:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15996:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15996:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15996:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15833:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15845:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15853:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15864:4:9",
														"type": ""
													}
												],
												"src": "15743:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16121:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16131:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16147:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16141:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16141:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16131:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16114:6:9",
														"type": ""
													}
												],
												"src": "16081:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16220:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16231:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16247:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16241:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16241:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16231:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16203:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16213:6:9",
														"type": ""
													}
												],
												"src": "16162:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16325:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16336:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16352:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16346:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16346:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16336:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16308:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16318:6:9",
														"type": ""
													}
												],
												"src": "16266:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16484:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16494:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16509:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16494:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16456:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16461:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16472:11:9",
														"type": ""
													}
												],
												"src": "16371:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16620:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16637:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16642:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16630:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16630:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16630:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16658:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16677:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16682:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16673:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16658:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16592:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16597:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16608:11:9",
														"type": ""
													}
												],
												"src": "16524:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16743:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16753:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16776:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16758:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16758:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16753:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16787:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16810:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16792:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16792:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16787:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16950:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16952:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16952:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16952:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16871:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16878:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16946:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16874:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16874:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16868:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16868:81:9"
															},
															"nodeType": "YulIf",
															"src": "16865:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16982:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16993:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16996:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16989:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16989:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16982:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16730:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16733:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16739:3:9",
														"type": ""
													}
												],
												"src": "16699:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17052:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17062:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17085:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17067:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17067:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17062:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17096:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17119:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17101:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17101:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17096:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17143:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17145:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17145:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17145:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17140:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17133:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17133:9:9"
															},
															"nodeType": "YulIf",
															"src": "17130:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17175:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17184:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17187:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17180:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17180:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17175:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17041:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17044:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17050:1:9",
														"type": ""
													}
												],
												"src": "17010:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17249:300:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17259:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17282:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17264:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17264:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17259:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17293:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17316:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17298:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17298:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17293:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17491:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17493:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17493:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17493:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17403:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17396:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17396:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17389:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17389:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17411:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17418:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17486:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17414:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17414:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17408:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17408:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17385:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17385:105:9"
															},
															"nodeType": "YulIf",
															"src": "17382:131:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17523:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17538:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17541:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17534:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17534:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17523:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17232:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17235:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17241:7:9",
														"type": ""
													}
												],
												"src": "17201:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17600:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17610:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17633:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17615:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17615:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17610:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17644:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17667:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17649:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17649:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17644:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17691:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17693:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17693:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17693:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17685:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17688:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17682:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17682:8:9"
															},
															"nodeType": "YulIf",
															"src": "17679:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17723:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17735:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17738:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17731:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17731:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17723:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17586:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17589:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17595:4:9",
														"type": ""
													}
												],
												"src": "17555:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17797:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17807:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17836:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "17818:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17818:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17807:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17779:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17789:7:9",
														"type": ""
													}
												],
												"src": "17752:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17896:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17906:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17931:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17924:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17924:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17917:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17906:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17878:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17888:7:9",
														"type": ""
													}
												],
												"src": "17854:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17995:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18005:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18020:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18027:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18016:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18016:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18005:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17977:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17987:7:9",
														"type": ""
													}
												],
												"src": "17950:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18127:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18137:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18148:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18137:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18109:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18119:7:9",
														"type": ""
													}
												],
												"src": "18082:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18238:66:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18248:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18292:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "18261:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18261:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18248:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18218:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18228:9:9",
														"type": ""
													}
												],
												"src": "18165:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18370:66:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18380:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18424:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18393:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18393:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18380:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18350:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18360:9:9",
														"type": ""
													}
												],
												"src": "18310:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18502:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18512:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18543:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18525:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18525:24:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18512:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18482:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18492:9:9",
														"type": ""
													}
												],
												"src": "18442:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18610:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18620:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18629:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18624:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18689:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18714:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18719:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18710:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18710:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "18733:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18738:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18729:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18729:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18723:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18723:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18703:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18703:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18703:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18650:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18653:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18647:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18647:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18661:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18663:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "18672:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18675:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18668:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18668:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "18663:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18643:3:9",
																"statements": []
															},
															"src": "18639:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18786:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18836:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "18841:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18832:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18832:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18850:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18825:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18825:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18825:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18767:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18770:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18764:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18764:13:9"
															},
															"nodeType": "YulIf",
															"src": "18761:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18592:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18597:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18602:6:9",
														"type": ""
													}
												],
												"src": "18561:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18902:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18919:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18922:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18912:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18912:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18912:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19016:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19019:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19009:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19009:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19040:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19043:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19033:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19033:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18874:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19088:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19105:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19108:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19098:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19098:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19098:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19202:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19205:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19195:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19195:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19195:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19226:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19229:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19219:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19219:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19219:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "19060:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19335:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19352:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19355:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19345:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19345:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "19246:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19458:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19475:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19478:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19468:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19468:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19468:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "19369:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19540:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19550:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19568:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19575:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19564:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19564:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19584:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19580:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19580:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19560:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19560:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19550:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19523:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "19533:6:9",
														"type": ""
													}
												],
												"src": "19492:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19706:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19728:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19736:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19724:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19724:14:9"
																	},
																	{
																		"hexValue": "756e626f756e64696e6720706572696f642073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19740:27:9",
																		"type": "",
																		"value": "unbounding period started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19717:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19717:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19717:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19698:6:9",
														"type": ""
													}
												],
												"src": "19600:175:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19887:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19909:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19917:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19905:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19905:14:9"
																	},
																	{
																		"hexValue": "756e626f756e64696e6720706572696f642069736e2774206f766572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19921:30:9",
																		"type": "",
																		"value": "unbounding period isn't over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19898:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19898:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19898:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19879:6:9",
														"type": ""
													}
												],
												"src": "19781:178:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20071:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20093:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20101:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20089:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20089:14:9"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20105:16:9",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20082:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20082:40:9"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20063:6:9",
														"type": ""
													}
												],
												"src": "19965:164:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20241:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20263:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20271:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20259:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20259:14:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20275:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20252:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20252:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20331:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20339:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20327:15:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20344:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20320:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20320:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20233:6:9",
														"type": ""
													}
												],
												"src": "20135:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20472:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20494:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20490:14:9"
																	},
																	{
																		"hexValue": "756e626f756e64696e67206e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20506:24:9",
																		"type": "",
																		"value": "unbounding not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20483:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20483:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20483:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20464:6:9",
														"type": ""
													}
												],
												"src": "20366:172:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20650:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20672:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20680:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20668:14:9"
																	},
																	{
																		"hexValue": "43616e6e6f7420726564756365206578697374696e6720706572696f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20684:31:9",
																		"type": "",
																		"value": "Cannot reduce existing period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20661:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20661:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20661:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20642:6:9",
														"type": ""
													}
												],
												"src": "20544:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20835:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20857:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20865:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20853:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20853:14:9"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20869:19:9",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20846:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20846:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20846:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20827:6:9",
														"type": ""
													}
												],
												"src": "20729:167:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21008:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21030:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21038:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21026:14:9"
																	},
																	{
																		"hexValue": "50726f76696465642072657761726420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21042:26:9",
																		"type": "",
																		"value": "Provided reward too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21019:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21019:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21000:6:9",
														"type": ""
													}
												],
												"src": "20902:174:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21188:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21210:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21218:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21206:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21206:14:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21222:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21199:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21199:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21180:6:9",
														"type": ""
													}
												],
												"src": "21082:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21373:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21395:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21403:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21391:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21391:14:9"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21407:34:9",
																		"type": "",
																		"value": "Caller is not RewardsDistributio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21384:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21384:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21384:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21463:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21471:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21459:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21459:15:9"
																	},
																	{
																		"hexValue": "6e20636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21476:12:9",
																		"type": "",
																		"value": "n contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21452:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21452:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21452:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21365:6:9",
														"type": ""
													}
												],
												"src": "21267:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21608:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21630:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21638:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21626:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21626:14:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21642:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21619:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21619:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21619:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21698:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21706:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21694:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21694:15:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21711:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21687:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21687:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21687:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21600:6:9",
														"type": ""
													}
												],
												"src": "21502:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21843:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21865:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21873:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21861:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21861:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21877:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21854:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21854:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21854:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21835:6:9",
														"type": ""
													}
												],
												"src": "21737:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "21997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21980:43:9"
															},
															"nodeType": "YulIf",
															"src": "21977:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21960:5:9",
														"type": ""
													}
												],
												"src": "21924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22092:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22146:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22155:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22158:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22148:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22148:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22148:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22115:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22137:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "22122:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22122:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22112:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22112:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22105:40:9"
															},
															"nodeType": "YulIf",
															"src": "22102:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22085:5:9",
														"type": ""
													}
												],
												"src": "22052:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22217:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22274:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22283:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22286:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22276:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22276:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22276:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22240:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22265:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "22247:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22247:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22237:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22237:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22230:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22230:43:9"
															},
															"nodeType": "YulIf",
															"src": "22227:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22210:5:9",
														"type": ""
													}
												],
												"src": "22174:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e(memPtr) {\n\n        mstore(add(memPtr, 0), \"unbounding period started\")\n\n    }\n\n    function store_literal_in_memory_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee(memPtr) {\n\n        mstore(add(memPtr, 0), \"unbounding period isn't over\")\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f(memPtr) {\n\n        mstore(add(memPtr, 0), \"unbounding not started\")\n\n    }\n\n    function store_literal_in_memory_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot reduce existing period\")\n\n    }\n\n    function store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw 0\")\n\n    }\n\n    function store_literal_in_memory_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provided reward too high\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not RewardsDistributio\")\n\n        mstore(add(memPtr, 32), \"n contract\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012b5760003560e01c80637b0a47ee116100ad578063d1af0c7d11610071578063d1af0c7d14610320578063d505493d1461033e578063df136d651461035a578063e9fad8ee14610378578063ebe2b12b146103825761012b565b80637b0a47ee1461027857806380faa57d146102965780638b876347146102b4578063c8f33c91146102e4578063cd3daf9d146103025761012b565b80633d18b912116100f45780633d18b912146101e65780633fc6df6e146101f057806370a082311461020e57806372f702f31461023e5780637acb77571461025c5761012b565b80628cc262146101305780630700037d1461016057806318160ddd14610190578063246132f9146101ae5780632e1a7d4d146101ca575b600080fd5b61014a60048036038101906101459190611a12565b6103a0565b6040516101579190611fd0565b60405180910390f35b61017a60048036038101906101759190611a12565b6104be565b6040516101879190611fd0565b60405180910390f35b6101986104d6565b6040516101a59190611fd0565b60405180910390f35b6101c860048036038101906101c39190611b06565b6104e0565b005b6101e460048036038101906101df9190611a6c565b6108ad565b005b6101ee610aa3565b005b6101f8610d83565b6040516102059190611d98565b60405180910390f35b61022860048036038101906102239190611a12565b610da7565b6040516102359190611fd0565b60405180910390f35b610246610df0565b6040516102539190611e13565b60405180910390f35b61027660048036038101906102719190611ac6565b610e16565b005b610280611144565b60405161028d9190611fd0565b60405180910390f35b61029e61114a565b6040516102ab9190611fd0565b60405180910390f35b6102ce60048036038101906102c99190611a12565b61115d565b6040516102db9190611fd0565b60405180910390f35b6102ec611175565b6040516102f99190611fd0565b60405180910390f35b61030a61117b565b6040516103179190611fd0565b60405180910390f35b610328611209565b6040516103359190611e13565b60405180910390f35b61035860048036038101906103539190611a6c565b61122f565b005b6103626113be565b60405161036f9190611fd0565b60405180910390f35b6103806113c4565b005b61038a6115bb565b6040516103979190611fd0565b60405180910390f35b60006104b7600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104a9670de0b6b3a764000061049b61044d600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461043f61117b565b6115c190919063ffffffff16565b600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d790919063ffffffff16565b6115ed90919063ffffffff16565b61160390919063ffffffff16565b9050919050565b60096020528060005260406000206000915090505481565b6000600a54905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056590611f70565b60405180910390fd5b6000600c60009054906101000a900460ff166106685761058c61117b565b60078190555061059a61114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610667576105dd816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b60045461067e834261160390919063ffffffff16565b10156106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690611ef0565b60405180910390fd5b60045442106106e6576106db82846115ed90919063ffffffff16565b600581905550610746565b60006106fd426004546115c190919063ffffffff16565b90506000610716600554836115d790919063ffffffff16565b905061073d8461072f838861160390919063ffffffff16565b6115ed90919063ffffffff16565b60058190555050505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a39190611d98565b60206040518083038186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190611a99565b905061080883826115ed90919063ffffffff16565b600554111561084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390611f30565b60405180910390fd5b42600681905550610866834261160390919063ffffffff16565b6004819055507f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f558460045460405161089f929190611feb565b60405180910390a150505050565b60018060008282546108bf9190612046565b925050819055506000600154905060008211610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790611f10565b60405180910390fd5b61092582600a546115c190919063ffffffff16565b600a8190555061097d82600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115c190919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a0d3383600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116199092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d583604051610a539190611fd0565b60405180910390a26001548114610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690611fb0565b60405180910390fd5b5050565b6001806000828254610ab59190612046565b925050819055506000600154905033600c60009054906101000a900460ff16610bbc57610ae061117b565b600781905550610aee61114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bbb57610b31816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b600c60009054906101000a900460ff1615610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0390611e50565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610d3a576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ceb3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116199092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d319190611fd0565b60405180910390a25b50506001548114610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7790611fb0565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001806000828254610e289190612046565b925050819055506000600154905033600c60009054906101000a900460ff16610f2f57610e5361117b565b600781905550610e6161114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f2e57610ea4816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b60008411610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6990611e90565b60405180910390fd5b610f8784600a5461160390919063ffffffff16565b600a81905550610fdf84600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160390919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc90ba2f1821a1933b06a152b152556d33fb65bcc1366bfa839c68715b039f61583308660405161105593929190611db3565b60405180910390a16110ac333086600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661169f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516110f29190611fd0565b60405180910390a250600154811461113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113690611fb0565b60405180910390fd5b505050565b60055481565b600061115842600454611728565b905090565b60086020528060005260406000206000915090505481565b60065481565b600080600a541415611191576007549050611206565b6112036111f2600a546111e4670de0b6b3a76400006111d66005546111c86006546111ba61114a565b6115c190919063ffffffff16565b6115d790919063ffffffff16565b6115d790919063ffffffff16565b6115ed90919063ffffffff16565b60075461160390919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060008282546112419190612046565b925050819055506000600154905033600c60009054906101000a900460ff166113485761126c61117b565b60078190555061127a61114a565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611347576112bd816103a0565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b6001600c60006101000a81548160ff021916908315150217905550824261136f9190612046565b600d819055505060015481146113ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b190611fb0565b60405180910390fd5b5050565b60075481565b600c60009054906101000a900460ff16611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a90611ed0565b60405180910390fd5b600d54421015611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f90611e70565b60405180910390fd5b6114a0600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ad565b61152c33600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116199092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516115b19190611fd0565b60405180910390a2565b60045481565b600081836115cf9190612127565b905092915050565b600081836115e591906120cd565b905092915050565b600081836115fb919061209c565b905092915050565b600081836116119190612046565b905092915050565b61169a8363a9059cbb60e01b8484604051602401611638929190611dea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611741565b505050565b611722846323b872dd60e01b8585856040516024016116c093929190611db3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611741565b50505050565b60008183106117375781611739565b825b905092915050565b60006117a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118089092919063ffffffff16565b905060008151111561180357808060200190518101906117c39190611a3f565b611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f990611f90565b60405180910390fd5b5b505050565b60606118178484600085611820565b90509392505050565b606082471015611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c90611eb0565b60405180910390fd5b61186e85611934565b6118ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a490611f50565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118d69190611d81565b60006040518083038185875af1925050503d8060008114611913576040519150601f19603f3d011682016040523d82523d6000602084013e611918565b606091505b5091509150611928828286611957565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611967578290506119b7565b60008351111561197a5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ae9190611e2e565b60405180910390fd5b9392505050565b6000813590506119cd816124de565b92915050565b6000815190506119e2816124f5565b92915050565b6000813590506119f78161250c565b92915050565b600081519050611a0c8161250c565b92915050565b600060208284031215611a2857611a2761226a565b5b6000611a36848285016119be565b91505092915050565b600060208284031215611a5557611a5461226a565b5b6000611a63848285016119d3565b91505092915050565b600060208284031215611a8257611a8161226a565b5b6000611a90848285016119e8565b91505092915050565b600060208284031215611aaf57611aae61226a565b5b6000611abd848285016119fd565b91505092915050565b60008060408385031215611add57611adc61226a565b5b6000611aeb858286016119e8565b9250506020611afc858286016119be565b9150509250929050565b60008060408385031215611b1d57611b1c61226a565b5b6000611b2b858286016119e8565b9250506020611b3c858286016119e8565b9150509250929050565b611b4f8161215b565b82525050565b6000611b6082612014565b611b6a818561202a565b9350611b7a8185602086016121d9565b80840191505092915050565b611b8f816121a3565b82525050565b6000611ba08261201f565b611baa8185612035565b9350611bba8185602086016121d9565b611bc38161226f565b840191505092915050565b6000611bdb601983612035565b9150611be682612280565b602082019050919050565b6000611bfe601c83612035565b9150611c09826122a9565b602082019050919050565b6000611c21600e83612035565b9150611c2c826122d2565b602082019050919050565b6000611c44602683612035565b9150611c4f826122fb565b604082019050919050565b6000611c67601683612035565b9150611c728261234a565b602082019050919050565b6000611c8a601d83612035565b9150611c9582612373565b602082019050919050565b6000611cad601183612035565b9150611cb88261239c565b602082019050919050565b6000611cd0601883612035565b9150611cdb826123c5565b602082019050919050565b6000611cf3601d83612035565b9150611cfe826123ee565b602082019050919050565b6000611d16602a83612035565b9150611d2182612417565b604082019050919050565b6000611d39602a83612035565b9150611d4482612466565b604082019050919050565b6000611d5c601f83612035565b9150611d67826124b5565b602082019050919050565b611d7b81612199565b82525050565b6000611d8d8284611b55565b915081905092915050565b6000602082019050611dad6000830184611b46565b92915050565b6000606082019050611dc86000830186611b46565b611dd56020830185611b46565b611de26040830184611d72565b949350505050565b6000604082019050611dff6000830185611b46565b611e0c6020830184611d72565b9392505050565b6000602082019050611e286000830184611b86565b92915050565b60006020820190508181036000830152611e488184611b95565b905092915050565b60006020820190508181036000830152611e6981611bce565b9050919050565b60006020820190508181036000830152611e8981611bf1565b9050919050565b60006020820190508181036000830152611ea981611c14565b9050919050565b60006020820190508181036000830152611ec981611c37565b9050919050565b60006020820190508181036000830152611ee981611c5a565b9050919050565b60006020820190508181036000830152611f0981611c7d565b9050919050565b60006020820190508181036000830152611f2981611ca0565b9050919050565b60006020820190508181036000830152611f4981611cc3565b9050919050565b60006020820190508181036000830152611f6981611ce6565b9050919050565b60006020820190508181036000830152611f8981611d09565b9050919050565b60006020820190508181036000830152611fa981611d2c565b9050919050565b60006020820190508181036000830152611fc981611d4f565b9050919050565b6000602082019050611fe56000830184611d72565b92915050565b60006040820190506120006000830185611d72565b61200d6020830184611d72565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061205182612199565b915061205c83612199565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120915761209061220c565b5b828201905092915050565b60006120a782612199565b91506120b283612199565b9250826120c2576120c161223b565b5b828204905092915050565b60006120d882612199565b91506120e383612199565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561211c5761211b61220c565b5b828202905092915050565b600061213282612199565b915061213d83612199565b9250828210156121505761214f61220c565b5b828203905092915050565b600061216682612179565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006121ae826121b5565b9050919050565b60006121c0826121c7565b9050919050565b60006121d282612179565b9050919050565b60005b838110156121f75780820151818401526020810190506121dc565b83811115612206576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f756e626f756e64696e6720706572696f64207374617274656400000000000000600082015250565b7f756e626f756e64696e6720706572696f642069736e2774206f76657200000000600082015250565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f756e626f756e64696e67206e6f74207374617274656400000000000000000000600082015250565b7f43616e6e6f7420726564756365206578697374696e6720706572696f64000000600082015250565b7f43616e6e6f742077697468647261772030000000000000000000000000000000600082015250565b7f50726f76696465642072657761726420746f6f20686967680000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f43616c6c6572206973206e6f742052657761726473446973747269627574696f60008201527f6e20636f6e747261637400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6124e78161215b565b81146124f257600080fd5b50565b6124fe8161216d565b811461250957600080fd5b50565b61251581612199565b811461252057600080fd5b5056fea2646970667358221220661a42cdd73d13ac28f13ee778064be9831d1fc2b498cb53dd98131a37e965d664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xD505493D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x382 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x302 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x3D18B912 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x25C JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x246132F9 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x13C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x4B7 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4A9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x49B PUSH2 0x44D PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x43F PUSH2 0x117B JUMP JUMPDEST PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x565 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x668 JUMPI PUSH2 0x58C PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x59A PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x667 JUMPI PUSH2 0x5DD DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x67E DUP4 TIMESTAMP PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x6E6 JUMPI PUSH2 0x6DB DUP3 DUP5 PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x746 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x716 PUSH1 0x5 SLOAD DUP4 PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x73D DUP5 PUSH2 0x72F DUP4 DUP9 PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP PUSH2 0x808 DUP4 DUP3 PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x866 DUP4 TIMESTAMP PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55 DUP5 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x89F SWAP3 SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x925 DUP3 PUSH1 0xA SLOAD PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x97D DUP3 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA0D CALLER DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1619 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAB5 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBBC JUMPI PUSH2 0xAE0 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xAEE PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBB JUMPI PUSH2 0xB31 DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCEB CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1619 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF2F JUMPI PUSH2 0xE53 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xE61 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2E JUMPI PUSH2 0xEA4 DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF69 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF87 DUP5 PUSH1 0xA SLOAD PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xFDF DUP5 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC90BA2F1821A1933B06A152B152556D33FB65BCC1366BFA839C68715B039F615 DUP4 ADDRESS DUP7 PUSH1 0x40 MLOAD PUSH2 0x1055 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x10AC CALLER ADDRESS DUP7 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x169F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1136 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1158 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA SLOAD EQ ISZERO PUSH2 0x1191 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x11F2 PUSH1 0xA SLOAD PUSH2 0x11E4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11D6 PUSH1 0x5 SLOAD PUSH2 0x11C8 PUSH1 0x6 SLOAD PUSH2 0x11BA PUSH2 0x114A JUMP JUMPDEST PUSH2 0x15C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1603 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1348 JUMPI PUSH2 0x126C PUSH2 0x117B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x127A PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1347 JUMPI PUSH2 0x12BD DUP2 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 TIMESTAMP PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1413 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140A SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144F SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x152C CALLER PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1619 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15E5 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1638 SWAP3 SWAP2 SWAP1 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1741 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1722 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1741 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1737 JUMPI DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1808 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1803 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1817 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1820 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185C SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186E DUP6 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x18AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A4 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x18D6 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1913 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1928 DUP3 DUP3 DUP7 PUSH2 0x1957 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1967 JUMPI DUP3 SWAP1 POP PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x197A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19CD DUP2 PUSH2 0x24DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19E2 DUP2 PUSH2 0x24F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F7 DUP2 PUSH2 0x250C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0C DUP2 PUSH2 0x250C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A28 JUMPI PUSH2 0x1A27 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A36 DUP5 DUP3 DUP6 ADD PUSH2 0x19BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP5 DUP3 DUP6 ADD PUSH2 0x19D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A81 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP5 DUP3 DUP6 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAF JUMPI PUSH2 0x1AAE PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABD DUP5 DUP3 DUP6 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ADD JUMPI PUSH2 0x1ADC PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEB DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFC DUP6 DUP3 DUP7 ADD PUSH2 0x19BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1D JUMPI PUSH2 0x1B1C PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2B DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3C DUP6 DUP3 DUP7 ADD PUSH2 0x19E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x215B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP3 PUSH2 0x2014 JUMP JUMPDEST PUSH2 0x1B6A DUP2 DUP6 PUSH2 0x202A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B8F DUP2 PUSH2 0x21A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA0 DUP3 PUSH2 0x201F JUMP JUMPDEST PUSH2 0x1BAA DUP2 DUP6 PUSH2 0x2035 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x1BC3 DUP2 PUSH2 0x226F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDB PUSH1 0x19 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE6 DUP3 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFE PUSH1 0x1C DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C09 DUP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 PUSH1 0xE DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C DUP3 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 PUSH1 0x26 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4F DUP3 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x16 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8A PUSH1 0x1D DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C95 DUP3 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAD PUSH1 0x11 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB8 DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0x18 DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF3 PUSH1 0x1D DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFE DUP3 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D16 PUSH1 0x2A DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D21 DUP3 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D39 PUSH1 0x2A DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5C PUSH1 0x1F DUP4 PUSH2 0x2035 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D67 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7B DUP2 PUSH2 0x2199 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP3 DUP5 PUSH2 0x1B55 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DC8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1DD5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1DE2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DFF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1E0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E28 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E48 DUP2 DUP5 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E69 DUP2 PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E89 DUP2 PUSH2 0x1BF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA9 DUP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC9 DUP2 PUSH2 0x1C37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE9 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F09 DUP2 PUSH2 0x1C7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F29 DUP2 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F49 DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F69 DUP2 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F89 DUP2 PUSH2 0x1D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA9 DUP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC9 DUP2 PUSH2 0x1D4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2000 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x200D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A7 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B2 DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x223B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E3 DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x211C JUMPI PUSH2 0x211B PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2132 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH2 0x213D DUP4 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2150 JUMPI PUSH2 0x214F PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2166 DUP3 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AE DUP3 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C0 DUP3 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D2 DUP3 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21DC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E626F756E64696E6720706572696F64207374617274656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x756E626F756E64696E6720706572696F642069736E2774206F76657200000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x756E626F756E64696E67206E6F74207374617274656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726564756365206578697374696E6720706572696F64000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742052657761726473446973747269627574696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E20636F6E747261637400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x24E7 DUP2 PUSH2 0x215B JUMP JUMPDEST DUP2 EQ PUSH2 0x24F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24FE DUP2 PUSH2 0x216D JUMP JUMPDEST DUP2 EQ PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2515 DUP2 PUSH2 0x2199 JUMP JUMPDEST DUP2 EQ PUSH2 0x2520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x1A42CDD73D13AC 0x28 CALL RETURNDATACOPY 0xE7 PUSH25 0x64BE9831D1FC2B498CB53DD98131A37E965D664736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "373:5213:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;822:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1315:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4002:882;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2708:332;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3254:376;;;:::i;:::-;;111:34:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1425:121:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2256:444;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;642:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1554:140;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;758:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1702:327;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3048:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;714:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3638:356;;;:::i;:::-;;604:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2037:207;2100:7;2127:109;2219:7;:16;2227:7;2219:16;;;;;;;;;;;;;;;;2127:87;2209:4;2127:77;2150:53;2171:22;:31;2194:7;2171:31;;;;;;;;;;;;;;;;2150:16;:14;:16::i;:::-;:20;;:53;;;;:::i;:::-;2127:9;:18;2137:7;2127:18;;;;;;;;;;;;;;;;:22;;:77;;;;:::i;:::-;:81;;:87;;;;:::i;:::-;:91;;:109;;;;:::i;:::-;2120:116;;2037:207;;;:::o;822:42::-;;;;;;;;;;;;;;;;;:::o;1315:102::-;1370:7;1397:12;;1390:19;;1315:102;:::o;4002:882::-;329:19:7;;;;;;;;;;315:33;;:10;:33;;;307:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4126:1:8::1;4947:10;;;;;;;;;;;4942:324;;4997:16;:14;:16::i;:::-;4974:20;:39;;;;5045:26;:24;:26::i;:::-;5028:14;:43;;;;5109:1;5090:21;;:7;:21;;;5086:169;;5151:15;5158:7;5151:6;:15::i;:::-;5132:7;:16;5140:7;5132:16;;;;;;;;;;;;;;;:34;;;;5219:20;;5185:22;:31;5208:7;5185:31;;;;;;;;;;;;;;;:54;;;;5086:169;4942:324;4189:12:::2;;4149:36;4169:15;4149;:19;;:36;;;;:::i;:::-;:52;;4141:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:12;;4252:15;:31;4248:318;;4313:27;4324:15;4313:6;:10;;:27;;;;:::i;:::-;4300:10;:40;;;;4248:318;;;4373:17;4393:33;4410:15;4393:12;;:16;;:33;;;;:::i;:::-;4373:53;;4441:16;4460:25;4474:10;;4460:9;:13;;:25;;;;:::i;:::-;4441:44;;4513:41;4538:15;4513:20;4524:8;4513:6;:10;;:20;;;;:::i;:::-;:24;;:41;;;;:::i;:::-;4500:10;:54;;;;4358:208;;4248:318;4578:12;4593;;;;;;;;;;;:22;;;4624:4;4593:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4578:52;;4663:28;4675:15;4663:7;:11;;:28;;;;:::i;:::-;4649:10;;:42;;4641:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4750:15;4733:14;:32;;;;4791:36;4811:15;4791;:19;;:36;;;;:::i;:::-;4776:12;:51;;;;4843:33;4855:6;4863:12;;4843:33;;;;;;;:::i;:::-;;;;;;;;4130:754;406:1:7::1;4002:882:8::0;;:::o;2708:332::-;846:1:6;829:13;;:18;;;;;;;:::i;:::-;;;;;;;;858:20;881:13;;858:36;;2790:1:8::1;2781:6;:10;2773:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;2839:24;2856:6;2839:12;;:16;;:24;;;;:::i;:::-;2824:12;:39;;;;2898:33;2924:6;2898:9;:21;2908:10;2898:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;2874:9;:21;2884:10;2874:21;;;;;;;;;;;;;;;:57;;;;2942:45;2968:10;2980:6;2942:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;3013:10;3003:29;;;3025:6;3003:29;;;;;;:::i;:::-;;;;;;;;941:13:6::0;;925:12;:29;917:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;818:180;2708:332:8;:::o;3254:376::-;846:1:6;829:13;;:18;;;;;;;:::i;:::-;;;;;;;;858:20;881:13;;858:36;;3317:10:8::1;4947;;;;;;;;;;;4942:324;;4997:16;:14;:16::i;:::-;4974:20;:39;;;;5045:26;:24;:26::i;:::-;5028:14;:43;;;;5109:1;5090:21;;:7;:21;;;5086:169;;5151:15;5158:7;5151:6;:15::i;:::-;5132:7;:16;5140:7;5132:16;;;;;;;;;;;;;;;:34;;;;5219:20;;5185:22;:31;5208:7;5185:31;;;;;;;;;;;;;;;:54;;;;5086:169;4942:324;3349:10:::2;;;;;;;;;;;3348:11;3340:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3400:14;3417:7;:19;3425:10;3417:19;;;;;;;;;;;;;;;;3400:36;;3460:1;3451:6;:10;3447:176;;;3500:1;3478:7;:19;3486:10;3478:19;;;;;;;;;;;;;;;:23;;;;3516:45;3542:10;3554:6;3516:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;3592:10;3581:30;;;3604:6;3581:30;;;;;;:::i;:::-;;;;;;;;3447:176;3329:301;905:1:6::1;941:13:::0;;925:12;:29;917:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;818:180;3254:376:8:o;111:34:7:-;;;;;;;;;;;;:::o;1425:121:8:-;1493:7;1520:9;:18;1530:7;1520:18;;;;;;;;;;;;;;;;1513:25;;1425:121;;;:::o;571:26::-;;;;;;;;;;;;;:::o;2256:444::-;846:1:6;829:13;;:18;;;;;;;:::i;:::-;;;;;;;;858:20;881:13;;858:36;;2346:10:8::1;4947;;;;;;;;;;;4942:324;;4997:16;:14;:16::i;:::-;4974:20;:39;;;;5045:26;:24;:26::i;:::-;5028:14;:43;;;;5109:1;5090:21;;:7;:21;;;5086:169;;5151:15;5158:7;5151:6;:15::i;:::-;5132:7;:16;5140:7;5132:16;;;;;;;;;;;;;;;:34;;;;5219:20;;5185:22;:31;5208:7;5185:31;;;;;;;;;;;;;;;:54;;;;5086:169;4942:324;2386:1:::2;2377:6;:10;2369:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;2432:24;2449:6;2432:12;;:16;;:24;;;;:::i;:::-;2417:12;:39;;;;2491:33;2517:6;2491:9;:21;2501:10;2491:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;2467:9;:21;2477:10;2467:21;;;;;;;;;;;;;;;:57;;;;2540:35;2546:5;2561:4;2568:6;2540:35;;;;;;;;:::i;:::-;;;;;;;;2586:64;2616:10;2636:4;2643:6;2586:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;2673:10;2666:26;;;2685:6;2666:26;;;;;;:::i;:::-;;;;;;;;905:1:6::1;941:13:::0;;925:12;:29;917:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;818:180;2256:444:8;;:::o;642:29::-;;;;:::o;1554:140::-;1620:7;1647:39;1656:15;1673:12;;1647:8;:39::i;:::-;1640:46;;1554:140;:::o;758:57::-;;;;;;;;;;;;;;;;;:::o;678:29::-;;;;:::o;1702:327::-;1758:7;1798:1;1782:12;;:17;1778:77;;;1823:20;;1816:27;;;;1778:77;1881:140;1920:90;1997:12;;1920:72;1987:4;1920:62;1971:10;;1920:46;1951:14;;1920:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;1881:20;;:24;;:140;;;;:::i;:::-;1865:156;;1702:327;;:::o;538:26::-;;;;;;;;;;;;;:::o;3048:198::-;846:1:6;829:13;;:18;;;;;;;:::i;:::-;;;;;;;;858:20;881:13;;858:36;;3136:10:8::1;4947;;;;;;;;;;;4942:324;;4997:16;:14;:16::i;:::-;4974:20;:39;;;;5045:26;:24;:26::i;:::-;5028:14;:43;;;;5109:1;5090:21;;:7;:21;;;5086:169;;5151:15;5158:7;5151:6;:15::i;:::-;5132:7;:16;5140:7;5132:16;;;;;;;;;;;;;;;:34;;;;5219:20;;5185:22;:31;5208:7;5185:31;;;;;;;;;;;;;;;:54;;;;5086:169;4942:324;3172:4:::2;3159:10;;:17;;;;;;;;;;;;;;;;;;3225:13;3207:15;:31;;;;:::i;:::-;3187:17;:51;;;;905:1:6::1;941:13:::0;;925:12;:29;917:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;818:180;3048:198:8;:::o;714:35::-;;;;:::o;3638:356::-;3691:10;;;;;;;;;;;3683:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3766:17;;3747:15;:36;;3739:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3827:31;3836:9;:21;3846:10;3836:21;;;;;;;;;;;;;;;;3827:8;:31::i;:::-;3869:58;3895:10;3907:7;:19;3915:10;3907:19;;;;;;;;;;;;;;;;3869:12;;;;;;;;;;;:25;;;;:58;;;;;:::i;:::-;3954:10;3943:43;;;3966:7;:19;3974:10;3966:19;;;;;;;;;;;;;;;;3943:43;;;;;;:::i;:::-;;;;;;;;3638:356::o;604:31::-;;;;:::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;701:205:1:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;912:241::-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;461:104:3:-;519:7;549:1;545;:5;:13;;557:1;545:13;;;553:1;545:13;538:20;;461:104;;;;:::o;3207:706:1:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:::-;2515:6;2523;2572:2;2560:9;2551:7;2547:23;2543:32;2540:119;;;2578:79;;:::i;:::-;2540:119;2698:1;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2669:117;2825:2;2851:53;2896:7;2887:6;2876:9;2872:22;2851:53;:::i;:::-;2841:63;;2796:118;2447:474;;;;;:::o;2927:118::-;3014:24;3032:5;3014:24;:::i;:::-;3009:3;3002:37;2927:118;;:::o;3051:373::-;3155:3;3183:38;3215:5;3183:38;:::i;:::-;3237:88;3318:6;3313:3;3237:88;:::i;:::-;3230:95;;3334:52;3379:6;3374:3;3367:4;3360:5;3356:16;3334:52;:::i;:::-;3411:6;3406:3;3402:16;3395:23;;3159:265;3051:373;;;;:::o;3430:157::-;3530:50;3574:5;3530:50;:::i;:::-;3525:3;3518:63;3430:157;;:::o;3593:364::-;3681:3;3709:39;3742:5;3709:39;:::i;:::-;3764:71;3828:6;3823:3;3764:71;:::i;:::-;3757:78;;3844:52;3889:6;3884:3;3877:4;3870:5;3866:16;3844:52;:::i;:::-;3921:29;3943:6;3921:29;:::i;:::-;3916:3;3912:39;3905:46;;3685:272;3593:364;;;;:::o;3963:366::-;4105:3;4126:67;4190:2;4185:3;4126:67;:::i;:::-;4119:74;;4202:93;4291:3;4202:93;:::i;:::-;4320:2;4315:3;4311:12;4304:19;;3963:366;;;:::o;4335:::-;4477:3;4498:67;4562:2;4557:3;4498:67;:::i;:::-;4491:74;;4574:93;4663:3;4574:93;:::i;:::-;4692:2;4687:3;4683:12;4676:19;;4335:366;;;:::o;4707:::-;4849:3;4870:67;4934:2;4929:3;4870:67;:::i;:::-;4863:74;;4946:93;5035:3;4946:93;:::i;:::-;5064:2;5059:3;5055:12;5048:19;;4707:366;;;:::o;5079:::-;5221:3;5242:67;5306:2;5301:3;5242:67;:::i;:::-;5235:74;;5318:93;5407:3;5318:93;:::i;:::-;5436:2;5431:3;5427:12;5420:19;;5079:366;;;:::o;5451:::-;5593:3;5614:67;5678:2;5673:3;5614:67;:::i;:::-;5607:74;;5690:93;5779:3;5690:93;:::i;:::-;5808:2;5803:3;5799:12;5792:19;;5451:366;;;:::o;5823:::-;5965:3;5986:67;6050:2;6045:3;5986:67;:::i;:::-;5979:74;;6062:93;6151:3;6062:93;:::i;:::-;6180:2;6175:3;6171:12;6164:19;;5823:366;;;:::o;6195:::-;6337:3;6358:67;6422:2;6417:3;6358:67;:::i;:::-;6351:74;;6434:93;6523:3;6434:93;:::i;:::-;6552:2;6547:3;6543:12;6536:19;;6195:366;;;:::o;6567:::-;6709:3;6730:67;6794:2;6789:3;6730:67;:::i;:::-;6723:74;;6806:93;6895:3;6806:93;:::i;:::-;6924:2;6919:3;6915:12;6908:19;;6567:366;;;:::o;6939:::-;7081:3;7102:67;7166:2;7161:3;7102:67;:::i;:::-;7095:74;;7178:93;7267:3;7178:93;:::i;:::-;7296:2;7291:3;7287:12;7280:19;;6939:366;;;:::o;7311:::-;7453:3;7474:67;7538:2;7533:3;7474:67;:::i;:::-;7467:74;;7550:93;7639:3;7550:93;:::i;:::-;7668:2;7663:3;7659:12;7652:19;;7311:366;;;:::o;7683:::-;7825:3;7846:67;7910:2;7905:3;7846:67;:::i;:::-;7839:74;;7922:93;8011:3;7922:93;:::i;:::-;8040:2;8035:3;8031:12;8024:19;;7683:366;;;:::o;8055:::-;8197:3;8218:67;8282:2;8277:3;8218:67;:::i;:::-;8211:74;;8294:93;8383:3;8294:93;:::i;:::-;8412:2;8407:3;8403:12;8396:19;;8055:366;;;:::o;8427:118::-;8514:24;8532:5;8514:24;:::i;:::-;8509:3;8502:37;8427:118;;:::o;8551:271::-;8681:3;8703:93;8792:3;8783:6;8703:93;:::i;:::-;8696:100;;8813:3;8806:10;;8551:271;;;;:::o;8828:222::-;8921:4;8959:2;8948:9;8944:18;8936:26;;8972:71;9040:1;9029:9;9025:17;9016:6;8972:71;:::i;:::-;8828:222;;;;:::o;9056:442::-;9205:4;9243:2;9232:9;9228:18;9220:26;;9256:71;9324:1;9313:9;9309:17;9300:6;9256:71;:::i;:::-;9337:72;9405:2;9394:9;9390:18;9381:6;9337:72;:::i;:::-;9419;9487:2;9476:9;9472:18;9463:6;9419:72;:::i;:::-;9056:442;;;;;;:::o;9504:332::-;9625:4;9663:2;9652:9;9648:18;9640:26;;9676:71;9744:1;9733:9;9729:17;9720:6;9676:71;:::i;:::-;9757:72;9825:2;9814:9;9810:18;9801:6;9757:72;:::i;:::-;9504:332;;;;;:::o;9842:248::-;9948:4;9986:2;9975:9;9971:18;9963:26;;9999:84;10080:1;10069:9;10065:17;10056:6;9999:84;:::i;:::-;9842:248;;;;:::o;10096:313::-;10209:4;10247:2;10236:9;10232:18;10224:26;;10296:9;10290:4;10286:20;10282:1;10271:9;10267:17;10260:47;10324:78;10397:4;10388:6;10324:78;:::i;:::-;10316:86;;10096:313;;;;:::o;10415:419::-;10581:4;10619:2;10608:9;10604:18;10596:26;;10668:9;10662:4;10658:20;10654:1;10643:9;10639:17;10632:47;10696:131;10822:4;10696:131;:::i;:::-;10688:139;;10415:419;;;:::o;10840:::-;11006:4;11044:2;11033:9;11029:18;11021:26;;11093:9;11087:4;11083:20;11079:1;11068:9;11064:17;11057:47;11121:131;11247:4;11121:131;:::i;:::-;11113:139;;10840:419;;;:::o;11265:::-;11431:4;11469:2;11458:9;11454:18;11446:26;;11518:9;11512:4;11508:20;11504:1;11493:9;11489:17;11482:47;11546:131;11672:4;11546:131;:::i;:::-;11538:139;;11265:419;;;:::o;11690:::-;11856:4;11894:2;11883:9;11879:18;11871:26;;11943:9;11937:4;11933:20;11929:1;11918:9;11914:17;11907:47;11971:131;12097:4;11971:131;:::i;:::-;11963:139;;11690:419;;;:::o;12115:::-;12281:4;12319:2;12308:9;12304:18;12296:26;;12368:9;12362:4;12358:20;12354:1;12343:9;12339:17;12332:47;12396:131;12522:4;12396:131;:::i;:::-;12388:139;;12115:419;;;:::o;12540:::-;12706:4;12744:2;12733:9;12729:18;12721:26;;12793:9;12787:4;12783:20;12779:1;12768:9;12764:17;12757:47;12821:131;12947:4;12821:131;:::i;:::-;12813:139;;12540:419;;;:::o;12965:::-;13131:4;13169:2;13158:9;13154:18;13146:26;;13218:9;13212:4;13208:20;13204:1;13193:9;13189:17;13182:47;13246:131;13372:4;13246:131;:::i;:::-;13238:139;;12965:419;;;:::o;13390:::-;13556:4;13594:2;13583:9;13579:18;13571:26;;13643:9;13637:4;13633:20;13629:1;13618:9;13614:17;13607:47;13671:131;13797:4;13671:131;:::i;:::-;13663:139;;13390:419;;;:::o;13815:::-;13981:4;14019:2;14008:9;14004:18;13996:26;;14068:9;14062:4;14058:20;14054:1;14043:9;14039:17;14032:47;14096:131;14222:4;14096:131;:::i;:::-;14088:139;;13815:419;;;:::o;14240:::-;14406:4;14444:2;14433:9;14429:18;14421:26;;14493:9;14487:4;14483:20;14479:1;14468:9;14464:17;14457:47;14521:131;14647:4;14521:131;:::i;:::-;14513:139;;14240:419;;;:::o;14665:::-;14831:4;14869:2;14858:9;14854:18;14846:26;;14918:9;14912:4;14908:20;14904:1;14893:9;14889:17;14882:47;14946:131;15072:4;14946:131;:::i;:::-;14938:139;;14665:419;;;:::o;15090:::-;15256:4;15294:2;15283:9;15279:18;15271:26;;15343:9;15337:4;15333:20;15329:1;15318:9;15314:17;15307:47;15371:131;15497:4;15371:131;:::i;:::-;15363:139;;15090:419;;;:::o;15515:222::-;15608:4;15646:2;15635:9;15631:18;15623:26;;15659:71;15727:1;15716:9;15712:17;15703:6;15659:71;:::i;:::-;15515:222;;;;:::o;15743:332::-;15864:4;15902:2;15891:9;15887:18;15879:26;;15915:71;15983:1;15972:9;15968:17;15959:6;15915:71;:::i;:::-;15996:72;16064:2;16053:9;16049:18;16040:6;15996:72;:::i;:::-;15743:332;;;;;:::o;16162:98::-;16213:6;16247:5;16241:12;16231:22;;16162:98;;;:::o;16266:99::-;16318:6;16352:5;16346:12;16336:22;;16266:99;;;:::o;16371:147::-;16472:11;16509:3;16494:18;;16371:147;;;;:::o;16524:169::-;16608:11;16642:6;16637:3;16630:19;16682:4;16677:3;16673:14;16658:29;;16524:169;;;;:::o;16699:305::-;16739:3;16758:20;16776:1;16758:20;:::i;:::-;16753:25;;16792:20;16810:1;16792:20;:::i;:::-;16787:25;;16946:1;16878:66;16874:74;16871:1;16868:81;16865:107;;;16952:18;;:::i;:::-;16865:107;16996:1;16993;16989:9;16982:16;;16699:305;;;;:::o;17010:185::-;17050:1;17067:20;17085:1;17067:20;:::i;:::-;17062:25;;17101:20;17119:1;17101:20;:::i;:::-;17096:25;;17140:1;17130:35;;17145:18;;:::i;:::-;17130:35;17187:1;17184;17180:9;17175:14;;17010:185;;;;:::o;17201:348::-;17241:7;17264:20;17282:1;17264:20;:::i;:::-;17259:25;;17298:20;17316:1;17298:20;:::i;:::-;17293:25;;17486:1;17418:66;17414:74;17411:1;17408:81;17403:1;17396:9;17389:17;17385:105;17382:131;;;17493:18;;:::i;:::-;17382:131;17541:1;17538;17534:9;17523:20;;17201:348;;;;:::o;17555:191::-;17595:4;17615:20;17633:1;17615:20;:::i;:::-;17610:25;;17649:20;17667:1;17649:20;:::i;:::-;17644:25;;17688:1;17685;17682:8;17679:34;;;17693:18;;:::i;:::-;17679:34;17738:1;17735;17731:9;17723:17;;17555:191;;;;:::o;17752:96::-;17789:7;17818:24;17836:5;17818:24;:::i;:::-;17807:35;;17752:96;;;:::o;17854:90::-;17888:7;17931:5;17924:13;17917:21;17906:32;;17854:90;;;:::o;17950:126::-;17987:7;18027:42;18020:5;18016:54;18005:65;;17950:126;;;:::o;18082:77::-;18119:7;18148:5;18137:16;;18082:77;;;:::o;18165:139::-;18228:9;18261:37;18292:5;18261:37;:::i;:::-;18248:50;;18165:139;;;:::o;18310:126::-;18360:9;18393:37;18424:5;18393:37;:::i;:::-;18380:50;;18310:126;;;:::o;18442:113::-;18492:9;18525:24;18543:5;18525:24;:::i;:::-;18512:37;;18442:113;;;:::o;18561:307::-;18629:1;18639:113;18653:6;18650:1;18647:13;18639:113;;;18738:1;18733:3;18729:11;18723:18;18719:1;18714:3;18710:11;18703:39;18675:2;18672:1;18668:10;18663:15;;18639:113;;;18770:6;18767:1;18764:13;18761:101;;;18850:1;18841:6;18836:3;18832:16;18825:27;18761:101;18610:258;18561:307;;;:::o;18874:180::-;18922:77;18919:1;18912:88;19019:4;19016:1;19009:15;19043:4;19040:1;19033:15;19060:180;19108:77;19105:1;19098:88;19205:4;19202:1;19195:15;19229:4;19226:1;19219:15;19369:117;19478:1;19475;19468:12;19492:102;19533:6;19584:2;19580:7;19575:2;19568:5;19564:14;19560:28;19550:38;;19492:102;;;:::o;19600:175::-;19740:27;19736:1;19728:6;19724:14;19717:51;19600:175;:::o;19781:178::-;19921:30;19917:1;19909:6;19905:14;19898:54;19781:178;:::o;19965:164::-;20105:16;20101:1;20093:6;20089:14;20082:40;19965:164;:::o;20135:225::-;20275:34;20271:1;20263:6;20259:14;20252:58;20344:8;20339:2;20331:6;20327:15;20320:33;20135:225;:::o;20366:172::-;20506:24;20502:1;20494:6;20490:14;20483:48;20366:172;:::o;20544:179::-;20684:31;20680:1;20672:6;20668:14;20661:55;20544:179;:::o;20729:167::-;20869:19;20865:1;20857:6;20853:14;20846:43;20729:167;:::o;20902:174::-;21042:26;21038:1;21030:6;21026:14;21019:50;20902:174;:::o;21082:179::-;21222:31;21218:1;21210:6;21206:14;21199:55;21082:179;:::o;21267:229::-;21407:34;21403:1;21395:6;21391:14;21384:58;21476:12;21471:2;21463:6;21459:15;21452:37;21267:229;:::o;21502:::-;21642:34;21638:1;21630:6;21626:14;21619:58;21711:12;21706:2;21698:6;21694:15;21687:37;21502:229;:::o;21737:181::-;21877:33;21873:1;21865:6;21861:14;21854:57;21737:181;:::o;21924:122::-;21997:24;22015:5;21997:24;:::i;:::-;21990:5;21987:35;21977:63;;22036:1;22033;22026:12;21977:63;21924:122;:::o;22052:116::-;22122:21;22137:5;22122:21;:::i;:::-;22115:5;22112:32;22102:60;;22158:1;22155;22148:12;22102:60;22052:116;:::o;22174:122::-;22247:24;22265:5;22247:24;:::i;:::-;22240:5;22237:35;22227:63;;22286:1;22283;22276:12;22227:63;22174:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1912200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2908",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"lastTimeRewardApplicable()": "2563",
								"lastUpdateTime()": "2518",
								"notifyRewardAmount(uint256,uint256)": "infinite",
								"periodFinish()": "2539",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "2495",
								"rewardRate()": "2452",
								"rewards(address)": "2860",
								"rewardsDistribution()": "2556",
								"rewardsToken()": "2622",
								"stake(uint256,address)": "infinite",
								"stakingToken()": "2689",
								"totalSupply()": "2505",
								"unboundingPeriod(uint256)": "infinite",
								"userRewardPerTokenPaid(address)": "2881",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 634,
									"end": 635,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 635,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 604,
									"end": 635,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 670,
									"end": 671,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 671,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 642,
									"end": 671,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 398,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 402,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 385,
									"end": 402,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 402,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 385,
									"end": 402,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1185,
									"end": 1198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1175,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1163,
									"end": 1175,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1232,
									"end": 1245,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1222,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1210,
									"end": 1222,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1210,
									"end": 1246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1279,
									"end": 1299,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1276,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1257,
									"end": 1299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1307,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 244,
									"end": 250,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 266,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 311,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 288,
									"end": 295,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 284,
									"end": 307,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 277,
									"end": 396,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 277,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 277,
									"end": 396,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 516,
									"end": 523,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 507,
									"end": 513,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 505,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 492,
									"end": 514,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 524,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 524,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 534,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 655,
									"end": 662,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 635,
									"end": 644,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 631,
									"end": 653,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 589,
									"end": 663,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 589,
									"end": 663,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 544,
									"end": 673,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 794,
									"end": 801,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 774,
									"end": 783,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 770,
									"end": 792,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 728,
									"end": 802,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 728,
									"end": 802,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 683,
									"end": 812,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 961,
									"end": 996,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 961,
									"end": 996,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1045,
									"end": 1052,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1127,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1074,
									"end": 1128,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1457,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1449,
									"end": 1484,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1499,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1496,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1500,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 5586,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220661a42cdd73d13ac28f13ee778064be9831d1fc2b498cb53dd98131a37e965d664736f6c63430008070033",
									".code": [
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "7B0A47EE"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "D1AF0C7D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "D1AF0C7D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "D505493D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "DF136D65"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "E9FAD8EE"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "EBE2B12B"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "7B0A47EE"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "80FAA57D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "8B876347"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "C8F33C91"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "CD3DAF9D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "3D18B912"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "3D18B912"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "3FC6DF6E"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "72F702F3"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "7ACB7757"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "8CC262"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "700037D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "246132F9"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 373,
											"end": 5586,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2219,
											"end": 2226,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2234,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2209,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2171,
											"end": 2193,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2201,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2202,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2150,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2150,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2144,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2127,
											"end": 2149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2127,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2127,
											"end": 2208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2127,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2127,
											"end": 2218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2127,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2244,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 864,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1397,
											"end": 1409,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1417,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 329,
											"end": 348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 329,
											"end": 348,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 329,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 329,
											"end": 348,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 329,
											"end": 348,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 329,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 329,
											"end": 348,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 329,
											"end": 348,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 315,
											"end": 348,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 315,
											"end": 348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 315,
											"end": 325,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 315,
											"end": 348,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 315,
											"end": 348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 315,
											"end": 348,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 307,
											"end": 395,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 307,
											"end": 395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4997,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5207,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4201,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4201,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4141,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4283,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4283,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4283,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4324,
											"end": 4339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4319,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4313,
											"end": 4323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4310,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4373,
											"end": 4390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4410,
											"end": 4425,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4393,
											"end": 4409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4393,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4373,
											"end": 4426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4373,
											"end": 4426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4441,
											"end": 4457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4460,
											"end": 4473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4460,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4441,
											"end": 4485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4441,
											"end": 4485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4538,
											"end": 4553,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4524,
											"end": 4532,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4513,
											"end": 4523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4510,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4500,
											"end": 4554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4554,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4248,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4615,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 4624,
											"end": 4628,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4593,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4675,
											"end": 4690,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4663,
											"end": 4674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4659,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4649,
											"end": 4659,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4691,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4765,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4733,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4733,
											"end": 4765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4733,
											"end": 4765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4733,
											"end": 4765,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4733,
											"end": 4765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4806,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4791,
											"end": 4810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4791,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "PUSH",
											"source": 8,
											"value": "6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55"
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4863,
											"end": 4875,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4884,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 829,
											"end": 842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2791,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2839,
											"end": 2855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2839,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2924,
											"end": 2930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2918,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2898,
											"end": 2923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2898,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2894,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2931,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2931,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2968,
											"end": 2978,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2980,
											"end": 2986,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2967,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2967,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2942,
											"end": 2967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2942,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3023,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "PUSH",
											"source": 8,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3032,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 941,
											"end": 954,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 954,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 954,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3040,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 829,
											"end": 842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3327,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4997,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5207,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3340,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3435,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3461,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3623,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3447,
											"end": 3623,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3485,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3496,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3497,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3542,
											"end": 3552,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3516,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3602,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "PUSH",
											"source": 8,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3604,
											"end": 3610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3611,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3623,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3447,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 954,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 954,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 954,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3254,
											"end": 3630,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 111,
											"end": 145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 111,
											"end": 145,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1537,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1425,
											"end": 1546,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 597,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 571,
											"end": 597,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 829,
											"end": 842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4997,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5207,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2387,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2432,
											"end": 2448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2417,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2456,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2487,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2524,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2524,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "C90BA2F1821A1933B06A152B152556D33FB65BCC1366BFA839C68715B039F615"
										},
										{
											"begin": 2546,
											"end": 2551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2575,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2636,
											"end": 2640,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2586,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2683,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "PUSH",
											"source": 8,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2692,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 954,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 954,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 954,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2700,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 642,
											"end": 671,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 642,
											"end": 671,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1647,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1647,
											"end": 1686,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1686,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1647,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1694,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 815,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 678,
											"end": 707,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 678,
											"end": 707,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1799,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1855,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1778,
											"end": 1855,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1823,
											"end": 1843,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1855,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1778,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1997,
											"end": 2009,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1997,
											"end": 2009,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1951,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1951,
											"end": 1965,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1920,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1920,
											"end": 1970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1920,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1920,
											"end": 1986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1920,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1920,
											"end": 1996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1920,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1901,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1881,
											"end": 1901,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1881,
											"end": 1905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1881,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1865,
											"end": 2021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1865,
											"end": 2021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 2029,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 538,
											"end": 564,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 829,
											"end": 842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 858,
											"end": 894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3146,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4947,
											"end": 4957,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4997,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5219,
											"end": 5239,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5207,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5086,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4942,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3159,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3222,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3207,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3204,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 954,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 954,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 954,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 990,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 917,
											"end": 990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3246,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 714,
											"end": 749,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 749,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3683,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3783,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3783,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3856,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3827,
											"end": 3858,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3827,
											"end": 3858,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3827,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3914,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3925,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3869,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3966,
											"end": 3973,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3984,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3986,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3994,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 635,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 635,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 461,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 461,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 519,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 545,
											"end": 550,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 545,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 545,
											"end": 558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 545,
											"end": 558,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 545,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 553,
											"end": 554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 545,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 461,
											"end": 565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 461,
											"end": 565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 461,
											"end": 565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 461,
											"end": 565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 461,
											"end": 565,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2547,
											"end": 2570,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2659,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2540,
											"end": 2659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2578,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2578,
											"end": 2657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2657,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2578,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2540,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2757,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2827,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2896,
											"end": 2903,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2851,
											"end": 2904,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2904,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2851,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 2914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2927,
											"end": 3045,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2927,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3032,
											"end": 3037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3014,
											"end": 3038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3038,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3014,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 3045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 3045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 3045,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3183,
											"end": 3221,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3221,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3183,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3316,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3237,
											"end": 3325,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3325,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3237,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3325,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3377,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3424,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3430,
											"end": 3587,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3430,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3574,
											"end": 3579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3587,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 3742,
											"end": 3747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 3709,
											"end": 3748,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3709,
											"end": 3748,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 3709,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 3826,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3764,
											"end": 3835,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3764,
											"end": 3835,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 3764,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3835,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3921,
											"end": 3950,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3921,
											"end": 3950,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 3921,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3916,
											"end": 3919,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3957,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3963,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 3963,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4190,
											"end": 4192,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4126,
											"end": 4193,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4126,
											"end": 4193,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4126,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4193,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4202,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 4291,
											"end": 4294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4202,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4202,
											"end": 4295,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4202,
											"end": 4295,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 4202,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4323,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 4329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 4329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 4329,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4562,
											"end": 4564,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4687,
											"end": 4690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4707,
											"end": 5073,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 4707,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 4934,
											"end": 4936,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4870,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4870,
											"end": 4937,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4870,
											"end": 4937,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 4870,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4937,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4946,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5035,
											"end": 5038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4946,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 4946,
											"end": 5039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4946,
											"end": 5039,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4946,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5062,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5055,
											"end": 5067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 5073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 5073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 5073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 5073,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5079,
											"end": 5445,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5079,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5242,
											"end": 5309,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5242,
											"end": 5309,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 5242,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5309,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5407,
											"end": 5410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 5318,
											"end": 5411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5318,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5318,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5431,
											"end": 5434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5420,
											"end": 5439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5420,
											"end": 5439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5451,
											"end": 5817,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 5451,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5593,
											"end": 5596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 5678,
											"end": 5680,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5614,
											"end": 5681,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5614,
											"end": 5681,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 5614,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5690,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 5779,
											"end": 5782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5690,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5690,
											"end": 5783,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5783,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 5690,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5808,
											"end": 5810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5803,
											"end": 5806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5817,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5965,
											"end": 5968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6195,
											"end": 6561,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 6195,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 6422,
											"end": 6424,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6358,
											"end": 6425,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6358,
											"end": 6425,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 6358,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 6434,
											"end": 6527,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6434,
											"end": 6527,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6434,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6547,
											"end": 6550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6543,
											"end": 6555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6536,
											"end": 6555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6536,
											"end": 6555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6561,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6567,
											"end": 6933,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 6567,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6709,
											"end": 6712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6794,
											"end": 6796,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6895,
											"end": 6898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6806,
											"end": 6899,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6806,
											"end": 6899,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6806,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6919,
											"end": 6922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 6927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6908,
											"end": 6927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6908,
											"end": 6927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6567,
											"end": 6933,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6567,
											"end": 6933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6567,
											"end": 6933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6567,
											"end": 6933,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6939,
											"end": 7305,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6939,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7081,
											"end": 7084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7166,
											"end": 7168,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7102,
											"end": 7169,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7102,
											"end": 7169,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7102,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7169,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7178,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7267,
											"end": 7270,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7178,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 7178,
											"end": 7271,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7178,
											"end": 7271,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7178,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7291,
											"end": 7294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7287,
											"end": 7299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 7305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 7305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 7305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 7305,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7538,
											"end": 7540,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7467,
											"end": 7541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7467,
											"end": 7541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7639,
											"end": 7642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7825,
											"end": 7828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7839,
											"end": 7913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7839,
											"end": 7913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8040,
											"end": 8042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8035,
											"end": 8038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 8383,
											"end": 8386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8427,
											"end": 8545,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 8427,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8532,
											"end": 8537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 8514,
											"end": 8538,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8514,
											"end": 8538,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8514,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8502,
											"end": 8539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8545,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8681,
											"end": 8684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8822,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8921,
											"end": 8925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8959,
											"end": 8961,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8948,
											"end": 8957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 8962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8936,
											"end": 8962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8936,
											"end": 8962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8972,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 9040,
											"end": 9041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9022,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8972,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8972,
											"end": 9043,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8972,
											"end": 9043,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8972,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 9050,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9245,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9232,
											"end": 9241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9220,
											"end": 9246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9220,
											"end": 9246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 9324,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9309,
											"end": 9326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9306,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9337,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9394,
											"end": 9403,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9381,
											"end": 9387,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9337,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9337,
											"end": 9409,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9337,
											"end": 9409,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 9337,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9476,
											"end": 9485,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9472,
											"end": 9490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9463,
											"end": 9469,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 9419,
											"end": 9491,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9419,
											"end": 9491,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 9419,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9498,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9625,
											"end": 9629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9663,
											"end": 9665,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9640,
											"end": 9666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9640,
											"end": 9666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9807,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9948,
											"end": 9952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9988,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9984,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9963,
											"end": 9989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9963,
											"end": 9989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10056,
											"end": 10062,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9999,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 9999,
											"end": 10083,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9999,
											"end": 10083,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 9999,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9842,
											"end": 10090,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10247,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10236,
											"end": 10245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10224,
											"end": 10250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10224,
											"end": 10250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10282,
											"end": 10283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 10397,
											"end": 10401,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10388,
											"end": 10394,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10316,
											"end": 10402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10316,
											"end": 10402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10096,
											"end": 10409,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10415,
											"end": 10834,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 10415,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10581,
											"end": 10585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10621,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10662,
											"end": 10666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10658,
											"end": 10678,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10643,
											"end": 10652,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10639,
											"end": 10656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10696,
											"end": 10827,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10827,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 10696,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10688,
											"end": 10827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10688,
											"end": 10827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10834,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10840,
											"end": 11259,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10840,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11010,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11046,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11021,
											"end": 11047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11021,
											"end": 11047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11093,
											"end": 11102,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11087,
											"end": 11091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11077,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11121,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 11247,
											"end": 11251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11121,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 11121,
											"end": 11252,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11121,
											"end": 11252,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 11121,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10840,
											"end": 11259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10840,
											"end": 11259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10840,
											"end": 11259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10840,
											"end": 11259,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11265,
											"end": 11684,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11265,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11469,
											"end": 11471,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11458,
											"end": 11467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11446,
											"end": 11472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11446,
											"end": 11472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11528,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11504,
											"end": 11505,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11493,
											"end": 11502,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11489,
											"end": 11506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11482,
											"end": 11529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 11672,
											"end": 11676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11546,
											"end": 11677,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11546,
											"end": 11677,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 11546,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11690,
											"end": 12109,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 11690,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11856,
											"end": 11860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11894,
											"end": 11896,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11883,
											"end": 11892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 11897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 11897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 11953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11929,
											"end": 11930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11918,
											"end": 11927,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11914,
											"end": 11931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 11954,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11971,
											"end": 12102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 12097,
											"end": 12101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11971,
											"end": 12102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 11971,
											"end": 12102,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11971,
											"end": 12102,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 11971,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 12102,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 12102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 12109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 12109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 12109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 12109,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12115,
											"end": 12534,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12115,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12319,
											"end": 12321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12308,
											"end": 12317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12368,
											"end": 12377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12362,
											"end": 12366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12358,
											"end": 12378,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12354,
											"end": 12355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12343,
											"end": 12352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12339,
											"end": 12356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12332,
											"end": 12379,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12396,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 12522,
											"end": 12526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12396,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 12396,
											"end": 12527,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12396,
											"end": 12527,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 12396,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12534,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12706,
											"end": 12710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12733,
											"end": 12742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12729,
											"end": 12747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12747,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12783,
											"end": 12803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12779,
											"end": 12780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12757,
											"end": 12804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12813,
											"end": 12952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12813,
											"end": 12952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12965,
											"end": 13384,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 12965,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13169,
											"end": 13171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13158,
											"end": 13167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13218,
											"end": 13227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13212,
											"end": 13216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13204,
											"end": 13205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13189,
											"end": 13206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13182,
											"end": 13229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13246,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13372,
											"end": 13376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13246,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 13246,
											"end": 13377,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13246,
											"end": 13377,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13246,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13238,
											"end": 13377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13238,
											"end": 13377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 13384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 13384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 13384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12965,
											"end": 13384,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13390,
											"end": 13809,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 13390,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13594,
											"end": 13596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13583,
											"end": 13592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13579,
											"end": 13597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13571,
											"end": 13597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13571,
											"end": 13597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13643,
											"end": 13652,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13637,
											"end": 13641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13633,
											"end": 13653,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 13630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13618,
											"end": 13627,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13614,
											"end": 13631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13607,
											"end": 13654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13671,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13797,
											"end": 13801,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13671,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13671,
											"end": 13802,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13671,
											"end": 13802,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13671,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13663,
											"end": 13802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13663,
											"end": 13802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13390,
											"end": 13809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13390,
											"end": 13809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13390,
											"end": 13809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13390,
											"end": 13809,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13815,
											"end": 14234,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 13815,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 13985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14019,
											"end": 14021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14008,
											"end": 14017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13996,
											"end": 14022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13996,
											"end": 14022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14078,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14054,
											"end": 14055,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14039,
											"end": 14056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14032,
											"end": 14079,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14222,
											"end": 14226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 14096,
											"end": 14227,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14096,
											"end": 14227,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14096,
											"end": 14227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13815,
											"end": 14234,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13815,
											"end": 14234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13815,
											"end": 14234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13815,
											"end": 14234,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14444,
											"end": 14446,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14433,
											"end": 14442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14421,
											"end": 14447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14421,
											"end": 14447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14503,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14479,
											"end": 14480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14468,
											"end": 14477,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14464,
											"end": 14481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14457,
											"end": 14504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14647,
											"end": 14651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14665,
											"end": 15084,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14665,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14831,
											"end": 14835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14869,
											"end": 14871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14858,
											"end": 14867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14854,
											"end": 14872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14846,
											"end": 14872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14846,
											"end": 14872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14918,
											"end": 14927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14912,
											"end": 14916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14902,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 14906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14882,
											"end": 14929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 15072,
											"end": 15076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 14946,
											"end": 15077,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14946,
											"end": 15077,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14946,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14938,
											"end": 15077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14938,
											"end": 15077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 15084,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 15084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 15084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 15084,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15090,
											"end": 15509,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 15090,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 15260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15294,
											"end": 15296,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15283,
											"end": 15292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15279,
											"end": 15297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15271,
											"end": 15297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15271,
											"end": 15297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15343,
											"end": 15352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15337,
											"end": 15341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15333,
											"end": 15353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15329,
											"end": 15330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15318,
											"end": 15327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15314,
											"end": 15331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15307,
											"end": 15354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15371,
											"end": 15502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15497,
											"end": 15501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15371,
											"end": 15502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 15371,
											"end": 15502,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15371,
											"end": 15502,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15371,
											"end": 15502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15363,
											"end": 15502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15509,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15608,
											"end": 15612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15646,
											"end": 15648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15635,
											"end": 15644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15631,
											"end": 15649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15623,
											"end": 15649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15623,
											"end": 15649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15659,
											"end": 15730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 15727,
											"end": 15728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15716,
											"end": 15725,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 15709,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15659,
											"end": 15730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 15659,
											"end": 15730,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15659,
											"end": 15730,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 15659,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15515,
											"end": 15737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15864,
											"end": 15868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15902,
											"end": 15904,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15891,
											"end": 15900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15887,
											"end": 15905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15879,
											"end": 15905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15879,
											"end": 15905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15915,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15983,
											"end": 15984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15972,
											"end": 15981,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15968,
											"end": 15985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 15965,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15915,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 15915,
											"end": 15986,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15915,
											"end": 15986,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15915,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 16064,
											"end": 16066,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16053,
											"end": 16062,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16040,
											"end": 16046,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 16075,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16162,
											"end": 16260,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 16162,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16247,
											"end": 16252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16241,
											"end": 16253,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16162,
											"end": 16260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16162,
											"end": 16260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16162,
											"end": 16260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16162,
											"end": 16260,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16266,
											"end": 16365,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 16266,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16318,
											"end": 16324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16346,
											"end": 16358,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16336,
											"end": 16358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16336,
											"end": 16358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16266,
											"end": 16365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16266,
											"end": 16365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16266,
											"end": 16365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16266,
											"end": 16365,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16472,
											"end": 16483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16509,
											"end": 16512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16494,
											"end": 16512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16494,
											"end": 16512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16518,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16608,
											"end": 16619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16642,
											"end": 16648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16637,
											"end": 16640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16630,
											"end": 16649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16682,
											"end": 16686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16677,
											"end": 16680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16673,
											"end": 16687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16658,
											"end": 16687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16658,
											"end": 16687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16693,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16739,
											"end": 16742,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16776,
											"end": 16777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16753,
											"end": 16778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16753,
											"end": 16778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16810,
											"end": 16811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16792,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16812,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16946,
											"end": 16947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16878,
											"end": 16944,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16874,
											"end": 16948,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16871,
											"end": 16872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16868,
											"end": 16949,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16865,
											"end": 16972,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16865,
											"end": 16972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16865,
											"end": 16972,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16952,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16865,
											"end": 16972,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16865,
											"end": 16972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16996,
											"end": 16997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 16994,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 16998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16982,
											"end": 16998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16982,
											"end": 16998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16699,
											"end": 17004,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17050,
											"end": 17051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 17085,
											"end": 17086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17067,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 17067,
											"end": 17087,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17067,
											"end": 17087,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 17067,
											"end": 17087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17062,
											"end": 17087,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17062,
											"end": 17087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17101,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17119,
											"end": 17120,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17101,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 17101,
											"end": 17121,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17101,
											"end": 17121,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17101,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17096,
											"end": 17121,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17096,
											"end": 17121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17140,
											"end": 17141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17130,
											"end": 17165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 17130,
											"end": 17165,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17145,
											"end": 17163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17145,
											"end": 17163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17145,
											"end": 17163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17145,
											"end": 17163,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 17145,
											"end": 17163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17130,
											"end": 17165,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 17130,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17187,
											"end": 17188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17184,
											"end": 17185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17180,
											"end": 17189,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17010,
											"end": 17195,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17241,
											"end": 17248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17264,
											"end": 17284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17282,
											"end": 17283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17264,
											"end": 17284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 17264,
											"end": 17284,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17264,
											"end": 17284,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17264,
											"end": 17284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17298,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17316,
											"end": 17317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17298,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 17298,
											"end": 17318,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17298,
											"end": 17318,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17298,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17293,
											"end": 17318,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17293,
											"end": 17318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17486,
											"end": 17487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17418,
											"end": 17484,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17414,
											"end": 17488,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17412,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17408,
											"end": 17489,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17403,
											"end": 17404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17396,
											"end": 17405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17389,
											"end": 17406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17385,
											"end": 17490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17513,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 17382,
											"end": 17513,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17513,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 17382,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17541,
											"end": 17542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17538,
											"end": 17539,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17543,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17201,
											"end": 17549,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17595,
											"end": 17599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17615,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 17633,
											"end": 17634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17615,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 17615,
											"end": 17635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17615,
											"end": 17635,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 17615,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17649,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 17667,
											"end": 17668,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17649,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 17649,
											"end": 17669,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17649,
											"end": 17669,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 17649,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17644,
											"end": 17669,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17644,
											"end": 17669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17688,
											"end": 17689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17685,
											"end": 17686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17682,
											"end": 17690,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17679,
											"end": 17713,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17679,
											"end": 17713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 17679,
											"end": 17713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17693,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 17693,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 17693,
											"end": 17711,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17693,
											"end": 17711,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 17693,
											"end": 17711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17679,
											"end": 17713,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 17679,
											"end": 17713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17738,
											"end": 17739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17735,
											"end": 17736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17731,
											"end": 17740,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17555,
											"end": 17746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17752,
											"end": 17848,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 17752,
											"end": 17848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17789,
											"end": 17796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 17836,
											"end": 17841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17807,
											"end": 17842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17807,
											"end": 17842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17752,
											"end": 17848,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17752,
											"end": 17848,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17752,
											"end": 17848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17752,
											"end": 17848,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17854,
											"end": 17944,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 17854,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17888,
											"end": 17895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17931,
											"end": 17936,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17924,
											"end": 17937,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17917,
											"end": 17938,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17906,
											"end": 17938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17906,
											"end": 17938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17854,
											"end": 17944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17854,
											"end": 17944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17854,
											"end": 17944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17854,
											"end": 17944,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17950,
											"end": 18076,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 17950,
											"end": 18076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17987,
											"end": 17994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18027,
											"end": 18069,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18020,
											"end": 18025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18016,
											"end": 18070,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18005,
											"end": 18070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18005,
											"end": 18070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17950,
											"end": 18076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17950,
											"end": 18076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17950,
											"end": 18076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17950,
											"end": 18076,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18082,
											"end": 18159,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 18082,
											"end": 18159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18119,
											"end": 18126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18148,
											"end": 18153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18137,
											"end": 18153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18137,
											"end": 18153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18082,
											"end": 18159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18082,
											"end": 18159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18082,
											"end": 18159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18082,
											"end": 18159,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18165,
											"end": 18304,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 18165,
											"end": 18304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18228,
											"end": 18237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18261,
											"end": 18298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 18292,
											"end": 18297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18261,
											"end": 18298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 18261,
											"end": 18298,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18261,
											"end": 18298,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 18261,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18248,
											"end": 18298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18248,
											"end": 18298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18310,
											"end": 18436,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 18310,
											"end": 18436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18360,
											"end": 18369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18393,
											"end": 18430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 18424,
											"end": 18429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18393,
											"end": 18430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 18393,
											"end": 18430,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18393,
											"end": 18430,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 18393,
											"end": 18430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18380,
											"end": 18430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18380,
											"end": 18430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18310,
											"end": 18436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18310,
											"end": 18436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18310,
											"end": 18436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18310,
											"end": 18436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18442,
											"end": 18555,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 18442,
											"end": 18555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18525,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 18543,
											"end": 18548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18525,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18525,
											"end": 18549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18525,
											"end": 18549,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 18525,
											"end": 18549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18512,
											"end": 18549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18512,
											"end": 18549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18442,
											"end": 18555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18442,
											"end": 18555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18442,
											"end": 18555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18442,
											"end": 18555,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18561,
											"end": 18868,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 18561,
											"end": 18868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18629,
											"end": 18630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18653,
											"end": 18659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18650,
											"end": 18651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18647,
											"end": 18660,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18738,
											"end": 18739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18733,
											"end": 18736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 18740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18723,
											"end": 18741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18719,
											"end": 18720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18714,
											"end": 18717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18710,
											"end": 18721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18703,
											"end": 18742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18675,
											"end": 18677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18672,
											"end": 18673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18668,
											"end": 18678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18663,
											"end": 18678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18663,
											"end": 18678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 18639,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18770,
											"end": 18776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18767,
											"end": 18768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18764,
											"end": 18777,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18761,
											"end": 18862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18761,
											"end": 18862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 18761,
											"end": 18862,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18850,
											"end": 18851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18847,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18836,
											"end": 18839,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18832,
											"end": 18848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18825,
											"end": 18852,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18761,
											"end": 18862,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 18761,
											"end": 18862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18610,
											"end": 18868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18868,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18874,
											"end": 19054,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 18874,
											"end": 19054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18922,
											"end": 18999,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18919,
											"end": 18920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18912,
											"end": 19000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19019,
											"end": 19023,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 19016,
											"end": 19017,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19009,
											"end": 19024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19043,
											"end": 19047,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19040,
											"end": 19041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19033,
											"end": 19048,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19060,
											"end": 19240,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 19060,
											"end": 19240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19108,
											"end": 19185,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19105,
											"end": 19106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19098,
											"end": 19186,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19205,
											"end": 19209,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 19202,
											"end": 19203,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19195,
											"end": 19210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19229,
											"end": 19233,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19226,
											"end": 19227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19219,
											"end": 19234,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19369,
											"end": 19486,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 19369,
											"end": 19486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19478,
											"end": 19479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19475,
											"end": 19476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19468,
											"end": 19480,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19492,
											"end": 19594,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 19492,
											"end": 19594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19533,
											"end": 19539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19584,
											"end": 19586,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 19580,
											"end": 19587,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19577,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 19568,
											"end": 19573,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19564,
											"end": 19578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19560,
											"end": 19588,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19550,
											"end": 19588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19550,
											"end": 19588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19492,
											"end": 19594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19492,
											"end": 19594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19492,
											"end": 19594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19492,
											"end": 19594,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19600,
											"end": 19775,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 19600,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19740,
											"end": 19767,
											"name": "PUSH",
											"source": 9,
											"value": "756E626F756E64696E6720706572696F64207374617274656400000000000000"
										},
										{
											"begin": 19736,
											"end": 19737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19728,
											"end": 19734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19724,
											"end": 19738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19717,
											"end": 19768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19600,
											"end": 19775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19600,
											"end": 19775,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19781,
											"end": 19959,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 19781,
											"end": 19959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19921,
											"end": 19951,
											"name": "PUSH",
											"source": 9,
											"value": "756E626F756E64696E6720706572696F642069736E2774206F76657200000000"
										},
										{
											"begin": 19917,
											"end": 19918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19909,
											"end": 19915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19905,
											"end": 19919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19898,
											"end": 19952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19781,
											"end": 19959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19781,
											"end": 19959,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19965,
											"end": 20129,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 19965,
											"end": 20129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20105,
											"end": 20121,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 20101,
											"end": 20102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20093,
											"end": 20099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20089,
											"end": 20103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20082,
											"end": 20122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19965,
											"end": 20129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19965,
											"end": 20129,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20135,
											"end": 20360,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 20135,
											"end": 20360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20275,
											"end": 20309,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 20271,
											"end": 20272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20263,
											"end": 20269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20259,
											"end": 20273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20252,
											"end": 20310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20344,
											"end": 20352,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20339,
											"end": 20341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20331,
											"end": 20337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20327,
											"end": 20342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20320,
											"end": 20353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20135,
											"end": 20360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20135,
											"end": 20360,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20366,
											"end": 20538,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 20366,
											"end": 20538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20530,
											"name": "PUSH",
											"source": 9,
											"value": "756E626F756E64696E67206E6F74207374617274656400000000000000000000"
										},
										{
											"begin": 20502,
											"end": 20503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 20500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20490,
											"end": 20504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20483,
											"end": 20531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20366,
											"end": 20538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20366,
											"end": 20538,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20544,
											"end": 20723,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 20544,
											"end": 20723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20684,
											"end": 20715,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F7420726564756365206578697374696E6720706572696F64000000"
										},
										{
											"begin": 20680,
											"end": 20681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20672,
											"end": 20678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20668,
											"end": 20682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20661,
											"end": 20716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20544,
											"end": 20723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20544,
											"end": 20723,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20729,
											"end": 20896,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 20729,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20869,
											"end": 20888,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 20865,
											"end": 20866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20857,
											"end": 20863,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20853,
											"end": 20867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20846,
											"end": 20889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20729,
											"end": 20896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20729,
											"end": 20896,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20902,
											"end": 21076,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 20902,
											"end": 21076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21042,
											"end": 21068,
											"name": "PUSH",
											"source": 9,
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 21038,
											"end": 21039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21030,
											"end": 21036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21026,
											"end": 21040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21019,
											"end": 21069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20902,
											"end": 21076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20902,
											"end": 21076,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21082,
											"end": 21261,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 21082,
											"end": 21261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21222,
											"end": 21253,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 21218,
											"end": 21219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21210,
											"end": 21216,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21206,
											"end": 21220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21199,
											"end": 21254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21082,
											"end": 21261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21082,
											"end": 21261,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21267,
											"end": 21496,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 21267,
											"end": 21496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21441,
											"name": "PUSH",
											"source": 9,
											"value": "43616C6C6572206973206E6F742052657761726473446973747269627574696F"
										},
										{
											"begin": 21403,
											"end": 21404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21395,
											"end": 21401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21391,
											"end": 21405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21476,
											"end": 21488,
											"name": "PUSH",
											"source": 9,
											"value": "6E20636F6E747261637400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21471,
											"end": 21473,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21463,
											"end": 21469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21459,
											"end": 21474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21267,
											"end": 21496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21267,
											"end": 21496,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21502,
											"end": 21731,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 21502,
											"end": 21731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21642,
											"end": 21676,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21638,
											"end": 21639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21630,
											"end": 21636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21626,
											"end": 21640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21619,
											"end": 21677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21711,
											"end": 21723,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21706,
											"end": 21708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21698,
											"end": 21704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21694,
											"end": 21709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21687,
											"end": 21724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21502,
											"end": 21731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21502,
											"end": 21731,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21737,
											"end": 21918,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 21737,
											"end": 21918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21877,
											"end": 21910,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 21873,
											"end": 21874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21865,
											"end": 21871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21861,
											"end": 21875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21854,
											"end": 21911,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21737,
											"end": 21918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21737,
											"end": 21918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21924,
											"end": 22046,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 21924,
											"end": 22046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21997,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 22015,
											"end": 22020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21997,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 21997,
											"end": 22021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21997,
											"end": 22021,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 21997,
											"end": 22021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21990,
											"end": 21995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21987,
											"end": 22022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21977,
											"end": 22040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 21977,
											"end": 22040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22036,
											"end": 22037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22033,
											"end": 22034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21977,
											"end": 22040,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 21977,
											"end": 22040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21924,
											"end": 22046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21924,
											"end": 22046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22052,
											"end": 22168,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 22052,
											"end": 22168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22122,
											"end": 22143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 22137,
											"end": 22142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22122,
											"end": 22143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 22122,
											"end": 22143,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22122,
											"end": 22143,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 22122,
											"end": 22143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22115,
											"end": 22120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22144,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 22102,
											"end": 22162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 22102,
											"end": 22162,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22158,
											"end": 22159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22155,
											"end": 22156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22148,
											"end": 22160,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22102,
											"end": 22162,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 22102,
											"end": 22162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22052,
											"end": 22168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22052,
											"end": 22168,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22174,
											"end": 22296,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 22174,
											"end": 22296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22247,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 22265,
											"end": 22270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22247,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 22247,
											"end": 22271,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22247,
											"end": 22271,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 22247,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22240,
											"end": 22245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22237,
											"end": 22272,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 22227,
											"end": 22290,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22286,
											"end": 22287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22283,
											"end": 22284,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22288,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22290,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 22227,
											"end": 22290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22174,
											"end": 22296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22174,
											"end": 22296,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256,uint256)": "246132f9",
							"periodFinish()": "ebe2b12b",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256,address)": "7acb7757",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"unboundingPeriod(uint256)": "d505493d",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"CHECK\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodFinish\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unboundPeriod\",\"type\":\"uint256\"}],\"name\":\"unboundingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0x64e32b519ba7002ea66657ee5db414e016f7eed2f2660a25284a4d2ad5bd80b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4db1e66eb4febdfda7a83e9ba7ed98f26c3092154d371cfdd873f2fa8416c07a\",\"dweb:/ipfs/QmY9M8iuAZYAandJa9omCA9xzkdQdzEhRVJGstthfjz7WT\"]},\"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol\":{\"keccak256\":\"0x4a2597353472f561feef075e39c8be3edfe1752cdc6ecf6fdff4ce49722a5f72\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ea7278050191338f8dd6e0b07ac2b8d6d67aa43a3c0ab80b321a8cd0e73925\",\"dweb:/ipfs/QmWwzCH27wi9YKShiEE9zYfkWMAg1utSoQqsC1xndqPuoJ\"]},\"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0x958bcac90869a8e38aecb3033a7fe0dff7e542d6ee5f78a11d7df511e59d7832\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ccd5ba2503347acbf6d4cd978c03306a710a5cc95c896c541919f6b3c5b2e2a\",\"dweb:/ipfs/QmVAHbymNnSHJsB3kq3kptwvnk4AztqJ6akQXxiZX79vnd\"]},\"Orbis-balancer_old/contracts/rewards/StakingRewards.sol\":{\"keccak256\":\"0xaaefa3e645554e955e3b6c978d1c2f00ed06e253ede78acc37e8ebe5db954027\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00af412959f7d89f6af684bbdab0034bf5acaf04948a3bb3a12dfe3c4cf841d0\",\"dweb:/ipfs/QmbTnbNenwRff6Zvak3Znfw4cRRrvZUDLge3DeAQNnAMxR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1084,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1051,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1121,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 1124,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 1127,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1130,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1132,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1134,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1138,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1142,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1144,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1148,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1150,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "unBounding",
								"offset": 0,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1152,
								"contract": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol:StakingRewards",
								"label": "durationTimestamp",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:0"
									},
									"scope": 77,
									"src": "296:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:0"
									},
									"scope": 77,
									"src": "434:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "733:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:0"
									},
									"scope": 77,
									"src": "715:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1079:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:0"
									},
									"scope": 77,
									"src": "1060:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:0"
									},
									"scope": 77,
									"src": "1796:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2280:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:0"
									},
									"scope": 77,
									"src": "2168:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2461:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2470:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2492:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:0"
									},
									"src": "2455:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2692:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2701:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2724:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:0"
									},
									"src": "2686:78:0"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							596
						],
						"IERC20": [
							77
						],
						"SafeERC20": [
							301
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 78,
							"src": "125:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 597,
							"src": "149:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:1",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 85,
									"libraryName": {
										"id": 83,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 596,
										"src": "675:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:1",
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "803:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "833:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 99,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "863:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "863:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 102,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "888:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 103,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "892:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 97,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 95,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "813:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "813:86:1"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 87,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 86,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "732:6:1"
													},
													"referencedDeclaration": 77,
													"src": "732:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "754:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "774:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:1"
									},
									"scope": 301,
									"src": "701:205:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1040:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1070:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 124,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "1100:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "1100:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 127,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "1129:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 128,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1135:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1139:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 122,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 120,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1050:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:1"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "947:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 109,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "947:6:1"
													},
													"referencedDeclaration": 77,
													"src": "947:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "969:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "991:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1011:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:1"
									},
									"scope": 301,
									"src": "912:241:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1519:497:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "1768:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 154,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$301",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$301",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 152,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 156,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 140,
																					"src": "1815:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 150,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 138,
																					"src": "1784:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "1784:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1939:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 169,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "1969:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "1969:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 172,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1993:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2002:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 167,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 165,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1919:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1443:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 137,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 136,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1443:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1443:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1465:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:1"
									},
									"scope": 301,
									"src": "1413:603:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "2138:194:1",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 213,
														"src": "2148:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 194,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$301",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$301",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 192,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 196,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2202:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 190,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2171:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2171:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 198,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2213:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2248:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 205,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2278:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2278:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 208,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2302:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 209,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2311:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 203,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 201,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2228:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:1"
											}
										]
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2062:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 179,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2062:6:1"
													},
													"referencedDeclaration": 77,
													"src": "2062:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2084:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2109:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:1"
									},
									"scope": 301,
									"src": "2022:310:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "2454:370:1",
										"statements": [
											{
												"id": 260,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:1",
												"statements": [
													{
														"assignments": [
															225
														],
														"declarations": [
															{
																"constant": false,
																"id": 225,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:1",
																"nodeType": "VariableDeclaration",
																"scope": 260,
																"src": "2488:20:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 224,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 234,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 230,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$301",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$301",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 228,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 232,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2542:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2511:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2511:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 236,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "2572:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 237,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2588:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 235,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 241,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:1"
													},
													{
														"assignments": [
															243
														],
														"declarations": [
															{
																"constant": false,
																"id": 243,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:1",
																"nodeType": "VariableDeclaration",
																"scope": 260,
																"src": "2653:20:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 247,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "2676:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 245,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2691:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 249,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2730:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 252,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 217,
																					"src": "2760:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 46,
																				"src": "2760:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 255,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "2784:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 256,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "2793:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 250,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 248,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2710:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 259,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:1"
													}
												]
											}
										]
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2378:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 216,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 215,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2378:6:1"
													},
													"referencedDeclaration": 77,
													"src": "2378:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2400:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:1"
									},
									"scope": 301,
									"src": "2338:486:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3277:636:1",
										"statements": [
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3626:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"arguments": [
														{
															"id": 278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3680:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 275,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3660:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 273,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 390,
														"src": "3652:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 282,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "3735:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "3731:176:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "3758:149:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 289,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "3830:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 290,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:1",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 292,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 287,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 286,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3236:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 264,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3236:6:1"
													},
													"referencedDeclaration": 77,
													"src": "3236:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3250:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:1"
									},
									"scope": 301,
									"src": "3207:706:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 302,
							"src": "645:3270:1",
							"usedErrors": []
						}
					],
					"src": "100:3816:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							596
						]
					},
					"id": 597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 596,
							"linearizedBaseContracts": [
								596
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 312,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 311,
												"id": 317,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 596,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 330,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		],
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 328,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 333,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													339,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 338,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 340,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 596,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 363,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															370,
															390
														],
														"referencedDeclaration": 390,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 362,
												"id": 368,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 596,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															460
														],
														"referencedDeclaration": 460,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 381,
												"id": 388,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 596,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 402,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															460
														],
														"referencedDeclaration": 460,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 401,
												"id": 408,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 596,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 437,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 436,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													443,
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 442,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 450,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 446,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 448,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 455,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 456,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 453,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 458,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 596,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 470,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															477,
															512
														],
														"referencedDeclaration": 512,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 596,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 491,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 490,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													497,
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 496,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 498,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"arguments": [
														{
															"id": 502,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 500,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 507,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 508,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 505,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 510,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 596,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 522,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															529,
															564
														],
														"referencedDeclaration": 564,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 521,
												"id": 527,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 596,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 543,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 542,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													549,
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 548,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 552,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 559,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 560,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 557,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 540,
												"id": 562,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 596,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 576,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 567,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 580,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 590,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 571,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 586,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 589,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 591,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 569,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 569,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 584,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 579,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 577,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 575,
															"id": 578,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 596,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 597,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							684
						]
					},
					"id": 685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 599,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:3",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 684,
							"linearizedBaseContracts": [
								684
							],
							"name": "Math",
							"nameLocation": "210:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "352:38:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 609,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "369:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 610,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "374:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "369:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "382:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "369:14:3",
													"trueExpression": {
														"id": 612,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "378:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 608,
												"id": 615,
												"nodeType": "Return",
												"src": "362:21:3"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "221:59:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "294:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "306:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "298:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "317:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "309:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:22:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "343:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:9:3"
									},
									"scope": 684,
									"src": "285:105:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "528:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 627,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "545:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 628,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "549:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "545:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 631,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "557:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "545:13:3",
													"trueExpression": {
														"id": 630,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 626,
												"id": 633,
												"nodeType": "Return",
												"src": "538:20:3"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "396:60:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "470:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "482:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "474:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "493:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "485:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:22:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "519:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:9:3"
									},
									"scope": 684,
									"src": "461:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "749:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 645,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "804:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 646,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "808:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "804:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 648,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "803:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 649,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "814:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 650,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "818:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "814:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 652,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "813:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "823:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "813:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "803:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 644,
												"id": 656,
												"nodeType": "Return",
												"src": "796:28:3"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "571:102:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "687:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "703:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "695:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "714:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "706:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:22:3"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "740:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:9:3"
									},
									"scope": 684,
									"src": "678:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1101:123:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 668,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "1189:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 669,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "1193:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1189:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 671,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 661,
																			"src": "1198:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 672,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "1202:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1198:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1207:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1198:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1198:18:3",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1211:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 679,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1197:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1189:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 667,
												"id": 681,
												"nodeType": "Return",
												"src": "1182:35:3"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "837:188:3",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1039:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1055:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1047:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1066:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1058:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:22:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1092:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:9:3"
									},
									"scope": 684,
									"src": "1030:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 685,
							"src": "202:1024:3",
							"usedErrors": []
						}
					],
					"src": "103:1124:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							996
						]
					},
					"id": 997,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 996,
							"linearizedBaseContracts": [
								996
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 717,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															700
														],
														"declarations": [
															{
																"constant": false,
																"id": 700,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 717,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 699,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 704,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 702,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 706,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 712,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 710,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 698,
															"id": 711,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 714,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 715,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 698,
														"id": 716,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 996,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 745,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 732,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 738,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 736,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 730,
															"id": 737,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 740,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 741,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 743,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 730,
														"id": 744,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 726,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 996,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 787,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 766,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 758,
															"id": 765,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															768
														],
														"declarations": [
															{
																"constant": false,
																"id": 768,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 787,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 772,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 769,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 770,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 774,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 776,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 782,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 758,
															"id": 781,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 784,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 785,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 758,
														"id": 786,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 996,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 815,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 808,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 800,
															"id": 807,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 811,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 813,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 800,
														"id": 814,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 996,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 843,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 829,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 836,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 828,
															"id": 835,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 838,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 839,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 841,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 828,
														"id": 842,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 996,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 856,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 854,
												"id": 858,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 996,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 871,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 869,
												"id": 873,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 996,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 885,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 886,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 888,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 996,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 900,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 901,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 899,
												"id": 903,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 996,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 915,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 916,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 914,
												"id": 918,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 996,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 943,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 933,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 934,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 936,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 932,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 938,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 931,
														"id": 942,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 996,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 968,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 958,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 961,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 957,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 963,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 964,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 965,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 956,
														"id": 967,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 951,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 996,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 993,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 983,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 986,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 982,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 988,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 981,
														"id": 992,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 996,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 997,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol": {
				"ast": {
					"absolutePath": "Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol",
					"exportedSymbols": {
						"IStakingRewards": [
							1046
						]
					},
					"id": 1047,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 998,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1046,
							"linearizedBaseContracts": [
								1046
							],
							"name": "IStakingRewards",
							"nameLocation": "76:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "80faa57d",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "122:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "146:2:5"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "172:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:9:5"
									},
									"scope": 1046,
									"src": "113:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cd3daf9d",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "198:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:5"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "238:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:9:5"
									},
									"scope": 1046,
									"src": "189:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "008cc262",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "264:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "279:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "271:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:17:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "311:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:9:5"
									},
									"scope": 1046,
									"src": "255:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "337:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:2:5"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:9:5"
									},
									"scope": 1046,
									"src": "328:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "400:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "418:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "410:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:17:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "450:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:5"
									},
									"scope": 1046,
									"src": "391:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7acb7757",
									"id": 1034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "495:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "501:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "525:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "517:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:31:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:0:5"
									},
									"scope": 1046,
									"src": "486:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505493d",
									"id": 1039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unboundingPeriod",
									"nameLocation": "558:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "unboundPeriod",
												"nameLocation": "580:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "575:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "575:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:20:5"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:0:5"
									},
									"scope": 1046,
									"src": "549:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d18b912",
									"id": 1042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nameLocation": "621:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:2:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:0:5"
									},
									"scope": 1046,
									"src": "612:30:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e9fad8ee",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "659:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:2:5"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:5"
									},
									"scope": 1046,
									"src": "650:25:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1047,
							"src": "66:612:5",
							"usedErrors": []
						}
					],
					"src": "39:641:5"
				},
				"id": 5
			},
			"Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1080
						]
					},
					"id": 1081,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1048,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "ReentrancyGuard",
							"nameLocation": "84:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "107:67:6",
										"text": "@dev counter to allow mutex lock with only one SSTORE operation"
									},
									"id": 1051,
									"mutability": "mutable",
									"name": "_guardCounter",
									"nameLocation": "196:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1080,
									"src": "180:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "233:177:6",
										"statements": [
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "385:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "401:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "385:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "385:17:6"
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:6"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:0:6"
									},
									"scope": 1080,
									"src": "218:192:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "818:180:6",
										"statements": [
											{
												"expression": {
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "829:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "846:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "829:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "829:18:6"
											},
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "localCounter",
														"nameLocation": "866:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1078,
														"src": "858:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "858:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": {
													"id": 1068,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "881:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:36:6"
											},
											{
												"id": 1070,
												"nodeType": "PlaceholderStatement",
												"src": "905:1:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1072,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "925:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1073,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "941:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "925:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "956:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "917:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "917:73:6"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "418:370:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 1079,
									"name": "nonReentrant",
									"nameLocation": "803:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "815:2:6"
									},
									"src": "794:204:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1081,
							"src": "66:935:6",
							"usedErrors": []
						}
					],
					"src": "39:964:6"
				},
				"id": 6
			},
			"Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol": {
				"ast": {
					"absolutePath": "Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol",
					"exportedSymbols": {
						"RewardsDistributionRecipient": [
							1097
						]
					},
					"id": 1098,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097
							],
							"name": "RewardsDistributionRecipient",
							"nameLocation": "75:28:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3fc6df6e",
									"id": 1084,
									"mutability": "mutable",
									"name": "rewardsDistribution",
									"nameLocation": "126:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "111:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1083,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "111:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "296:119:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1087,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "315:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "315:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1089,
																"name": "rewardsDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "329:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "315:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "350:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															},
															"value": "Caller is not RewardsDistribution contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "307:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "307:88:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "307:88:7"
											},
											{
												"id": 1094,
												"nodeType": "PlaceholderStatement",
												"src": "406:1:7"
											}
										]
									},
									"id": 1096,
									"name": "onlyRewardsDistribution",
									"nameLocation": "270:23:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:7"
									},
									"src": "261:154:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1098,
							"src": "66:352:7",
							"usedErrors": []
						}
					],
					"src": "39:381:7"
				},
				"id": 7
			},
			"Orbis-balancer_old/contracts/rewards/StakingRewards.sol": {
				"ast": {
					"absolutePath": "Orbis-balancer_old/contracts/rewards/StakingRewards.sol",
					"exportedSymbols": {
						"Address": [
							596
						],
						"IERC20": [
							77
						],
						"IStakingRewards": [
							1046
						],
						"Math": [
							684
						],
						"ReentrancyGuard": [
							1080
						],
						"RewardsDistributionRecipient": [
							1097
						],
						"SafeERC20": [
							301
						],
						"SafeMath": [
							996
						],
						"StakingRewards": [
							1692
						]
					},
					"id": 1693,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1099,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:8"
						},
						{
							"absolutePath": "Orbis-balancer_old/contracts/interfaces/IStakingRewards.sol",
							"file": "../interfaces/IStakingRewards.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1047,
							"src": "66:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Orbis-balancer_old/contracts/rewards/RewardsDistributionRecipient.sol",
							"file": "./RewardsDistributionRecipient.sol",
							"id": 1101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1098,
							"src": "111:44:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Orbis-balancer_old/contracts/rewards/ReentrancyGuard.sol",
							"file": "./ReentrancyGuard.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1081,
							"src": "157:31:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 302,
							"src": "190:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 997,
							"src": "257:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 685,
							"src": "316:53:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1106,
										"name": "IStakingRewards",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1046,
										"src": "400:15:8"
									},
									"id": 1107,
									"nodeType": "InheritanceSpecifier",
									"src": "400:15:8"
								},
								{
									"baseName": {
										"id": 1108,
										"name": "RewardsDistributionRecipient",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1097,
										"src": "417:28:8"
									},
									"id": 1109,
									"nodeType": "InheritanceSpecifier",
									"src": "417:28:8"
								},
								{
									"baseName": {
										"id": 1110,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "447:15:8"
									},
									"id": 1111,
									"nodeType": "InheritanceSpecifier",
									"src": "447:15:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								1080,
								1097,
								1046
							],
							"name": "StakingRewards",
							"nameLocation": "382:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1114,
									"libraryName": {
										"id": 1112,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 996,
										"src": "476:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "470:27:8",
									"typeName": {
										"id": 1113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "489:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1118,
									"libraryName": {
										"id": 1115,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 301,
										"src": "509:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "503:27:8",
									"typeName": {
										"id": 1117,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1116,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "523:6:8"
										},
										"referencedDeclaration": 77,
										"src": "523:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1121,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "552:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "538:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1120,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1119,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "538:6:8"
										},
										"referencedDeclaration": 77,
										"src": "538:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1124,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "585:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "571:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1123,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1122,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "571:6:8"
										},
										"referencedDeclaration": 77,
										"src": "571:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ebe2b12b",
									"id": 1127,
									"mutability": "mutable",
									"name": "periodFinish",
									"nameLocation": "619:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "604:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "634:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1130,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "657:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "642:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "642:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "670:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 1132,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "693:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "678:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "678:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 1134,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "729:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "714:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "714:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 1138,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "793:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "758:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1137,
										"keyType": {
											"id": 1135,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "758:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1136,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "777:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1142,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "857:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "822:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1141,
										"keyType": {
											"id": 1139,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "830:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "822:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1140,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "841:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1144,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "889:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "873:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1148,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "944:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "908:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1147,
										"keyType": {
											"id": 1145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "916:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "908:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "927:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1150,
									"mutability": "mutable",
									"name": "unBounding",
									"nameLocation": "973:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "960:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1149,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "960:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1152,
									"mutability": "mutable",
									"name": "durationTimestamp",
									"nameLocation": "1003:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "990:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1151,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "990:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "1152:155:8",
										"statements": [
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1161,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "1163:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1163,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "1185:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1162,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1178:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1178:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1163:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1163:36:8"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1167,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "1210:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1169,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "1232:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1168,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1225:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1225:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1210:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "1210:36:8"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1257:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1174,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "1279:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1257:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "1257:42:8"
											}
										]
									},
									"id": 1178,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_rewardsDistribution",
												"nameLocation": "1059:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1051:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1098:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1090:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1130:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1122:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:110:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1152:0:8"
									},
									"scope": 1692,
									"src": "1029:278:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1020
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1379:38:8",
										"statements": [
											{
												"expression": {
													"id": 1184,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1144,
													"src": "1397:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1185,
												"nodeType": "Return",
												"src": "1390:19:8"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1324:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1347:8:8"
									},
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:2:8"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1370:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:9:8"
									},
									"scope": 1692,
									"src": "1315:102:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "1502:44:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1195,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "1520:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1197,
													"indexExpression": {
														"id": 1196,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "1530:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1520:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1194,
												"id": 1198,
												"nodeType": "Return",
												"src": "1513:25:8"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1434:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1470:8:8"
									},
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1452:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1444:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:17:8"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:8"
									},
									"scope": 1692,
									"src": "1425:121:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1003
									],
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "1629:65:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1208,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1656:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1656:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1210,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "1673:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1206,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1647:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$684_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "1647:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1647:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1212,
												"nodeType": "Return",
												"src": "1640:46:8"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "1563:24:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1597:8:8"
									},
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:8"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1620:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:9:8"
									},
									"scope": 1692,
									"src": "1554:140:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1008
									],
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "1767:262:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "1782:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1798:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1782:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "1778:77:8",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "1801:54:8",
													"statements": [
														{
															"expression": {
																"id": 1223,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "1823:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1219,
															"id": 1224,
															"nodeType": "Return",
															"src": "1816:27:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1241,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "1997:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1987:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1235,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "1971:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1232,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1132,
																							"src": "1951:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1229,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1214,
																								"src": "1920:24:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1230,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1920:26:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 875,
																						"src": "1920:30:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1920:46:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 890,
																				"src": "1920:50:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1920:62:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 890,
																		"src": "1920:66:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1920:72:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 905,
																"src": "1920:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1920:90:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1227,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "1881:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "1881:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:140:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1244,
												"nodeType": "Return",
												"src": "1865:156:8"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1711:14:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1216,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1735:8:8"
									},
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:2:8"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1758:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:9:8"
									},
									"scope": 1692,
									"src": "1702:327:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "2109:135:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1270,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "2219:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1272,
															"indexExpression": {
																"id": 1271,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "2227:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2219:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2209:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1261,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1138,
																						"src": "2171:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1263,
																					"indexExpression": {
																						"id": 1262,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1248,
																						"src": "2194:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2171:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1258,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1246,
																						"src": "2150:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2150:16:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 875,
																				"src": "2150:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2150:53:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1254,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "2127:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1256,
																			"indexExpression": {
																				"id": 1255,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "2137:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2127:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 890,
																		"src": "2127:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2127:77:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 905,
																"src": "2127:81:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2127:87:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "2127:91:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:109:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1253,
												"id": 1274,
												"nodeType": "Return",
												"src": "2120:116:8"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "2046:6:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1250,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2077:8:8"
									},
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2061:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2053:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:17:8"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2100:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2099:9:8"
									},
									"scope": 1692,
									"src": "2037:207:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1034
									],
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "2358:342:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "2377:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2386:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2377:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2389:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2369:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "2369:37:8"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1297,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2417:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1300,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "2449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1298,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "2432:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 860,
															"src": "2432:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2432:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2417:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "2417:39:8"
											},
											{
												"expression": {
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1304,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2467:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1307,
														"indexExpression": {
															"expression": {
																"id": 1305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2477:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2477:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2467:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "2517:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1308,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "2491:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1311,
																"indexExpression": {
																	"expression": {
																		"id": 1309,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2501:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2501:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2491:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 860,
															"src": "2491:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2491:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2467:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "2467:57:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "2546:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1321,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2561:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1692",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1692",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2553:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1319,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2553:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2553:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "2568:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"name": "CHECK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "2540:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2540:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "EmitStatement",
												"src": "2535:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2616:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2616:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1333,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2636:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1692",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1692",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2628:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1331,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2628:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2628:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "2643:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1326,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2586:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 134,
														"src": "2586:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2586:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "2586:64:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2673:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2673:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1341,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "2685:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1338,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "2666:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2666:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "EmitStatement",
												"src": "2661:31:8"
											}
										]
									},
									"functionSelector": "7acb7757",
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1284,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1283,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "2320:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2320:12:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1286,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2346:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2346:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1659,
												"src": "2333:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2333:24:8"
										}
									],
									"name": "stake",
									"nameLocation": "2265:5:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2311:8:8"
									},
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2279:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2271:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2295:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2287:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:31:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2358:0:8"
									},
									"scope": 1692,
									"src": "2256:444:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "2762:278:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1353,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2781:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2781:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2793:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2773:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2773:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "2773:40:8"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1359,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2824:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1362,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2856:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1360,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "2839:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "2839:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2839:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2824:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "2824:39:8"
											},
											{
												"expression": {
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1366,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2874:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1369,
														"indexExpression": {
															"expression": {
																"id": 1367,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2884:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2884:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2874:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1375,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2924:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1370,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "2898:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1373,
																"indexExpression": {
																	"expression": {
																		"id": 1371,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2908:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2908:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2898:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "2898:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2898:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2874:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "2874:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2968:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2968:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "2980:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1379,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2942:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "2942:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "2942:45:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3013:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3025:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "3003:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3003:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "EmitStatement",
												"src": "2998:34:8"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1349,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "2749:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2749:12:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "2717:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2734:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2726:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:16:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:0:8"
									},
									"scope": 1692,
									"src": "2708:332:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1039
									],
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "3148:98:8",
										"statements": [
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1406,
														"name": "unBounding",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "3159:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3172:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3159:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3159:17:8"
											},
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1410,
														"name": "durationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "3187:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1411,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3207:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3207:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1413,
															"name": "unboundPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "3225:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3207:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3187:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "3187:51:8"
											}
										]
									},
									"functionSelector": "d505493d",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1400,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1399,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "3110:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3110:12:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1402,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3136:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3136:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1404,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1401,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1659,
												"src": "3123:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3123:24:8"
										}
									],
									"name": "unboundingPeriod",
									"nameLocation": "3057:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1398,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3101:8:8"
									},
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "unboundPeriod",
												"nameLocation": "3079:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "3074:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:20:8"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3148:0:8"
									},
									"scope": 1692,
									"src": "3048:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1042
									],
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "3329:301:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3348:11:8",
															"subExpression": {
																"id": 1429,
																"name": "unBounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3349:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e626f756e64696e6720706572696f642073746172746564",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3361:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e",
																"typeString": "literal_string \"unbounding period started\""
															},
															"value": "unbounding period started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0818419f1d10cab8b60950ddd290a2a7c6614a06f6514ad283cf1b17f9d8e04e",
																"typeString": "literal_string \"unbounding period started\""
															}
														],
														"id": 1428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3340:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3340:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "3340:49:8"
											},
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3408:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "3400:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"baseExpression": {
														"id": 1436,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "3417:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1439,
													"indexExpression": {
														"expression": {
															"id": 1437,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3425:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3425:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3417:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:36:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "3451:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3460:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3451:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1466,
												"nodeType": "IfStatement",
												"src": "3447:176:8",
												"trueBody": {
													"id": 1465,
													"nodeType": "Block",
													"src": "3463:160:8",
													"statements": [
														{
															"expression": {
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1444,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "3478:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1447,
																	"indexExpression": {
																		"expression": {
																			"id": 1445,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3486:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3486:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3478:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3500:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3478:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1450,
															"nodeType": "ExpressionStatement",
															"src": "3478:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1454,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3542:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3542:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1456,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "3554:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1451,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "3516:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "3516:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3516:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "3516:45:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1460,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3592:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3592:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1462,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "3604:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1459,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "3581:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3581:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1464,
															"nodeType": "EmitStatement",
															"src": "3576:35:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1421,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "3291:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3291:12:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1424,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3317:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3317:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1423,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1659,
												"src": "3304:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3304:24:8"
										}
									],
									"name": "getReward",
									"nameLocation": "3263:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3282:8:8"
									},
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3272:2:8"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:0:8"
									},
									"scope": 1692,
									"src": "3254:376:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1045
									],
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "3672:322:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "unBounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3691:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e626f756e64696e67206e6f742073746172746564",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3703:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f",
																"typeString": "literal_string \"unbounding not started\""
															},
															"value": "unbounding not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5dde2b87c1fab6f4f8ce23572709991e668de1c8a30eab16b38810576a7b856f",
																"typeString": "literal_string \"unbounding not started\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3683:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3683:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "3683:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1478,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3747:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3747:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1480,
																"name": "durationTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "3766:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3747:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e626f756e64696e6720706572696f642069736e2774206f766572",
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3785:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee",
																"typeString": "literal_string \"unbounding period isn't over\""
															},
															"value": "unbounding period isn't over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a39f7b34cd92a739bd68b563352d782c6e4aaa22fb445cad1d142091ecd0dee",
																"typeString": "literal_string \"unbounding period isn't over\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3739:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "3739:77:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1486,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "3836:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1489,
															"indexExpression": {
																"expression": {
																	"id": 1487,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3846:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3846:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3836:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1485,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "3827:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3827:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "3827:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3895:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3895:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1497,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "3907:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1500,
															"indexExpression": {
																"expression": {
																	"id": 1498,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3915:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3915:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3907:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1492,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "3869:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3869:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3869:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "3869:58:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1504,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3954:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3954:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1506,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "3966:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1509,
															"indexExpression": {
																"expression": {
																	"id": 1507,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3974:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3974:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3966:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1503,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "3943:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "EmitStatement",
												"src": "3938:48:8"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "3647:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3663:8:8"
									},
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3651:2:8"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3672:0:8"
									},
									"scope": 1692,
									"src": "3638:356:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "4130:754:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1532,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "4169:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1529,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4149:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4149:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "4149:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4149:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1534,
																"name": "periodFinish",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "4189:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4149:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726564756365206578697374696e6720706572696f64",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4203:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342",
																"typeString": "literal_string \"Cannot reduce existing period\""
															},
															"value": "Cannot reduce existing period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c6d41f2c429b9c8807c3a2b615ba738cee307b65f81a0e1b41c42e407221342",
																"typeString": "literal_string \"Cannot reduce existing period\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4141:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4141:94:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "4141:94:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1539,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4252:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4252:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1541,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "4271:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4252:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1576,
													"nodeType": "Block",
													"src": "4358:208:8",
													"statements": [
														{
															"assignments": [
																1552
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1552,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "4381:9:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1576,
																	"src": "4373:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1551,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4373:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1558,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1555,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4410:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4410:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1553,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "4393:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 875,
																	"src": "4393:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4393:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4373:53:8"
														},
														{
															"assignments": [
																1560
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1560,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "4449:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1576,
																	"src": "4441:16:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4441:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1565,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1563,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "4474:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1561,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "4460:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 890,
																	"src": "4460:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4460:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4441:44:8"
														},
														{
															"expression": {
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1566,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "4500:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1572,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "4538:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1569,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1560,
																					"src": "4524:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1567,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1515,
																					"src": "4513:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 860,
																				"src": "4513:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4513:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 905,
																		"src": "4513:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4513:41:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4500:54:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "4500:54:8"
														}
													]
												},
												"id": 1577,
												"nodeType": "IfStatement",
												"src": "4248:318:8",
												"trueBody": {
													"id": 1550,
													"nodeType": "Block",
													"src": "4285:67:8",
													"statements": [
														{
															"expression": {
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1543,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "4300:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1546,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "4324:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1544,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "4313:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 905,
																		"src": "4313:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4313:27:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4300:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1549,
															"nodeType": "ExpressionStatement",
															"src": "4300:40:8"
														}
													]
												}
											},
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4583:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1616,
														"src": "4578:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4578:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1587,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1584,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1692",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1692",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1582,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1580,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "4593:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "4593:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4593:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4578:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1589,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "4649:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1592,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "4675:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1590,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1579,
																		"src": "4663:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 905,
																	"src": "4663:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4663:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4649:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4693:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 1588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4641:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4641:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "4641:79:8"
											},
											{
												"expression": {
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1598,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "4733:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1599,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4750:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4750:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4733:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "4733:32:8"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1603,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "4776:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1607,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4811:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1604,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4791:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4791:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 860,
															"src": "4791:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4791:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4776:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "4776:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1612,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "4855:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1613,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4863:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1611,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "4843:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4843:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1615,
												"nodeType": "EmitStatement",
												"src": "4838:38:8"
											}
										]
									},
									"functionSelector": "246132f9",
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1520,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1519,
												"name": "onlyRewardsDistribution",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1096,
												"src": "4081:23:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4081:23:8"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4126:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4118:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1522,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4118:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4118:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1521,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1659,
												"src": "4105:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4105:24:8"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "4011:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4038:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "4030:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "rewardsDuration",
												"nameLocation": "4054:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "4046:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:41:8"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4130:0:8"
									},
									"scope": 1692,
									"src": "4002:882:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "4931:354:8",
										"statements": [
											{
												"condition": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4946:11:8",
													"subExpression": {
														"id": 1621,
														"name": "unBounding",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "4947:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "4942:324:8",
												"trueBody": {
													"id": 1655,
													"nodeType": "Block",
													"src": "4959:307:8",
													"statements": [
														{
															"expression": {
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1623,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "4974:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1624,
																		"name": "rewardPerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "4997:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4997:16:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4974:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1627,
															"nodeType": "ExpressionStatement",
															"src": "4974:39:8"
														},
														{
															"expression": {
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1628,
																	"name": "lastUpdateTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "5028:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1629,
																		"name": "lastTimeRewardApplicable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "5045:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5045:26:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5028:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1632,
															"nodeType": "ExpressionStatement",
															"src": "5028:43:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1633,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "5090:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5109:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5101:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1634,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5101:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5101:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5090:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1654,
															"nodeType": "IfStatement",
															"src": "5086:169:8",
															"trueBody": {
																"id": 1653,
																"nodeType": "Block",
																"src": "5113:142:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1639,
																					"name": "rewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1142,
																					"src": "5132:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1641,
																				"indexExpression": {
																					"id": 1640,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1619,
																					"src": "5140:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5132:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1643,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1619,
																						"src": "5158:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1642,
																					"name": "earned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1276,
																					"src": "5151:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5151:15:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5132:34:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1646,
																		"nodeType": "ExpressionStatement",
																		"src": "5132:34:8"
																	},
																	{
																		"expression": {
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1647,
																					"name": "userRewardPerTokenPaid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "5185:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1649,
																				"indexExpression": {
																					"id": 1648,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1619,
																					"src": "5208:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5185:31:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1650,
																				"name": "rewardPerTokenStored",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "5219:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5185:54:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1652,
																		"nodeType": "ExpressionStatement",
																		"src": "5185:54:8"
																	}
																]
															}
														}
													]
												}
											},
											{
												"id": 1657,
												"nodeType": "PlaceholderStatement",
												"src": "5276:1:8"
											}
										]
									},
									"id": 1659,
									"name": "updateReward",
									"nameLocation": "4901:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4922:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "4914:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4914:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4913:17:8"
									},
									"src": "4892:393:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1665,
									"name": "RewardAdded",
									"nameLocation": "5297:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5317:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5309:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"indexed": false,
												"mutability": "mutable",
												"name": "periodFinish",
												"nameLocation": "5333:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5325:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:38:8"
									},
									"src": "5291:56:8"
								},
								{
									"anonymous": false,
									"id": 1671,
									"name": "Staked",
									"nameLocation": "5359:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5382:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5366:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5396:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5388:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5365:38:8"
									},
									"src": "5353:51:8"
								},
								{
									"anonymous": false,
									"id": 1677,
									"name": "Withdrawn",
									"nameLocation": "5416:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5442:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "5426:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5456:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "5448:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:38:8"
									},
									"src": "5410:54:8"
								},
								{
									"anonymous": false,
									"id": 1683,
									"name": "RewardPaid",
									"nameLocation": "5476:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5503:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5487:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5517:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5509:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5509:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5486:38:8"
									},
									"src": "5470:55:8"
								},
								{
									"anonymous": false,
									"id": 1691,
									"name": "CHECK",
									"nameLocation": "5537:5:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5551:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "5543:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5566:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "5558:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5558:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"indexed": false,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "5578:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "5570:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5542:40:8"
									},
									"src": "5531:52:8"
								}
							],
							"scope": 1693,
							"src": "373:5213:8",
							"usedErrors": []
						}
					],
					"src": "39:5547:8"
				},
				"id": 8
			}
		}
	}
}